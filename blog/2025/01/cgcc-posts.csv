Post Link,body,owneruserid,ownerdisplayname
"217589","<h2><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 15 bytes (filename) + 0 byte (contents) = 15 bytes</h2>
<h3>Filename</h3>
<p><code>Hello, World!.p</code></p>
<h3>Content</h3>
<p><em>(none)</em></p>
<h3>Description of program</h3>
<p>The program above should output the phrase without LF.
If you'd like LF, here is an alternative filename (19 bytes);</p>
<p><code>ak.-Hello, World!.p</code></p>
<h3>Description of language</h3>
<p>The main feature of this programming language to recognize filename as main routine of the program; content of the file is subroutine.</p>
Implementations
<p>So far there are two major implementations:</p>
<ul>
<li><a href=""https://vivibit.net/remember_pxem/#i-2"" rel=""nofollow noreferrer"">Designer's original C++ implementation</a> --- Distributed as pxemi.7z.</li>
<li><a href=""https://github.com/wktk/rpxem"" rel=""nofollow noreferrer"">wktk's Ruby implementation</a></li>
</ul>
","","user100411"
"218686","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (Filename: 5 bytes; Contents: 0 byte)</h1>
<ul>
<li>Filename: <code>x.r.n</code></li>
<li>File content is empty.</li>
</ul>
<h2>Explaination</h2>
<ul>
<li><code>x</code> pushes an ascii code of the character (120) as a signed integer.</li>
<li><code>.r</code> pops 120 to push back one of 0-119.</li>
<li><code>.n</code> pops the integer to output as a decimal.</li>
</ul>
","","user100411"
"220776","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Contents: 0 bytes + Filename: <s>33</s> 25 bytes</h1>
<ul>
<li>Filename(unprintables are escaped): <code>1._.c.w\001.r.yXX-.a.p.d.a.n</code></li>
<li>Content is empty.</li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKBKjUvRazlGK1rqsgK5AgoIxcJKgaOB89d49kyAQertu1yqZ@e3n7Mc8fAoef33@XHb2rN5uz@kW@oXtsr2r7@z0Sra@U@p3rb5u64ViSS@VaOlT4IRIdSbG5NkKnpCuFwqGMx2P/BCd1e6rZ2dmzcDh29hBD07YG3n9bJbPeqPnZ8uzyYFmOy@aN3FdVDjI0mw2EW5Wr76agogTPqSOFwo4iYgR@8iVeTxQ58LC7I9G/eb@@9WxWdD17QXY/Pa9fnP287727fLypHZlUqOFBDH6Uv3@9f765PJ7/VujIr/NBWSiN9TJZvmqRmg8CgbTeCZ/iUVu/4eE8zxxrdBBwSPnH41DGL6OfDsYu4Mwm7XcgRUg9QFJYkRlQTwS5pIpsa@UzTZ@nJ3Vzo/NCreBmT3bCB4H/dDgY8T4EsDpPY6Q@Jkwy5RZzoChwsi1D7IQ@hfLRUIG9S03cITZbJXGVXPp6SxwbCQF2lR704wAft41iSt8Rx0mxLmAZyHawwSPIAlVD6kv4YTOQh@ptQC1W7q610FSq@3lOtLswXfGKB8r1@6KO6IWVaqG2DUahtb2@LwJ5u7y@banaUa3aszjaeuO6aG0IGpjzQhXwbK@iVFKRW2UAnf3NjFKQdpLM5Y3MaqXRG2QZtzexPaA7z6NgeVeCtvZ3cQoBeEgvb7tTYxScPElzbiziVEdItZPu61vYlSHiDlpH/c2MUqLouanTRc2MUpB@jXNuLuJ0QL4M00zljcxWgAf39KMe5sYLYA/7@kk6L/BwB0rvejSJkYpxDZMWy5uYlQHd57T8d7dxKgO7thp0@VNrAjpl9MYuKimsG3gy6Qx8FpMY@DMFsPm0gz3rGS7sEnSlLxfteiUNeXUsKH/Tpl0G@fbpI3bHvvN59pE1Nrb7UKbasAVaPkcdOt0vb8rriFmIq31On17t@yOlokaRtcFhXPjDZpdQ5qhte4SKitxUUO2tqZD9ZCUmG/dHSkdsAse4FY8BBcKR4i58JjwxDjK54DEPYutw3rG3E1RUxjaBRcgxRHMMlEAo6o2NroXgMZsyhEo@GC0Pxht7XjBuMa2oCRxqPiGGMXmjhBTDVsc50bVBRJWeWjFTAMoba@F1PdOzmbaQn8FgSXx@HTixWqcZAHbmOc0XpwVS83B28rFh8o89y28SO25STy@QmSOqxCXaZJcHtll3OL4nCaa@P/YldiTJOu/E5TQ4uhYSYg26GPX6jquaQptKpCIrwS3xiNvcN8LXvqOHz7LGXFL7TDuNsXE0B5iHlaP7Ygq7TkjNXGbJjRr1aVg0sUCS4igMOlDGAsV4UhQuFkyTwyu8/@J@VjUur5jPfEJ5K2KBXc0GiNvFKJnK@w9DrwHAVilxXJlTLQupoT7pvKJmswyfKbHExEm/ywmW3zC2KAZeSNK/ZGfxAo8MgwSScZHl0pziZBf/2lUz09Miebv8738a1vXad7Pv93cqHkrP87b8OtJn2rfGlcnjStTkj7hsT/wwj4c7lxSTEjC7LWH1B6B4/tX4PdM6cvJab0RQarkwHFsEvhwrcJ8OO9PvF44GHmoiY9J9L31pPyNScc8NmDYkeUl/QSTyHfCie@hjAw8S8pfSwrgB3RJ@XtJYeqWhKs1AjOp0hXyDb4k0aUJXNwNVTUS5sslzwTXSMTXj2pL9BRfKrcfuuHa6A4850A/FPWKuuLY19iASA1eLne8FmWoGkEgaxCKoU3zP5j5iWeu2K7i84VH5zMBUgvxZ1fTQYhWTI9h6a@PA9fBGQgpGa1GEiYRgLPZBN8AbUnwcF25Vo4Vl7AscsHo2gQewzVdx3sIH/E1MViB1eF@W983XYNMMD42YS1B6ONrpS7LCiXkX4GvSzg8lovlSrFE5ksjA7DexKdrhu/xuVJTbpWfJDo3hfx9BTWgTSxkO73BM9w3YbHOg@PDdzwJBaNmgrhxCz4wX1iNg7vF3f1aNlvbL5UJbzwDsNq/wl2xtV3qiLBn3JrFolpLhOPeBBZcjsVoEQJSM83tAoliFngKhANv4sxZxBlrbb9YBp6D0i5hUGx8aTbWTH6a@CdBNbVYNlj2jCa@zf1cWWtvEf0mvloLQrAg3Kwm6wVyMlSuSVQ3dW5xaPI6hvAPWdkqQ1XtmNcsUWxW73AQ8tDh82FnJfT@0jREFPP@JDlWAysGX5dNs@nNFF8o3FYG2pFFOAOzC14i1@bFPuNNZK@XQm9/FDr4vdD7hxtMiruhrrkSLhbzCL1rrpGegfQExYLgpdTEjL5C7GILAhqX@F@swpvYOgRx2WKRqNwkETGWO0bOpGohh619neRYzuC7EtR/0vqGScfcJIvFw5xLoGLAjJDfgoMiD9UoVNCt48O9afAyCECNwAqFJcU6HB64h8Mtt@JuDSt8rPEx5Gge77Dgmal3oBzgcZfam4VZjwjS0rk@RGKN62Pv3nxs/eGtZcaHVHwzgIsXHFrszav63hOd9SYwsiUkIbVfWJxmcJFp4ixhj74VdxxezPEpGUHh8oJ@kmVDlof7mG3CrGgh5HH4h8kUBsT4/TLYcm3HdeBdDHmGVki2J2gQWa7vg7hM45bgJ02da5Qp9Em86cvxvDOXDHZSsT8IwNWph/gfDSasQ0bP7AkMoL8BLmNoF5HaKK4xzGZ4DM/xKrzxB7bihINnRxn3xhPlJXg3bHjIk9UcFP/84EWhNXDhOltcCTC7Ukdldq3hlydpZr0@gS5kmWqBFneL5e2dYhlJkSWboj4/aRwnp4YFlwDh0/@d/0RrEh32ESABcOALnCSJOtzJ4J@Agjg9WNgaCYqoE2k2tfwHiEF9ipLMTT@hX/p/AQ"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p>Give an integer from STDIN. The result is output from stdout, with no LF termination.</p>
<h2>How it works</h2>
<pre><code>XX.z
# Prepare character 1 at this point
.aXX1.z
# integer input is pushed
.a._XX.z
# duplicate, and is it non-zero?
.a.c.wXX.z
  # then come here
  # also \001.r is an idiom to push zero:
  # actually &quot;n=pop;push(int(random()*n))&quot;
  # where 0&lt;=random()&lt;1
  # because filename cannot have null character
  # don't be afraid of such binary for code golf
  .a\001.rXX.z
  # is input less than zero?
  # DOT-y to DOT-a is:
  # while size&lt;2 OR pop&gt;pop; do something; done
  .a.yXX.z
    # if so, push hyphen so string &quot;-1&quot; is made
    .aXXXX-.z
  .a.aXX.z
  # at this point DOT-y popped two items: zero and input integer
  # so no worry about garbages
  # print the string and exit
  # .p is actually: while !empty; do printf &quot;%c&quot;, pop; done
  .a.p.dXX.z
# if input is zero, come here
# .n is printf &quot;%d&quot;, pop
# OBTW the &quot;1&quot; will on stack, but it's not matter,
# because it is ignored when program ends
.a.a.n
</code></pre>
<h2>Previously</h2>
<ul>
<li>33bytes of filename: <code>._.c.w.c00.-.-.z-1.p.d.a1.o.d.a.n</code></li>
</ul>
","","user100411"
"220800","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 10 bytes of file name + 0 bytes of content = 10 bytes</h1>
<ul>
<li>Filename: <code>John Doe.p</code></li>
<li>Content is empty</li>
</ul>
<p>What a low effort.</p>
","","user100411"
"220804","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 4 bytes + Content: 0 bytes = 4 bytes.</h1>
<ul>
<li>Filename: <code>.w.a</code></li>
<li>Content: none</li>
</ul>
","","user100411"
"220806","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 5 characters (assumes arbitrary length of filename and arbitrary size of stack are available).</h1>
<pre><code>.acvz
</code></pre>
<h2>How it works</h2>
<p>According to <a href=""http://web.archive.org/web/20210503025421/http://forums.acidch.at/showthread.php?tid=7526"" rel=""nofollow noreferrer"">this archive of blog</a>, this is how to emulate a <a href=""https://esolangs.org/wiki/Cyclic_tag_system"" rel=""nofollow noreferrer"">CTS</a>:</p>
<pre><code>3.2.2.1. Syntax in EBNF

    Filename = init, main [, omitable ];
    init = dummy, data-string;
    dummy = '01';
    data-string = { data-bit }, end-of-string;
    data-bit = '0', actual-bit;
    actual-bit = '0' | '1';
    end-of-string = '1';
    main = '.z', { command, } exiter, '.a';
    command = empty-checker, actual-command;
    empty-checker = 'c0.z1.z.a.v1.v.c0.z0000.a'; If empty, data string is updated with a '0' string.
    actual-command = '00.a1.z.a0.zv', pushing-data-string-reversed, '.v00.a';
    pushing-data-string-reversed = { actual-bit, '0' };
    exiter = '.c0.z1.z.a.v1.v00.a.c1';
    omitable = '.d.pxe';
</code></pre>
<p>But these modification would make it still Turing-complete:</p>
<ul>
<li>Omit omitable</li>
<li>Replace <code>0</code> and <code>1</code> with <code>a</code> and <code>z</code> respectively</li>
</ul>
<p>This is thus the code to emulate the program (011, 10, 101) with input &quot;1&quot;:</p>
<pre><code>azazz.z.ca.zz.z.a.vz.v.ca.zaaaa.aaa.az.z.aa.zvzazaaa.vaa.a.ca.zz.z.a.vz.v.ca.zaaaa.aaa.az.z.aa.z.vaaza.vaa.a.ca.zz.z.a.vz.v.ca.zaaaa.aaa.az.z.aa.z.vzaaaza.vaa.a.ca.zz.z.a.vz.vaa.a.cz.a
</code></pre>
","","user100411"
"220807","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: <s>23</s> 17 bytes + Content: 0 bytes = <s>23</s> 17 bytes, depends on ASCII-compatible encoding.</h1>
<ul>
<li>Filename: <code>d.!.t.w.m.r.c.n,.o.a</code></li>
<li>Content: empty</li>
</ul>
<h2>Commented</h2>
<pre><code>d.t  # heap = 100
.w # loop
  .m.r # push(random(min=0,max=heap-1))
  .c # dup()
  .n # printf(&quot;%d&quot;,pop())
  ,.o # putchar(',')
.a # break if pop()==0
</code></pre>
","","user100411"
"220808","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a> (POSIX shell with POSIX utility ), <s>50</s> <s>47</s> 27 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>$((1${1%0*}-1$1?9-9$1%9:0))
</code></pre>
<p><a href=""https://tio.run/##TdA7DsIwDADQnVN4SKUWKVKcND86cBGWqg0qSyORbIizBwZqk@nJjm3Z61y2ds9PqKnUZS4JHjugNqN1PkTAHxQE56M1qBVoinEWNcuwRpZlOZZnBfU3Vx0kUYyy9I8qqJa6UD/eSBlvow5ugjWf4PtKqiAliOMCE6Rly3Brou9RvLBT57dEgdcoo8AuXtQwtDXvqX0A"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<p>The code above evaluates to a string of digit.</p>
<h2>Alternative</h2>
<pre class=""lang-sh prettyprint-override""><code>$((1${1#*0}-1$1?9-9$1%9:0))
</code></pre>
<h2>How it works</h2>
<ul>
<li><code>${1%0*}</code>. If $1 has 0, then remove digits from right up to 0; else unchanged.</li>
<li><code>${1#*0}</code>. Similar but from left.</li>
<li>Why <code>1$1</code> and <code>9$9</code>? Numbers begining from 0 is octal; but it would be syntax error if $1 has 8 and 9. They are for workarounding.</li>
</ul>
","","user100411"
"220823","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 103 bytes + Content: 0 bytes = 103 bytes</h1>
<p>Filename as follows (if your filesystem doesn't support LF, I'm sorry) (also requires to be ASCII-compatible):</p>
<pre><code>x
.p
x.n
.o.n
.o04x
.-.t.z
.c.zxxx
.a.m.m.w
.sx.oab.-
.s.-.c.a.s
.c.o.c.$.mx
.s.s.+.tao.-
.s.m.a.dxxxxx
</code></pre>
<p>Content is empty.</p>
<p><a href=""https://tio.run/##5VhLc9s2EL7zV8BxHEmxDCedTA@qFLsPt3WnaTpOcspkOBAJSohJggVAS3Li354uCJAAH3acTHOqPabJfXy7WAC7C4hyufu0j1K2PBbFlmbHUpHoEotlkPG4TCm6@BuoAUJRSqRErzQXzdGPQpAdUBGKaYJYzhQjKbum48dErOQUPVqmPLqcVBIIybKg4hYWy4qUhtGaRpfjx5KmieHQPA4a/KKU6/uoa4nP2mwhl7lcs0R9G/D5/Nvgvn23@DZxZrmkQn0b7IwUe/81ciHYFVG0sXF7YPU7piRao5ijj/D10TIQYgka7wEFMxmSE3SeK7qiYtLwERKESQpLflVmNFdnQnCBc7pBo5qEslIqtKS18qhR1o6238x//awG4W89BtqiEBSeegMK@k/JBEUjGZE8GQXDO/LcKVX4RCkRkiiiUnKBZhD2guUrxxKUxFTA16za6VM0UzQrgqG9bHUXH27qaJxaElpoWVKmKrSU8QRnVKwapc4K2EcvC5ojkseIbmlUKooI0uNACUvdBHIQGmvKFFXeLaqxzmZV2tExnyLt7SJnae2SKPPxr6CBl0TSnGS00p9MUUVsACdYD9zCGpSei2dtzyIeO8@0GY2jLQAKL0VEF6PR/f08ddqnRl2/GG9OtTDEtBapVmq43CmKFQ9Jba/lvYVdlklCBUBEpYAJnyJAWKk1gPVdejJ1XmAjF1iYzRroaGxRIMEbttsF0ZoIAG3031rRd43EPvrl7Kc3v6Hfzy7OGuKr17@cXVzgolQSPdj/YJVuZmj/g0a8mdoXHK3FzYNGrfbjcIGetjZq10H06BF69j1aLIyD8KWd047adfi277G2hWO@ySNYMe/8je57q1VuYZmY4/ec5eMH0wc@gplRbAqWkfPZhjIwOZ5MGMI6jsNwrD1oYQ8FhaaS9gzguqzpoExuSUb1/qGqFLl1vJ@2O9vcKn3wZv38@GXzNSpGaPEcjXipIFIhSdPR1DG5z/QZeUsrLzOfyQyT5R2l0KNbHc@rV81wKuHICEe82PkY0pDVWvBNSDakxbwyTEGvqJC0Da@TCyQIyL25kk4lqVVIHOp158NRw6NZKaBmteEuSDM1ICksChDbYn9yXjixjRHb@Ea2hrb1aTtDa43t2tCufRoxNNK2@RpyDRdE7KCGUuKklQ0dD3U28nEyw0kEz2qenyQ4yrlau7UEGrHRuOKsM@AXBFJUI3ZoHYxjKFE8920eGZYsl0qQqMvdM9wMFjIrUhaRrsBDI/BPyRWDGfVZBzWyKNJSNpyboT7E1hFczFxFa3ZCK9Ma8g@trqDW5l1tqwlvUZNgeAG9awpFvqZAoNXupAeW91yBrVIDCug4PMSeMpt5bYFzRKqY5ZDEICee/4VXVEVBP/sZoRMjjLmI0QwdPe3VXBx2bHj@tZJp1QSNRwfxaNIHiRyI3uID@vYdWibVV5dO3aWCDshAeK6cmk0SbR1L3OspJr6iTRVDY7aNQqcdqHH746AO16aZIdQo5TnFuqHxGpFWR4IrkYE4C89xl7J89HHVzaPHXtwm2mvWB9s4sLr@vS@hD6oa8taq1nX9iS7yHmgPbuvgtl2479C8UZbQ2mpAbyc9vxt555B3X4g8vxv52iFffyHy3dH4Q6MkXGwIbDzFYVcIQWXB81gfVzBpzGpz1nLES@C55sL2hBUZ5zy/poKfTD7fo5l@rN93@b2MlnurS5cuVbo0QSl6h1kepWVMT/rKh0/bbZuPVXvecqTqjLSVqqwtvg7xqIPoFen@wW4gIv5UEzfVpCMPZr7rzMHRPSfhfxjvVtyeDpyu64grL6ubLqWOuz1u3ZHaM6fb9DFDVaU6R@ronjYSPkzsYHRz0@MfeovCdjW31y696w/9Ta/tdrNEz8TRDLn7EdceDaVuz85RK3@TpbyfsT03nnazdfeoHn/xqB46Q3XTNjSiZOEBPx9L//MEJccSmhJ5nNzP5sHMC2TVDX6FyYPK5MFnTA5fEN16KzufI3031rgHB8oxL3TcpXd5Y8@c3oUR9gTvvFjLqFrzOMyYlPqux1xjDN7Y2eOk6QJshwpWsK0@oeInrYOt5rVOvIO4rSPpXVA9Hvr40V4wOtFOhINP@@j36lZshtZKFXJ2fLxial0uccSz482lujTxh7lYlgoxBJPAEkZjxBQiaAlPKLXg27JcrfTBpsaDqYtoLkGwzPXni/PXNSn49a8fX5wt5vMR@MAT7dzeKNgGuAi2OA8wrx5PngHlCCt8HeAIX2@38ElwBr@bAMst5mSJj@ANZCJgSC3F4e8hzraaLPEhVoQbmQwk4q3@CZzN4NXLNxc/ny1Go0/V@qj6wsq3KTKsyad/AQ"" rel=""nofollow noreferrer"">Try it online, with rpxem!</a></p>
<h2>Output</h2>
<pre><code>x
10
120
xxxx
xxxxx
xxxxxx
xxxxxxx
xxxxxxxx
xxxxxxxxx
xxxxxxxxxx
xxxxxxxxxxx
xxxxxxxxxxxx
xxxxxxxxxxxxx
</code></pre>
<h2>With comments</h2>
<p>Note that every LF is replaced with '?'.</p>
<pre><code>x?.pXX.z # print'x', LF
.a?x.nXX.z # print LF.ord # two-digits
.a?.oXX.z # print LF
.a.n?.sXX.z
.a04x?.-.tXX.z # i = 4
.a.zXX.z # loop
  .a?.c.zxxx?.aXX.z # essentially nop
  .a.m.m.wXX.z # j = i; while j!=0
    .a?.sx.oXX.z # print'x'
    .aab.-?.s.-.cXX.z # j--
  .a.a.s?.c.oXX.z # end-while; print LF
  .a.c.$.mx?.s.s.+.tXX.z # i++
  .aao.-?.s.mXX.z # break if !(14&gt;i)
.a.a.dxxxxx # end-loop; end program
</code></pre>
","","user100411"
"220892","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, (See below)</h1>
<h2>Depends on invokation</h2>
<h3><a href=""https://vivibit.net/download/dlm_download-3430/"" rel=""nofollow noreferrer"">pxemi.7z</a>, 0 bytes (on invokation).</h3>
<p>Compile the source code in C++ and run the interpreter with no arguments, like this: <code>/path/to/pxemi</code>.
The following line is output to stderr: <code>usage: pxemi pxemFileName</code>.</p>
<h3><a href=""https://github.com/wktk/rpxem"" rel=""nofollow noreferrer"">RPxem</a>, 0 bytes (on invokation)</h3>
<p>Just like nk.'s pxemi, run with no arguments: <code>Usage: rpxem path-to-pxem-file.pxe</code> can be seen.</p>
<h2>Programs</h2>
<h3>Pxem, 6 bytes of filename only, case-insensitive, boring.</h3>
<ul>
<li>Filename: <code>pXEM.p</code>.</li>
<li>Content: none.</li>
</ul>
<h3>Pxem, 18 bytes of filename only, case-sensitive output, depends on ASCII-compatible filesystem.</h3>
<ul>
<li>Filename: <code>@-.+23.+7A.+%+.+.p</code></li>
<li>Content: None</li>
</ul>
How it works
<p>On every <code>??.+</code> each character is generated with sum of two characters' ASCII code from backwards.</p>
","","user100411"
"220894","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 11 bytes.</h1>
<ul>
<li>Filename: <code>.n bytes.p</code>
<ul>
<li>Escaped: <code>\013.n bytes.p</code></li>
</ul>
</li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##nRhrW9pI93t/xTALZIYkJEGsyDC6irbLrlJX3a4VqE8koURDAiQoFOhf756ZhIu2z/O@ux8kM3POnPttdOyo//0XZJb3d8u9nW7FdiqVvbeOae/v71XKzn7Zvnf29irO24pt7u87b35Bw6k78Iql4sALisMw8qZeNHgTuTHS3QmbDOzoEZlmqcTc6TAcx@isfnd0dsbrjMSzoYu@uHE3DHr5vNx1w8HADhx6YDjukxFMfB@VDvJWPp9evji6/o3jLEnxkD5cEZAgmp2Lj1pdJgt9iVds/2o2bu6urk94yTR3VocXH64aN2ef7uofLi9P69fcYi2kBwhn58dHV7/dfTy9vGp8aFaBDOrk83MktQqR1JKJjXrMlus7tz@74g4mvh27KOqLC@EwhtVzOHaioe/FzPY9O0L6F6Rk55aKs7/ipcIV8VVY86@zs/r5Ca9KFqC0YOiwqO/1YsncQQIxPXC7/RBlf6EYcWShzmJBMsh9sn2EM6hn@5GLaT5PJFbUd8GucRii0HfQQb7EMqhKEx4SYbqIXAcpkTE1ZgaL4OeroUjKXyXlhAqgpDTWJEA9/4nv7zPwz9DzXUJJj5usa0cuELcw8gJEegWKemBq5kZ2l9lR5A7u/ZnwaggOPQqQ/hRPrEU8Rno9QqZV2invvt2r7COl1Q4KHWXxZewOUXFhPz8i5fj0faM5B4uR4dgL4h5Shhfhh6DpNe669ejq6WPvnXs6vnz@e3oz@/T11j6KrwfnzomqZ7K5nLL4DxyzJsf1FkZZE@EOb2MMVvDDZ3dMokQEgnNdrGVNShFuY4YZmE6R7iYYa1carmLKfDCLw8tv2XJ@1fJVtcOzJvN6xD/gpXwejvRSh3Mnnwc2YLQ6nfs6L7EzQpnkguqtrNlhy@Vp82QuTpe9SdCNvTBAsJsLSnSeyIN9zJ77whs@TU8QRlctXfc7KbEbIKRI9fQnFIIrpCPxyrzJbUg03wvcA5POA5Ubrefp7GvH0A3bEIIHNTNliIs2Oi6jYoKAF7hrx8iCGBG56MGSLSUeaEYSKnbHOMToV5AqUIFcFYOBgGQo9TAcI5/PBFTelTaCEzqf8EC3Ur2Cg4lETSWs8Y0oiRDo2QhR0f6pLK91SYTDdioPYCyXQr9/QTIVdQmOZ2lY5qJ2WxSJVbjjBWmhxMxI92NUEtUCKC1WXrC5KT4ROAP8Bas@HChRAUw2DINu9DSOO0aB2DWLqkZLhXDWk32Jgn/cacyWxtCYAxkWQbIto5rF4C8F9WHVB8Vjo5DJ2BCEEc8YrZ6beoPZwijeXcdQDR@oNt/pwIbY4HsQoAuGaoVBBALAYV8cGgNDB7AFq5UsbGlB5L9Sc@eFmsr8ouWppoz9IRdrVbcgqIeZbxC0Ky18Q6CJfBiid1comtxH8ZhkTW2HsguIYq/DIX6tGmnyJMuGmq29u6JQ70DUOeATnMVwguxWs6MltChzXN@FupxQYMtmbQfwI8ErJblepHJEKS3U@ow6KlC8WdPaiNE8gPQlwghgAiiVRiub60AAC9YF@AH9wD9TLvZsxpMTEdTT2oxOVT7TyYxPIcm5SNteOCYPkPYPNUBjdJhYwG49QMFg20aBGCNGWzUOp@qsCu45nOrwzcC3AN8cfHOzKlTzH9QW5SPhYgIXjyUVAsCSBUTwqhVAOhQLWcNYF0N5bnz2EZjFMESbEHYpGBckT5nxBfbIgM89dC8Zst4dBG3PHceDDpjSyEPNMljMVrkHR0kyA4DOJcQWh0u5dMRSVHnRpHppj4OpQDQiRaQbMamyWCR7B0iP3XgyDkTlTbiogoDtOCuuuthH9/FqnxF7aNWrfTsrDhzvaXWQkwjhikBkFAvG39fvCM5DsQKrvJJs3Y6SCnrVeuQQ55CLqz7QT/qAAs0xXhUJRdh7sb66ruguOabzR1VlQKbD4UfEjPDaMVA8rolTdqyqFBbacYoAi1fEhejAgMo@5yCoR5RBFkbdsTeMeSooRGLkus43XMQ0GsOIJbfb7eWCnFChj/YHoR1@ImUC0TYIp9B/EvNn/njRmH5fAxAADqwt0B8bkNRmA7l@ARFMZYlYw2/IJZ1fckCTkuh66np0uYU0IfW0fBPdqtXz@XqttPuWHtah1WyhvRe0wAKT4JtRNATZScAmAQekDdF0te6Gh1mzqm/r8pdgBrfqW2dH5HzVP46qWDvf7hrJcWbTPta3hqB7khQZMCqdkBv43YKHSaf/OTAgDW2knWj@Bmc@4oAEs4fvBl/iPhlRGUUN6A@NGvdZA2JoQsgJT2vsSGtoFqXfcMvU9zv48EQtV6rlXeCyYeOBDBfk/Uved@Rcq2u32ic6P@e4eFdFzTAWRcr94o4xq3PAZ7fAVrBnTEpY3kscs1uh92PXfhRFsf4Nfy63dnY7WUznt7xc1uvp5QRFNGZSSe5ZZWhGdc53RANMkOBdEHvBxGVLYf8Eu14rVwTiwe4epfJYyrDhnjCgn/gnROo6IDPhUHZBbguftnXsbhn/gly/NEC0Bbx5kQRP4JYH7SOVVRdMb0LGP3AZ1uCEB7DFR5HAWqPD5EeMhmLxkOwfdL3DP247YLzFSizG8DoJA3@Wz4NMYhQ6Irg4riJYYqGGSAKZ2LQgIuaFM583yQbkoBQBRgZIbMk/JX9qo4Qj5DNNsS32pwytJMDSwz9ro62Ls39x8WD74te1UCS5upIrFX@NGG9Zoi8q5UvLDxLwo5in@@AygbINd4RntlHSVinw2CMUlhcek2WqIWqvCvWIiNQpkAf5m1REShO3cYki/LlhJRuR4PS7DB6QU32VvaI1NdYokGHAGFB0gVYzD/VGtfHCc7J1vaBYeEVR9LJRWg1@T2OFSLODyL788jRaslV0647DzDpeRgf@4cjwq74xonSbK/TD/5Nm7qc0c0AzJ2mK5v79XfPo/JQrbdPaKQbofha7UXGovKl/aF6fNq@5onxPmxnOSlS8SB@aqPdmDUmxN7Dum9e3nrtI70Lx/cmlH0HyTjtYo2wD15bogfXXb9Atcv/tgdm8ROKNBmOxsojEPyr0R2QFY81aTWOfZUUuoDYpFto0C0NX2xJjCF1ieHOIls3lsKR3kfxPykRkfDgQkwkcjn843IjplJHeLL9AECNJBPAQDT1Hc2Nv4GrD7nCiPUVfmWPHLt1Ws/y/1Yxtz0d6UC6t1AElSLE9r7SXQpm2ZSibZ5Bessp75crO23IFHgzwMAGryLE1mVTt5Jn17@0sHleJncQHi7fZahjCK4QRbyvi@@HyCoJvNcyJOuDB5OWJIYLBo4V2WzD9r5//7XYuxJoHyQdjpZyo0ql6hHA7APfA3aTpJx0/6fzwdrjM7ZqcW6lmEcKreEIjuJTeXqbgbvIPAGGJH1nAaz7qIz36/g8"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"220898","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, 26 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>cut -c7-|grep ^\ |cut -c2-
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/P7m0REE32Vy3Jr0otUAhLkahBiJipPv/vwEYKCTlJGaACS4w31BLIbGgICe1GMI1UsgvSsxLTy22h/CNtRQqUxMzdGDCeiBhLQMThZz8slSF3FSF4nwgAZUEAA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<hr />
<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, 29 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>cut -c7-|grep -vF \*|cut -c2-
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/P7m0REE32Vy3Jr0otUBBt8xNIUarBiJopPv/vwEYKCTlJGaACS4w31BLIbGgICe1GMI1UsgvSsxLTy22h/CNtRQqUxMzdGDCeiBhLQMThZz8slSF3FSF4nwgAZUEAA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<p>OBTW it's POSIX-compatible, if I remember the specs correctly.</p>
","","user100411"
"220899","<h1><a href=""https://www.gnu.org/software/sed/"" rel=""nofollow noreferrer"">sed</a>, 11 bytes + 3 bytes option <code>-nr</code> = 14 bytes.</h1>
<pre><code>s/^.{6} //p
</code></pre>
<p><a href=""https://tio.run/##K05N0U3PK/3/v1g/Tq/arFZBX7/g/38DMFBIyknMABNcYL6hlkJiQUFOajGEa6SQX5SYl55abA/hG2spVKYmZujAhPVAwloGJgo5@WWpCrmpCsX5QAIq@S@/oCQzP6/4v25eEQA"" rel=""nofollow noreferrer"" title=""sed – Try It Online"">Try it online!</a></p>
<h1><a href=""https://www.gnu.org/software/sed/"" rel=""nofollow noreferrer"">sed</a>, 16 bytes</h1>
<pre><code>#n
s/^.\{6\} //p
</code></pre>
<p><a href=""https://tio.run/##K05N0U3PK/3/XzmPq1g/Ti@m2iymVkFfv@D/fwMwUEjKScwAE1xgvqGWQmJBQU5qMYRrpJBflJiXnlpsD@EbaylUpiZm6MCE9UDCWgYmCjn5ZakKuakKxflAAioJAA"" rel=""nofollow noreferrer"" title=""sed – Try It Online"">Try it online!</a></p>
<p><code>#n</code> on top of line is for <code>-n</code>, which is <s>GNU-extension</s> <a href=""https://pubs.opengroup.org/onlinepubs/9699919799/utilities/sed.html"" rel=""nofollow noreferrer"">POSIX-compatible</a>.</p>
","","user100411"
"220901","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 88 bytes (filename) + 0 bytes (content) = 88 bytes, with non-printable characters.</h1>
<ul>
<li>Filename (some unprintables are escaped): <code>\001.t.i.m.+.w.i.s.i.s.i.s.i.s.i.s.i*.zAB.z.i.c.o\n.a\002.tXX.a.m\002.zAB.i\n.z.i\n.aXX.a\001.t.i.m.+.a</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##5VjtU9w2E/9@f8UCJXcHh4A8nefDPVwgbWlLp2meIelMZ9KMR2fr7lRsy5VkjoPwt6crS7blFwjpNJ/KDD57X367Wkm7K8l8vvm4AzGfH8rshiWHStPwisj5IBFRHjO4/D9SBwBhTJWCN4YLJ/BSSrpBKkDEFsBTrjmN@S0b7VG5VBN4No9FeDUuJABUnjH5AIsnWcyCcMXCq9GeYvHCclgaDSr8LFerp6gbiU/abCDnqVrxhf4y4CcnXwb33fvZl4kzTxWT@stgJzTb@qeRM8mvqWaVjYcDa94Jo@EKIgEf8OuDYwDwBYy2kEK4CugpXKSaLZkcV3wASbliuOSXecJSfS6lkCRlaxiWJEhypWHOSuVhpWwcbb7ZX/MsBuFvPY7aMpMMn2YDSvZnziWDoQppuhgO@nfkRa1U4FOtZUDDkCklJEwx7BlPlzVLMhoxiV/TYqdPYKpZkg369rLTnd3dl9E4cySYGVmaxzpwlNGYJEwuK6XWCtiB1xlLgaYRsBsW5poBBTMOWPC4nkCBQiNDmUDh3awY63RapB0T8wkYb2cpj0uXZJ6OvkcNMqeKpTRhhf54AgWxAhwTM3AHa1E6Lp43PQtFVHtmzBgcYwFRRC5DNhsOn@7nWa19ZtXNi/XmzAhjTEuRYqUG841mRIuAlvYa3jvYeb5YMIkQYS5xwieACEu9QrCuS0eT2gti5QYOZr1COowcCiZ4y653QbiiEkEr/XdO9H0lsQPfnX/z6w/w4/nluUd88/a788tLkuVawfbOnVO7n8LOncG8n7gXEq7k/XalWHqyP4PjxlZtuwjPnsHX/4XZzLqIX8Y946pbie@6PhtbJBLrNMQ1897f6r63RuUBlo06@UPwdLQ92fYR7JwSW7KsnM@2lJ7p8WSCAFdyFAQj40EDuy8oLFasY4CUhc0EZfxAOip3ENO5TJ3j3cTd2uhO6c6b4ovD19XXMBvC7AUMRa4xUgGN4@GkZgqf6TPShlaaJz6TWyZPW0qBR3c6/sKrhlMIh1Y4FNnGx1CWrFdSrAO6pg3mtWVKds2kYk14k14wRWD2TbWqVRalCo0Cs@58OGZ5LMklVq0m3CWtpgYlpUNBYlPsZyGyWmxtxda@kRtLu/FpG0trjO3W0m59GrU02rT5FrONkFRusIoyWktrFzoRmHzk4ySWs5AiKXl@mhCQCr2q1xJqRFbjWvDWgF9RTFKV2L5zMIqwSInUt3lgWSqfa0nDNnfLchNcyDyLeUjbAl9ZgT9zoTnOqM/aLZFlFueq4tz3dSKukpBsWte0aic0cq0l/6/RF5Taoq3tNPEtrBKMyLB7jbHMlxQMtN6cdsDSjiu4VUpAiT2Hh9hR5lOvMagdUTriKSYxzIkXv5Al0@Ggm/2s0KkVJkJGMIWD407VJUHLhudfI5kWbdBouBsNx12QsAYxW7xH371j06S76qpWr1NBC6QnPNe1mksSTR1H3OooLnxFlyr6xuxahVZDUOJ2x8FqXJdm@lDDWKSMmJbGa0UaPQkpRHriLD3H65Tlo4@Kfh72vLiNjde8C7auwcr690eOnVDRkjdWtanrR6bIe6AduJsa7qYN9xxOKmWFza0B9HbSi8eRNzXy5jORTx5Hvq2Rbz8T@fFo/GRQFkKuKW48LXBXSMlUJtLIHFgIrcwac85yKHLk1c2F6woLMklFesukOB1/ukez/Vi37/J7GSP3zpQuU6pMacJS9J7wNIzziJ12lfePm22bj1V63nCk6IyMlaKszf4e4kEL0SvS3aNdT0T8qab1VNOWPJp53pqDgydOwr8w3o24Hfecr8uIay@r2y6ljLs7cD2S2pNat@pj@qpKcZI00T2rJHyYqIYxzU2Hv@8tCtfVPFy7zK7f9ze9sdvOEh0TB1Oob0jq9qgvdXt2Dhr5m87V04xt1eNpNluPj2rvs0f1VW2obNr6RrSYecAvRsr/PIXFocKmRB0unmZzd@oFsugG/4bJ3cLk7idM9l8RPXgve3IC5nascg8PlCORmbgr7/rGnTm9KyPiCT56tZYwvRJRkHClzG2PvcjovbNzx0nbBbgOFa0QV30CLU4bB1vDa5x4e3EbR9LHoDo8@PDBXTHWoq0IDz7uwI/FvdgUVlpnanp4uOR6lc9JKJLD9ZW@svHHuZjnGjjgJPAFZxFwDRTm@MRSi77N8@XSHGxKPJy6kKUKBfPUfL66eFuSBjj9WuZ4Zvj@l5evzmfbvx8dHRNNOEnIPlnjr@r@75Hbl9@QW/wIifg9JRSVnhP922@EkqR4N3yOnNviSQ2nAUy3B4PiyqA0S@fk4LPNoqGD0iwN8b3HbAO4MIuxfvP618tvz2fD4cfWxVDhDTEtrtkH91C8QXXnNsbEt3NntbtS7hw@xpTeRtrv10F3it1QdMGFxgSs5PjjUfEH85iuiseg@D7eA5pluJzt53PAM3G6ZOrUfv9nDzaMriYlmRjy3tHXEItrhtsHlMCHYw7@Ag"" rel=""nofollow noreferrer"" title=""Ruby – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<pre><code>/path/to/pxem/interpreter THAT_PROGRAM_AS_IN_ABOVE &lt;input.txt
</code></pre>
<p>COBOL program to be input must be fed from stdin, with LF-styled newlines, whose last line is terminated with LF.</p>
<h2>Alternative: Pxem, 100 bytes (filename) + 0 bytes (content) = 100 bytes, printables and LF only.</h2>
<p>Filename is as follows:</p>
<pre><code>ab.-.t.i.m.+.w.i.s.i.s.i.s.i.s.i.s.i*.zAB.z.i.c.o
.a02.-.tXX.a.mac.-.zAB.i
.z.i
.aXX.aab.-.t.i.m.+.a
</code></pre>
<h2>Commented version</h2>
<pre><code>XX.z (this is just to format well
.a&lt;0x01&gt;.tXX.z (reg=1
.a.i.m.+.wXX.z (while getchar()!=EOF; do (obtw EOF is -1
   .a.i.s.i.s.i.s.i.s.i.sXX.z (5.times { getchar(); }
   .a.i*.zXX.z (while getchar()!='*'; do
      .aAB.z.i.c.o&lt;0x0A&gt;.aXX.z (do print(c=getchar()) while c!=newline
      .a&lt;0x02&gt;.tXX.z (reg=2
   .aXX.aXX.z ( break; done
   .a.m&lt;0x02&gt;.zXX.z (while reg!=2; do
      .aAB.i&lt;0x0A&gt;.z.i&lt;0x0A&gt;.aXX.z (do c=getchar() while c!=newline
   .aXX.aXX.z ( break; done
   .a&lt;0x01&gt;.tXX.z (reg=1
.a.i.m.+.aXX.z (done
.a
</code></pre>
","","user100411"
"220903","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 115 bytes</h1>
<p>Also TIL that ifelse can have more than four arguments.</p>
<pre><code>define(f,`ifelse($1,101,,`ifelse(eval($1%15),0,fizzbuzz,eval($1%5),0,buzz,eval($1%3),0,fizz,$1)
f(incr($1))')')f(1)
</code></pre>
<p><a href=""https://tio.run/##yzX5/z8lNS0zL1UjTSchMy01pzhVQ8VQx9DAUAfOTy1LzAEKqhqaauoY6KRlVlUllVZV6cCEwaIoIsYwdToqhppcaRqZeclFQHFNTXUgTNMw1Pz/HwA"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
<hr />
<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 143 bytes, <a href=""https://pubs.opengroup.org/onlinepubs/7908799/xcu/m4.html"" rel=""nofollow noreferrer"">SUSv2</a>-compatible.</h1>
<pre><code>define(f,`ifelse(`$1',101,,`g(`$1',ifelse(eval($1%3),0,fizz)`'ifelse(eval($1%5),0,buzz))
f(incr($1))')')define(g,`ifelse(len($2),0,$1,$2)')f(1)
</code></pre>
<p><a href=""https://tio.run/##XY07DoAwDEN3zlHURMpA@NynfBJUqXQAwcDlSxGIAXmx/WR5aVOaRH0UUHJeJWwCzrAlrpjIzU94gRx9AMNlg1SR@vNEZ3@ou9GwZ4SFgo/jmltEm/X@zN9PkAimvgeGKRuLCowpXQ"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
<p>I am not familiar with M4, but I tried some bests. What quotations can be removed?</p>
<h2>With comments</h2>
<pre><code>dnl def f(n): return &quot;&quot; if n==101 else g(n,(&quot;fizz&quot; if n%3==0 else &quot;&quot;)+(&quot;buzz&quot; if n%5==0 else &quot;&quot;)+&quot;\n&quot;+f(n+1))
define(f,`ifelse(`$1',101,`',`g(`$1',ifelse(eval($1%3),0,fizz)`'ifelse(eval($1%5),0,buzz))
f(incr($1))')')dnl
dnl def g(n,s): return n if len(s)==0 else n
define(g,`ifelse(len($2),0,$1,$2)')dnl
f(1)
</code></pre>
","","user100411"
"220906","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, with these restrictions</h1>
<ul>
<li>with <a href=""https://pubs.opengroup.org/onlinepubs/7908799/xcuix.html"" rel=""nofollow noreferrer"">SUSv2</a>-compatible utilities</li>
<li>no built-in loops, no built-in branches, no variables</li>
<li>1 pipeline</li>
<li>no awk</li>
<li>no LF in pattern space in sed</li>
<li>no hold space in sed</li>
</ul>
<h2><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, 103 bytes, 5 utilities.</h2>

<pre class=""lang-sh prettyprint-override""><code>echo ,,fizz,,buzz,fizz,,,fizz,buzz,,fizz,,,fizzbuzz|sed -n ':x
p
bx'|tr , \\n|sed '/./b
=
d'|head -n100
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/PzU5I19BRycts6pKRyepFEhCmBAKLIAsAhKoKU5NUdDNU1C3quAq4EqqUK8pKVLQUYiJyQPLqOvr6Sdx2XKlqNdkpCaCVBoaGPz/DwA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>

<h2><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, <s>124</s> 121 bytes, 9 utilities.</h2>

<pre class=""lang-sh prettyprint-override""><code>echo xx|sed -n ':x
p
bx'|sed s/<span class=""math-container"">\$/fizz/|tr x \\n|paste - - - - -|sed s/\$</span>/buzz/|tr \\t \\n|sed -n '/./p
/^$/='|head -n100
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/PzU5I1@hoqKmODVFQTdPQd2qgquAK6lCHSxQrB@jop@WWVWlX1NSpFChEBOTV1OQWFySqqALgwh1SaVQdTExJWCVMCP19fQLuPTjVPRt1WsyUhNBgoYGBv//AwA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>

<h2><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, <s>133</s> 132 bytes, 10 utilities.</h2>

<pre class=""lang-sh prettyprint-override""><code>echo|sed -n ':x
p
bx'|paste - - -|sed s/<span class=""math-container"">\$/fizz/|tr \\t \\n|paste - - - - -|sed s/\$</span>/buzz/|tr \\t \\n|sed -n '/./p
/^$/='|head -n100
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/PzU5I7@mODVFQTdPQd2qgquAK6lCvaYgsbgkVUEXBMGSxfoxKvppmVVV@jUlRQoxMSVAnIesClVlUimaSpgF@nr6BVz6cSr6tuo1GamJIEFDA4P//wE"" rel=""nofollow noreferrer"">Try it online!</a></p>
<p><a href=""https://gist.github.com/GH-TpaeFawzen/0a23c4fe668824068f1dd32404d666f9"" rel=""nofollow noreferrer"">Originally, on GitHub Gist</a></p>
<h3>With comments</h3>
<pre class=""lang-sh prettyprint-override""><code>echo | sed -n '
    :x
    p
    bx
' | # yes ''
paste - - - | sed s/\$/fizz/ | tr \\t \\n | # if NR%3==0; then $0=&quot;fizz&quot;;
paste - - - - - | sed s/\$/buzz/ | tr \\t \\n | # if NR%5==0; then $0=$0 &quot;buzz&quot;;
sed -n '
    /./p
    /^$/=' | # = is to output line number
head -n 100
</code></pre>
","","user100411"
"220909","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 9 bytes (filename) + 0 bytes (content) = 9 bytes.</h1>
<ul>
<li>Filename: <code>CBB.-.-.o</code></li>
<li>Content: none.</li>
</ul>
<p>The code is equivalent to:</p>
<pre><code>push 'B'
push 'B'
push 'C'
push(abs(pop()-pop())) if size&gt;=2 else nop
push(abs(pop()-pop())) if size&gt;=2 else nop
printf(&quot;%c&quot;,pop()) if size&gt;=1 else nop
</code></pre>
","","user100411"
"220950","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: <s>96</s> 81 bytes + Content: 0 bytes = <s>96</s> 81 bytes.</h1>
<p>Thanks, Neil, for providing a workaround for -15 bytes!</p>
<ul>
<li>Filename (some are escaped): <code>\020.z.t.m\005.%\001.yXXbuzz.a.m\003.%\001.yXXfizz.a.c.c.z.m\017.-.nXX@.a.c@.z.pXX.a.s\n.o.m\001.+.ct.a</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##1Rr9V9tI7nf/FcIEYhPsxEmgQDBdltJt37Wwj9Jb7hrKc@IJ@HDsnO0kJJD91/ekGX8mgcJud99e2hBbI2kkjaTRfNhWePNb1@8PHJcpqiJJqyvVjuNVwxt8hMEd63f1gR86d07Y1@FnfNciX7PGtxATBTri/RI4UcQ86EzgfGCxt9Z4yjxq@OB0mRcyHY6OarokhSwCjQ1hFf@CE0LPDyCceJF1BywI/EAa9q3wFmq1el1idwM/iODD0dXhhw/mkRRNBgyuWdT1vR4cVG02qnpD14X6wboB6@uiHYXqW569rD3m9/Ph@TtTLikJpjZImVKTWrqnn8reTDxoMzmh/Hzy/uLq0/kbs16rNVAFEv7dz9rni5T16af3Fx/@dXV0enZ2fHRuGjHSTyefYRg5brgJHTT3JgzsW7Rv1woZyKX7Hw8/vbv65/HZp/enJ3uVyUwGxwNlokoA3F4@8AGIXys/IlfbCa2Oy4B1b3y4tzbDTXsGkQ@dGGRBCLbUarHQ6qb9/PvRblh/6FoRAxSKd@IPInwe@4EdDlwnQqDlOlYI2jWUS/dGRS79IM/KZpl@y9h68vnDh6OPb8y9pMtVCNh/WBe5jII6dPxh4LFEDgUJFK6KPez3Jy3syelFrQwCxDYFc31Kq6BKqpDYIIkHgeNFPVgL222PdKutrm5UZ3vws8uolyF@PTZmgRgTjXzVihwyWXjDXFeXSes7JwJjmcjNRGQ2slyQV6BnuSGT4eEB7r9v5zNJ4o5/p6hPcS7VU5oSJ1qFRgMa29B4Bc0GNLdgF/@/gt1dMGo1/Br4reN3C78IMxBmIMxAmNHEL8KNbfzu4Bfb69hex3YMO2TdtxwPf66ZxwJyC/SmYWcQ@NeB1Yde4PfB88c4nBHs72tlI4xu7KAs9YZeN3J8D6wOBoPSD68zlUDmWoIBMmBDK1ZGqakt1CalxEAMFcCBiDa7nNjpKU5n2OuxwDRlmYOAQqrLeu4wvFHUFocggakgcYQ2fyAuruNhfhGUMQ6yQrR9s6YSOo4u/YimruuHLKbn2DP8ds2YviXk6K78KkMiQiKULCfoDB1EtKGtFBn0jZK8KcuoRyuDfvkKlxvA4XnhiN72XdcKamaXALGARsE4fWvSSdSmnvhjGLFBpRKLmEIOTP5oRbG4Ygw4TEiTYpo1IUCun7x5swFMiQukOTIn7LiWd6uIgYs16Jpmo/7woOzum9319e6@aTT4iP94/NP7k3ueeQbRxJT5j5yyN2X@Iy/0l9lJWJ6nJwXNGUZW93ZT3pPVIjh0piwDB5jwFfoTMmZzELl67IXCj8n/IxSH8qGYn5jVvYGwGziYFP2eeA18zOeYH1ZXQZcCZtm@504wAVthn88tPDTK56eHnz7mAgN/rYETWa7i5Y2kbG/tm976urdv7tbU14pXadTVPW/Out2@XSRr85FUPDRxQ0Ub08N28vAqfmgmTc0tfEhodtMOMUvg74q5uy1@dnJYSIUJJAfAVJLS1QWdYTTi31fFgcUBwOThxuM0CNhIjNlMyrcqyQNF9@tSbU8p1TBFyAkC5yl0z4xXqqnq@rpgadp@FCeKmATD9KuIM/63lIQsD8B8i4jDrKM4ScSAX6t6VeWwNIW5mVxJ1Mb5Wl7rtj15syBia84IQnEhdYmHzvHJm6LoWZ/LepxJ3J9wGpTI736AN6fnbz4eHp2dvjs@Oy544fi26IW//KOcjYxz7fkBu7IRH6elGxFWHgsjihUR1CU0rGzJsXRpG@bOfD6RdYvqLQwTzEvIEvTxJuh3@J1sAgaOPsUZE2QSwzhYr8utPO1qoe6DeHaJccTkmBg56V/TWsvFRxeZA5rGPSe8i4Q6v1a/fhnfTaaXpep9jiNlTmw2UFuXa3st0nRN272soHvwrPLFsUUewYfLS3O9lb4guUgsgowcCqdtiJMNgXSdnExtJa5Sio2dyIUdD7BjYZO2JPPJTXHMtAvNaDkHqKOjaeo9@phASqyYyudctnKNNnMZVXPLWmfpU9oHspcXxPKLYqEbKOE0k0s9qD0lD@JqhvqkUEtQMq21nMCLsnkvk83rm0/1Sh7e3y@SJAo1t1oFqNffMHFIcrBZ7tkPzeZOBemQ4ZqBKSDXRuOKgojGKjV6/YNaqwCaE2GeHU5rPN0obRnLw7asIsZjogjxi@3fcQSc4gjkrZ/RoWHj2XrFRJFlNd9RGlnTSzPGyiipmCJyXg@qgOP5ItLHkPMjl9QRJFhrMSYotBe0vloM1VarMGiZyuaCypDTiJehok5uy/rVHpYGuIbE1Qez4fj0LRLOeWhSXcXc513l93LGMtf3sJIZssccKa8RFhPFbsNr02h9J0E6OIHdPkuKrUUptL9MjObOfuJ06@vxw/7WzjcN8yTfvHyONxhGuMCK8Cli1ywoiDjLR9djsoA9SuBac2curBb7csJHu1vu4nnTLuj1bBuRkKMNo1ZRMllf6JxznefmtiUTd3i9YY@eG@rdl00xhTTzrASLvT6VYMOX9f8dU/voOaldVClYluzT9BROq3W15VQqRZuMzUfqkxy4aCxnQeiFVjMcPyl@T85tOlCax/nSwbXeIiYrKppfXue8ZNgZIH3FWMYheNkgUXs0WHAPleKo4PZpiAaUrmzWw6WmzdeiiDqXsea58XKCr3PVjWigPmmr8Tfns@VG@baqAGP7yTh4lss@4rSxANjD0gS0RNG776ioWZ/T9K5jrijzauwXAHUc5d@h/TKk@uMmMusLNrrrPM9Akz/TQJNlBjr4exho8kwDTf9MA0075oJ9TPPvYaDpMw1kFfPuEozoZdnyhlkD8y9aUPYXRKPeV0y@Lbl8olcywS9Nwv49s7zNjVbYx2kt7rmI7ZDass0PY4Fl5VtWnvO@edeo/FU21/6goNq3FvXzBPu0gp6Dza/mv6N@K39Qv42/aiBKLxR0ZJhP5ZNR/U8RnAs2MjaQfWFFV9qDKQt8zXZGTuj43lPlEUpqjuoHI@M1FUmjenVkqHv80aiO6k/XSmv/11Za@wNWWsustPaElbLd7CR3rczvF5/4uKILAhYOfM92vGvQLV7V/in7xny7/Jd/iO3y7CyTDnzS45vkCLPnWX1WPMTkB0NoETERcT34jMSnBL6/m9s@lRIGkrQH/Lnv2LbL6NpBeqRL57kGP89F9STfBu0QPNAiGBqgjRAUBaAdhVAz6o3m1varnV0of2l7G5dlbLsO2AB0fKCbF4iN6xqzuY0s@ZmTHDeIw/W5Q2R@HkAYdLRvQ5lbqlqYdKrdtlTGT24CF4dMLTp2LnMbxor1UEq6TEGn8uVZmWzbvWHdWxx4dIUuC0MroDMIoPMI6Dkuk2gNZtZIZGbW0tsIiSnoSH9D/9J7e7mh8uWaacDcxYU5VHYco7IFVKKnP0wg19LJM8EjcX0vYh4/yyPxwAqTM5Y8l9xdA/ISuWQIEy4ZN4CnRg4gHbt4AMKqvlFdvkdRPFyoCnpFGDt1zWRNe19ukWzxFQkcDDW5y5BTJLHEEkOkMYGL3PmIICMVAyJeCT8zIPJbBKIBaXkK49sE0vJtAIFDuwXSfBnFYzqWSioEVf1vG07xfNEWb/KiTWhPRWyb8KSaISbGiQ2SYGvG5WVxU2WRLkOl4nOhfdnZ0BzSbB6Q0GT7QHMISbJopdmi4EiYM8rSE9pLz1dYWtRRekSt5GLFvPCS8CMUioKg53iW604kER2SpP62Sn5ts0Cfv/1G2D5GVNxyV2iJbtgErICJ@zHUXmju@7bTc9BfLOhgRzTrnb8/pRb8fxNFg3CvWr12opthR@/6/epP77TsIl21wE5ajS/mpRDawRX36zAJr8Bei6TxpLcnhx@P6SA49uDyxYU@lXSrXavX9Cm9ADLCBStst2B8Q7kQSW0fjaZbehQjUJCDCQN/sCIa@u1abUtfW8MfQ59cXHSG06luxdiCDdGsrW1hAUD8RB8y4cmteDGJYMw2Kb9Gjl/PeYRfo8iP8Jbx6@K/KXE1Xuma7l1c/JByQ/PwdPVaWEiENl/racaW2ooZ0@WznsPdisYVjYv/b/wxzWqCHMZ@cBvuxSiy6BI6rpV@dUuOW09Oz4/34K3luIBZlMbNoXQDr6ZA1w/P6EpljHpOPuQx9JLQ7zPAFR5OrenpuuOhd7su1k0x@vv@wGV9nMosnqCJMIwvAdp@d0gt/O6Z61heFNvmBzTNAK2Rs0iEI2typTOb0HADdrYSWwJJw8RhEkdoe7qfwETVgFkhG1JDr@RdjC@RwbJttAIjKZ1IIoGiVBQ@kHyI/ju0XEIxjG3EKWM@@XT6@eyo4MsEpfOMRS8X7q1HjzjqI/621G1y9tJD0jfRjMv9uGA957f8DMVFlB/GXdC6vKQtzF@CxaPNnHgZEs1NNEuJyzk4icV3vkwxbfF6mN@dVJQYhz4lJbntenj209XHwwtxP/bhQSDXa80dNYeuwW76poq7KaqcdSnuzJkyZUzQPOOBz8M4DY@iofGwbAYGnIAfxPT7QPOnxqgg@gobVax2xAtslPAl10tyYyunWYRrDLIEv@Y7JATMuuvrMTxYgN@nGuUqBbsJ2gk0qYsC/kOKzDWwcxpocdMsuQsqPsogRK6YmXDqYZHTZ5uD7mC4OQqnmJmwxFJzPPOlSjOpIHPdPVpHik@umoyJKLVoHjTrOWBWmoiP4YjJWny0utF81dxpbDd3cjhUl7YVvX2/05611VK1bVTT1rwEcc1kYU2f7@LeqtDFplkORGtCkRusHDwhmhXdSdzJpivlachk0aHS5Vsp9uiyWPvVwfVpjYH6MxvLDlw0ZoUdph0rwCIY69rBMMJXSjtY8mOOC9kevle/aq/FRZ9SdRPfBE8BodubHMhDqlSVkjhDtfvWncu81BUXQuxFAZaFFw@u2BbYiyhBTDnJKmmDqEBMOYOg4FjLIESslhGcu@x1evYpvoL34a2Z3B@hRM3vJNlDBFxfCRuJm1SpzvFivohiGvn7aUIW5LyUV7Y1EBt3KUv1mbzE9anGQ3FbQJSUTSwpzZO3uWJS8Dx9@wlKzhxJem0P@5prSm7z8VpwbUhX@qBUb6U3r@tCmcxvYoVWihrlRRDjGNeoBa2M@TuE7faaL28Wb4gRq1V4d/rL6xRRHkc9Kr/nd0i4iI1GcSvmCVMTYpkHimgFhcoREQU3@EiFhoryB0zC6VsLf/sf"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online! (with pxem.posixism)</a></p>
<h2>With comments</h2>
<pre><code>XX.z
.a\020.zXX.z # push 16; while :; do
  .a.tXX.z # heap = pop!
  .a.m\005.%\001.yXXbuzz.aXX.z # while 1&gt;heap%5; do push &quot;buzz&quot;; break; done
  .a.m\003.%\001.yXXfizz.aXX.z # while 1&gt;heap%3; do push &quot;fizz&quot;; break; done
  .a.c.c.z.m\017.-.nXX@.aXX.z # if empty?; then print(heap-15); push &quot;@&quot;; fi
    # this is how while empty?; do something; done works:
    # &quot;.c.c.z bla bla bla .a&quot;
    # NOTE: Fail on pxemi dot 7z and RPxem
    # They need some patches before installing
    # Implementation needs to be document-compliant
    # PS. RPxem v0.0.7 fixed dotC 
  .a.c@.z.pXX.aXX.z # if top!=&quot;@&quot;; then print pop all!; fi
  .a.sXX.z # pop!
  .a\n.oXX.z # print &quot;\n&quot;
  .a.m\001.+XX.z # push heap; add one to it
.a.ct.aXX.z # break if equal to 116
.a
</code></pre>
<h2>Note</h2>
<ul>
<li>In Pxem, unlike other stack-based languages, subtraction and division does NOT rely on positions of two items; <code>.-</code> does <code>push(abs(pop-pop))</code>, <code>.$</code> and <code>.%</code> stand for <code>x=pop; y=pop; push(int(x&gt;y?x/y:y/x))</code> and <code>x=pop; y=pop; push(int(x&gt;y?x%y:y%x))</code> respectively. Thus, when you try to do something like <code>13/17</code> or <code>13%17</code>, you need to check which are greater first.</li>
<li>To avoid the specification, the program loops from 16 to 115.</li>
</ul>
<h2>Old version</h2>
<p><a href=""https://tio.run/##1Rr9V9s48nf/FcIEYhPsxEmgQDBdltJt37Wwj9Jb7hrKc2wFfDh2znYSEsj@63szkvyZQGG3u28vbYgtzUgzo/mSNI4V3fxmB4Oh61FFVSRpdaXec/16dAOPZHhHB7Y@DCL3zo0GOvkZ3rU40KzJLRFIoQ5wv4RuHFOf9KbkfGjRt9ZkRn3s@ODa1I@oTo6OGrokRTQmGh2RVfhL3Ij0g5BEUz@27ggNwyCURgMruiWNRrMp0bthEMbkw9HV4YcP5pEUT4eUXNPYDvw@Oag7dFz3R55HmgfrBllf5/1A1MDynWX9YryfD8/fmXJFSSC1YToodqmVe/yp7c35gzaXE8zPJ@8vrj6dvzGbjUYLWEDi3/2sfb5Ihz799P7iw7@ujk7Pzo6Pzk1DAP108pmMYteLNkkPxL1Jhs4tyNe2Ikrkyv2Ph5/eXf3z@OzT@9OTvdp0LhPXJ8pUlQhh8goIWwDxWvsRRnXcyOp5lFD7JiD31ma06cxJHJCeaLJIRByp06GRZafz/PvRaehg5FkxJUAUmyQYxvA8CUInGnpuDI2W51oR0a5JtXJv1OTKD/K8albxtwq9J58/fDj6@MbcS6ZcJSH9D7VhlHHYJL1gFPo0oUMBBIWx4owGg2kHZnL7cSdrIThs2sz4qawSVVI5xQZSPAxdP@6Ttajb9ZG3xurqRn2@R372KM4ygq9PJzTka6KhrlqxiyKLbqjn6TJyfefGxFhGcjshmY4tj8grpG95EZXJwwO5/76TzyWJKf6doj41cqWZ4lQY0ipptUhrm7RekXaLtLfILvx/RXZ3idFowNeAbxO@W/CFNgPaDGgzoM1owxfajW347sAX@pvQ34R@MDsYemC5PvxcU5@GqBagTaPeMAyuQ2tA@mEwIH4wgeWMyf6@VjWi@MYJq1J/5NuxG/jE6oExKIPoOmOJyIxLYhCZQEdHMKM01A5wk2KCIUYKgYWIN22G7PYVtzfq92lomrLMmgialE373ii6UdQOawEEUwHkGGT@gKN4rg/@hWMKGBgKwPbNhorgsLr4w7tsL4iowGfQc/japsDvcDrslV9lkpCQECXLCTgFBeF9ICtFJvpGRd6UZeCjk7V@@UouNwhrzxOH@E7geVbYMG1sEAQaBeEMrGkvYRtnYo9RTIe1miAxbTkw2aMVC3L5GrA2Tk0KaTY4Abl58uLNFjBFLqDm0Nyo51n@rcIXTnBgm2ar@fCg7O6b9vq6vW8aLbbiPx7/9P7knnmeYTw1ZfYjp8ObMvuRF@bL5MQlz9yTAuKMYsu@3ZT3ZLXYHLkzmjWH4PAV/BNR6rAmVHWhhVyPUf9jIAf9IY9P1LJvSGSHLjjFoM9fwwD8OfiH1VWiSyG1nMD3puCArWjAYgszjer56eGnjznDgF9r6MaWp/h5ISnbW/umv77u75u7DfW14tdaTXXPL0nXHjhFtC5bScUHEbdUkDE@bCcPr8RDO@lqb8FDgrObTgheAn5XzN1t/rOTgwIscCC5BnAlKV6T4xlGS/y@Ki4sLAA4D0@s0zCkY75mcynfqyQPaN2vK409pdIAFyEnAGxMznsmvEpDVdfX@ZCmE8TCUQgUMNOv3M7Y30pisswA8z3cDrOJhJMQDb/W9brK2lIX5mV0JVYr/LW8Znd9ebNAYqckBM44p7rCTOf45E2R9GzOZTPOJaZPEAYl1LsfyJvT8zcfD4/OTt8dnx0XtHByW9TCX/5RzVbGvfaDkF45AA9h6YablU@jGG2FG3UFBCtbsqAu7QPfmfcnsm5hvgVmAn4JhiT6ZJPod/CdbhIwHH0GEZPISIZxsN6UO3nc1ULeR0R0ETA8OCZCTubXtM5y8kFFSo2mcc8Q72LOzq/1r18md9PZZaV@nxsRPSd0G8Ctx7i95m66oe1e1kA9mFf54jrcj8DD5aW53klfAJ07Fo6GCgVhmwhng026jkqmdhJVqQhhJ3TBxEOYmMukK8ksuCmumU6hGR33AHh0NU29Bx3jQIkUU/rcy06u06EexWxuWe88fUrngOHlBbKCIlmgBko0y@hSDxpP0QOwmqE@SdQSkIxrLUfwIm3@y2jzB@ZTs6KGD/aLKAlD7a1OodUfbJiwJLm2ee45iMz2Tg3wYMA1A1xArg/XFQjhnXXs9AcHjU6hqURCeTgIa8zdKF0Z0sOurALEY6Rw8ov933EF3OIK5KWf4YFgRbReMYFkWc1PlFrW7NIUUBkmJlOIzvJBlcB6vgj1MeD8yiV5BBLWWbQJNO0Frq8WTbXTKSxaxrK5wDLJccTSUJ4nd2X9ag9SA9hDwu6DOuT49C0gljQ0ya7E6GVV@b0jQ5ob@JDJjOhjipTnCJKJ4rTRtWl0vhMhPQhgt8@iYmuRCu0vI6O9s58o3fq6eNjf2vmmYJ4cN0@f6w9HMWywYniK6TUNCyTO89b1GC3EGSftWnunZFaLc7nRo9MtV/G8aBf4eraMkMjxhtGoKRmtL1TO0uS52LYkcEfXG874uaZuvyzEFNzMsxwszPqUg41eNv93dO3j57h2nqVAWrKP4Sma1Ztqx63VijKZmI/kJ7nmorDcBaIXes1o8iT5fTl36IBuHuKlC3u9RUhaZDS/vc5pyag3BPyasWyE8GWLhP3xcEE9VLSjgtqnJhqiu3JoH7aaDtuLAmjJY5VHY@kE2@eqG/FQfVJWk2/Gs@VC@TarhEycJ@3gWSr7iNIKAmCGpQ5oCaN335FRs1ni9K5nrihlNvYLDU1Y5d/B/TKg5uMiMpsLMrrrPU9A0z9TQNNlAjr4ewho@kwBzf5MAc165oJ8TPPvIaDZMwVkFf3uEoj4Zd7yhlpD8y/aUA4WSMPZV0x2LLk80CsZ4ZcmQv@eKO8woRXOcTqLZy78OKSx7PDDWBiy9i0pl7SvrBq1v0rm2h8kVPvWpr6MsI876FJbeTf/Hflb@YP8bfxVC1F5IaFjw3zKn4ybfwrhjLCxsQHDF3Z0lT0yo2GgOe7YjdzAfyo9AkrNcfNgbLzGJGncrI8NdY89GvVx8@lcae3/Wkprf0BKa5mU1p6QUnaanfiulfJ58UkAO7owpNEw8B3Xvya6xbLaP@XcmB2X//IPflye3WXihU96fZNcYfZ9a0CLl5jsYggkwgMR44NFJBYS2Plu7vhUSgaQpD3Cngeu43gUyw7SK128zzXYfS6wJwUO0Q6JT7SYjAyijaEpDol2FJGG0Wy1t7Zf7eyS6peuv3FZhb7rkA6JDg9YeQHQsK8x29swJLtzkkUHv1wvXSKz@wCEwKt9h1SZpOqFoFO3u1IVPrkAzi@ZOnjtXGUyFIz1gUospsBb@eq8irK1b6h9CwsPqmDTKLJCvIMgeB9B@q5HJdyDmQ0kmZqNtBohEQVe6W/oX/pvLzdUtl0zDVIqXCiB0mMBShdAER//UA7cSINnAofkBn5MfXaXh@QRK0ruWPKj5GoNUEvkisFFuGTdCHlq5QhJ104sQFTXN@rLzyiKlwt1jq9wYaeqmexp76sdpE2USMBiqEktQ46RRBJLBJHaBGxyyxaBQioahNgJP9Mg8kcEvANwmQtjxwTS8mMADoOnBVI5jWI2LaiSCkbV/Nuak4gXXf4mL8oEz1T4sQlzqhlgIhwhkARaMy4vi4cqi3gZKCafC/3L7oZKQPNyQ4KTnQOVABJn0Um9RUGRwGdUpSe4l57PsLTIo/QIW0lhRZl4iesREIVG0Hd9y/OmErcOSVJ/W0W9dmiol6vfEDoAixI9d4We@IZOiRVSXh@D/YXuQeC4fRf0xSI9mAij3vn7U@yB/zdxPIz26vVrN74Z9XQ7GNR/eqdlhXT1wnDSqijMS1vwBJfX14ETXiF7HaTGl96eHH48xotgocHViwt9JumW0fWbXb/vzmZdv931eyN80IfYS1ZJj9oWVjCBe7wJJiTJGMgkCG8jwO42Gtv6TAAPYbtLtjtkcoOeFCZ2AhC5bumxAEAXQUwyDIYrvGMA@Fv62hr8GPr04gJn1y0BzYdBnLW1LUgfcDw@h4xwckdsRaEZfFU6Xis3HrK1dLxWcTyEWzaeDf9m@kD3Ly5@SMcBsTI395pLVkRJtusTw2HBWt9lqoi6AAsC/1F@EAk5KhfgngCR@USk51npV7dk0Xtyen68R95arkdA8rjWLroo8mpGsGTxDMswBeg56p1PQbOiYEAJ7AohHKc38q4PFuF5kGsJ8PeDoUcHEP4s5tQRMRKFg05gj7CH1at5ruXHQiI/gEBQO3LSiGE9TcZ0Th6wyAQmWxGSANQoUZNk@UHPgqSNZxrgSbKFNPRaXrG4gC3HASlQpNKNJSSIpqSw5WPL89@R5SGI0TAApgo@6NPp57Ojgv5jK96BLFrGIybBdV2PH9HaR5SvpEM5AeoRCiBhlTHyOKV997d8mGM0yw8Tm2g2y4sLQZAP8Wg3Q14GhAEOQx2v8IFIKArHTB77WFLNCjAVRcDgp6IkJbOHZz9dfTy84EW2Dw8cuNlo76g5cI3spm8qL3BR5WxKXnhnyuh2ieYbDyyYQywfxyPjYVkYJxDFH3gMf8AgrFHMqr6SjTqkTPyFbFTgJTdLUvaV4yyGjQpKgtUKjxAAXPf6umgPF9rvU45y6YbTJtoJaeMUBfiHFJhx4OQ40ETXPCko5R9lGMGo4KAgftHYHdDNoT0cbY6jGTgoyNPU3Jj5fKedpKG56R5NRvknl5IKJPQ1mk/azVxjlt/wj@HyiM8/WtNov2rvtLbbOzkYTG67it693@nOu2ql3jXqaW@eApF4WbAxyE9xb9WwOmqea8KNJXcWVq49QZoX1YkXdmNdemoymXWoWMErCY2u8g1kk3gBblSAf@pA7gI7zyw7BD9khRgLR/FwFMMr@iEIjOD0IroH7/Wv2mteLVSpb8IbH5O3YAkoa2QmValLiZ0B2wPrzqN@qooLJvYiA8vMixmXkAXMwvMYU068StrB0xhTzlqAcEiIoIVvuaE5VzF2evZJ1PF9eGsmRSjouVlhkzOChusrLiNejpXyLE4EiiCmkS9y47TAyEvHys4XhHCXDqk@cyxeg9V6KJ4t8Ly0DXmpefI2l5HyMU/ffiIVt4SS1v7BXKWupCSQJZRrI6wLJJVmJy3fbnJmMr0RDK0UOcqTwNdRJLoFroxyIWK3uxbIm8UyMxxqlbw7/eV1CihP4j7m8OVjFkZiq1U8z3lC1AhYZYbCe4mC@Qm3ght4xMxDBfpDKkE816Lf/gc"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">1</a></p>
","","user100411"
"220975","<h1><code>#n</code> at first to imply <code>-n</code></h1>
<blockquote>
<p>The &quot;#&quot; and the remainder of the line are ignored (treated as a comment), with the single exception that if the first two characters in the file are #n, the default output is suppressed; this is the equivalent of specifying -n on the command line.</p>
</blockquote>
<p><a href=""https://pubs.opengroup.org/onlinepubs/7908799/xcu/sed.html"" rel=""nofollow noreferrer"">Source: sed (from SUSv2)</a></p>
<p>This is useful if you prefer NOT to output something by default.</p>
<p>...But is it really useful? <code>-n</code> adds either 1 or 2 bytes but <code>#n</code> and LF adds 3.</p>
","","user100411"
"220987","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 17 bytes (filename) + 0 bytes (content) = 17 bytes.</h1>
<ul>
<li>Filename (some unprintables are escaped): <code>~.z.c\001.-.c\037.a.s.p</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##xVltU9u6Ev6eXyFEiO0EJ7ZJW8ARPRwKp52h0IH2zrm3SRljK8HTxPbYTshr/3rvSrIdOy/00MvMnYHYXq12n12tVivJsaKHn7Y/CNw@lRU5ojFS6dAcDqzoO9I0wzDpOPDDGF2e3Z1eXpIzU44nAUU9Gtu@161U@BcIGFieo5w0HDpqeMN@HxknFb1SSTp/Ov38nuCynPAhNUgF8CalPGOP2vFCvKgLnKr9cvXh77vbz@@IoWkHKfHT9e2Hvy//fXd2fXNzfvaZ6KZtRRTh8uzP09v3d/86v7n9cH11XJssMHI9JE8UxA3zUeBH7thkH7U/TZNGll1Ku/5nS086GPatmKLogfXzgxjeHv3QiYK@G5tW37UipPaQVJ7pNVz@Ay8kIrGnZF59ubw8@/iOHAtNKUgZcTc7w8FgYkYPbjc2s2/EeiZEaj/4qLyrIEVg0RUUhK4Xd9Fe1G57DLO2u1ttLI7Rpz5lsofw79FHGgoPqWxcrdi97zP0tN@vM7e6MdITQHRk9RHeQV2rH1E8n89eTsHCpGHoh2NZ2S60bCTsZcZf4JK6Q8@OXd9D1j2MuDyIesqMcyDMBSMdYQRULkDWFHOR9YDIiuSQxvu2MnO7sns/7HZpSAjGyqzrhzbt9ofRg6yYwENk4I5pOIdH3/UoSrgVE3pCe4toCjyGoYfgYdp9P6JJF1Bpk4Sdcds7PzACFak@jM0FBb/OouG9jFG9Wsb7GAMokxO@fkOdKuKkTOfC8ft9K9SIbSZKwTGlzLCBNblPwc/4M4ppUKsx7dnnCeGvVpz6i3@aWTvRzMXSV3l/bOfP2N3ovm9532XwbALQJuTAmM/loxaxKxW7RfQDsOPP878@XM3oIIgnBPMHFhIJ5g9ckJ9aDR7jk0oGn0SxZX/fx8dYydEid0oTWghpRGY/EaWOYg4s1@NRIJmxb0UDsgwgeFqBG1t92ctQy69ftYhXqXgtcqQpb2WvdmAox17BUnvg5Ht4YOiBApayl9fpy5vkpZk2NV@xl6NMvK4Z8NwhR6/F4zDh0zXGCJNaO8pYDcGq6wfJ803mSvAADa0@c1EQ0hH31SKjyukLi/G3Ze1YLmswPTBK6CBG2LP0RVlTlEpFyCKOH7OZknBDHH8T0cl/yxDTPGLzRBG4mfhl5x@NekPhgYT7SwDmQsxuvGe3PbxfgGHmbFvMBKIyBN351bvZr@Xy8X78TiThJ7fn@SG9c6jlQGJ6gODyaBSzuGFxXAZbsYWZ2IwMEzxNLHWLLWQ0QjDLQAqqP@6j@hj@J/sIMk59iufYtiC7nVQMbCaddlE08WJrjERaCkK/F1qDZR5MFamquQ5usUoi@syj45hB/dH49vVxPJl2yo1ZKgTm@qKsgxF9POuJNKKpR50ajAafMF9dR8wSeOl0SMXMPqAnTBvRhw0e5FiEk1RUr7PRVIRFZeYygQD0BFg4B4NDZJdk4lTddE/AAFdVU/dlANyO6dA@ZUtmjrTI@kI3nNfhpzoQgoGRo@lSjXKirYkHBlVX1nWk9CVG1VwUFHmpoo1qvAFZk8UCZdDKMDRfmd6gSsD4hR@R5mENiMCwp0MUMweBCEFpMIo3OAFf5knKbLUbisTEkNsYlr02VvwomSsI3p5voovTYM7bx@xIkuwOAU1YWUbLtEOSJpOtVmwI@AKqIHAKixKENjKzJtZhAwv4h1HTtM4UckIhGPOo7/JRZpp82U57C7wZKrYgi5Kgjet3x5DdoSakdkwddH59AZzM1nSZSmRweYlRv@4PVWnsekMKkzOHAhL8LOpBpfkMJPchtb6viHnFxai/Kad52EoHoFJJXlqvDhNoCV9emOsFwxh5fgxvMe3RkMl7SpIzSslq81BExLo8N1oVmRu4pVUCz1OwmbZRVddq8lJpfgQSizbltqhXdUbm1pCy8az0xGQvxOv2@cXybUFslM2vLcnq@VN2lAZ/YcaKfAsJtsWSRTRtGBDZtRogfyT5tJp7L9rhCrVrJBI9rgDopgCgDIC5A9VUoZmmzfnyky0cAfDW9BXu8Mkcy4hxsObw4hwI2RxwaBfKcYcVqGzOshhb7cUTK68DlWocKCtWPa7mlAL8jegeHfJbqwwIg65ZwBdxjJ@JgxjKbHxPduRVla0CwQCvbQW3iW4UQBODqR7fK2gT5slvYJ5swnzy8pgnWzBPl1XEM1BP78kaaEJeHvV0C2orRV0kx0/OogdqBeQF6qFBTguTuUP4Vi2XHeWl4g5hLE@kRgcy7rvrz@8@np7dXL8/vzk3Syt1Ni@JtbUyWM9LqW23nI3XqqNrL@EH9Xk61Y114ipXixV3KzReOj4f387z8FVfwiflp3WO9LVJYo6M306fI70KvfOLQPkYTWnoq447ciPYkK8tAKCRjIyTkf6WLQMjozHSlWP@qjdGxupqsPd/NmfvuebsLc3ZK5iTbIvTebWT279e@bB/DUMaBb7nuF4PwYaWrZ8vso@FnTY/kJRyx1GuByXAPkIsMyRpiWcQM7/Xk5Yne@zwT@eHf3juO0g99ZA6iof6PA6RehYhTTcOmq9evzk8QtLXtlftSPNeSANUn8MWH1hhSxGT5msQww95MCfjsrxywMhPBPA8gvJBahRSUsNulxDKKjhxtmNiScGJcWAlq4L4oVTMzgzS0@EENj@Irda/di86VQVxVh0Vj3dXWel5wkrXWFl/9kMFswYpQ@TIDXzrZ8DQYDzXj9wnUaNebeT3bNtODBrSXF4Z9LRGnEkALs68pqwBTm1KTcpO22PUaqkSq/EfnFBanm4mFeX@k8G0LIsFFTqIBMxL47VaWDTzOjm/bpUS7aX/yZcvGJP5yiVvHt@7M9Pa@W12YlXKouqdTmFPkDIv28HohLjhZIa3LPhv2pop59R0mpjLebIV6D9DWIS26bRoDYkYtG4cSiIlacrPXZZ4HBrWUTCmA7vOL3fcaFAv7YInIQSTlnGhJX6gE2SFFHVDf8DbC80D33G7brLz@PzhmtHg7yGOg@i40ei58cPwvm77g8Zf79XPgUUvrMcp9RoFQaVd6FKgsD3z2ZlWL5Uurk4/npNlhEg/6tO63dY0va6y58GbulWP6gE4u3R7/eXm7JxI0s98pHIJeP5oI9XmSbwQx6LP1mbeeRNTSU4COrk/YBDFFZQsw396X3d689fdx9O/@f0ems8RZzE02LerR0jhl1UgQ1yREMwGCKme/uuphVaylEpZovqGqo2GlHygahk@uPz05J@B/MpM4BePQ0aGQe1UKkAM14gzlMKInSZSr5pMVJ5JIHNyyKAuYvdichBBRx8FEJ40dgd0P7CD4f4ompqOFVMlb1/z16kjttw@uAU1DZERdLddUg29@aZ5ePC6eVhiGbot19uzw/airZQbbR1ScTI8FtGQNLNq2SG5WM4sdha@AO@La1Z2n5uFyjIqoD0dM0ks9Abq@zBGXUBEHUmZo1IxvQ2scZ96/yAY5vPNoSDmKMFpuHOimJ6kLbEPAALzmmBJVCQoOcu/vrlldwKXFyQ9JMVtD@omZwhfvTt/GAfDmB2iN77xkC03@LlhoZXoSnKrxRWiy4u17qKsanzj7lgX8cv@4tT8IF9SiezYhOxIri5EXhRSri9uUdnNsyaHvZcXayVZF2Ge6PaG7MoElY3krtRgYNW34uBf2LxTRJwoE45fwaunVzEIt9t7Pt7PzvtnyRXNY9w9ZsuWx9ryqLj6g4OsBN3uJgjFefSA1OjnfwE"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.z
.a~.zXX.z # push 127; while size&lt;2 || (pop!=pop); do
  .a.cXX.z # dup
  .a\001.-XX.z # push 1; push abs(pop-pop) iff size&gt;=2
  .a.cXX.z # dup
.a\037.aXX.z # push 31; done
.a.s.pXX.z # pop (* to remove 31 *); while size&gt;0; do printf &quot;%c&quot;, pop; done
.a
</code></pre>
","","user100411"
"221023","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, <s>27</s> 24 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>$(($1-$2&amp;&amp;$2-$3&amp;&amp;$3-$1))
</code></pre>
<p><a href=""https://tio.run/##HYc7DoMwEAX7PcUrVsgutlivm4ir0CBsZCTELwVFlLMbJ8XMaNL4LnV2/oM8lR1DZedYhUPXcRC2FhNW7@u3v8uyZlx5TDhw4uqRdszgA3yC/7vlqggw@lnJoIgkBgkQo/hq2zCL9AA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<p>Sorry for a boring answer; at first if bashism would work, but I could not get out of POSIXism.</p>
<p>The code above evaluates to a string of either 0 or 1.</p>
","","user100411"
"221033","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 39 bytes + Content: 0 bytes = 39 bytes.</h1>
<ul>
<li>Filename: <code>0 1;0 -1;1 0;-1 0;1 1;1 -1;-1 1;-1 -1.p</code></li>
<li>Content is empty.</li>
</ul>
<p>How would you do that by control flowing although we don't have negative constants nor the way to obtain negative value without <code>.i</code> or <code>._</code>!</p>
","","user100411"
"221051","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 28 bytes + Content: 0 bytes = 28 bytes.</h1>
<ul>
<li>Filename: <code>._._._.e.z.c.c.z1.o.d.a.a0.o</code></li>
<li>Content: enpty.</li>
</ul>
<p><a href=""https://tio.run/##1Rr9V9rK8vf8FWNESMAEAmhVjL1eq23Ptdqj7WvfK9YTkkXyDAknCSgq91/vm93NN0j13rbnPlokmZ3ZnZmdj/0YywgG30xvOLIdIsmSIKyu1Hu2Ww8G@AijWzI01ZEX2Ld2MFThPb4roacYN9cQEfkq4n3y7TAkLvSm8GFkkCPj5o64tOHYNokbEBUODhqqIAQkBIWMYRX/gh1A3/MhmLqhcQvE9z1fGA@N4BoajWZTILcjzw/h@OBy//hYPxDC6YjAFQlNz@3DXt0ik7o7dhxo7pU1KJd5OzI1NFxrUXvU3/v9D290sSTFmMoo6ZQ2yaV7@lPbmfEHZSbGlB9P3n6@PP/wSm82Gi0UgTL/5r3y8XPS9en528/H/748OD07Ozz4oGsR0uuTjzAObSdYhx6qex1G1jXq1zQCAmLp/vf98zeX/zo8O397erJTm85EsF2QprIAwPTlAZuA6LX2O/Zq2YHRcwgQc@DBvbEerFszCD3oRSADArCETocEhpmM859HhyHDsWOEBJApNog3CvH5xvOtYOTYIQINxzYCUK6gUrrXamLpN3FW0Sv0t4KtJx@Pjw/evdJ34iFXwSf/JSb2MvGb0PPGvktiPiQkkJgo1ng4nHZwJLsfdlII0G4TMJOntAqyIHOONcrxyLfdsA9rQbfrUtkaq6vV@mwH3juEjjLGr0tuiM/nRKG2aoQ2VVkwII6jilTqWzsEbRHL7ZhlMjEcEFegbzgBEeHhAe5/7OAzQWCGfyvJy3ouNROaEiNahVYLWpvQegHtFrQ3YBv/v4DtbdAaDfxq@G3idwO/CNMQpiFMQ5jWxi/CtU38buEX25vY3sR2dDvsemjYLv5cEZf41CzQmsa9ke9d@cYQ@r43BNe7wekMYXdXqWhBOLD8itAfu2Zoey4YPXQGaRhcpSKByKQEDUTAhk4kjNSQOyhNQomOGEiAExGum4zY7kt2b9zvE1/XRZGBgLqUSfrOOBhIcodBkECXkDhEnT/QXhzbxfjCKSMc7ArRdvWGTNFxdukPbzIdLyARPcOe4dfUI/oO58Nc@VOEmIWYKVGM0QkaCG9DXUkiqNWSuC6KKEcnhX75ChdVYPAsc5Te8hzH8Bu6SQERg1pOOUNj2ovFpiOxxyAko1otYjGB7Ons0QgjdvkcMBjnJsHUG5yBzDhZ9aYTmBDnSDNkdtBzDPda4hMXSWDqeqv58CBt7@pmuWzu6lqLzfjvh6/fntyzyDMKp7rIfsSke11kP@LceKmeuOZZeJJQnUFomNfr4o4o58GBfUdSsI8BX6J/AkIsBqKmHlkht2Nq/yGyQ@Mhz0/EMAcQmL6NQdHr81ffw3iO8WF1FVTBJ4bluc4UA7ARDFluYa5R@XC6f/4u4xj4a4zs0HAkN6skaXNjV3fLZXdX327ILyW31mrKO25Bu@bQypN12UxKLqq4JaOO6cNm/PAiemjHTe0NfIhptpMBMUrg74q@vcl/tjJYSIUBJAPAUJLQNTmdprWi3xf5icUJwODhRPM08smEz9lMyLZK8QP17pelxo5UamCIEGME1ieXPVVeqSHL5TLvUre8MAoUEQm66VfuZ@xvKXZZ5oDZFu6H6UBRkIgAf9bVusxgSQhzUr5ir43itbhmdl1xPcdip6AELjjnusRc5/DkVZ71dMxFI84EZk@YBgVqd7/Bq9MPr97tH5ydvjk8O8xZ4c113go//VFJZ8a@cj2fXFqIj2lpwN3KJUFIfYU7dQkVKxpixF3ShrEzG09E1aDrLXQTjEvYJag366De4ne6Dug46h1mTBApG9peuSl2srSruXUfRNklwuHJMVZyPL6idBazjyZSAOraPSO8Dbk4f9a/frm5nd5dlOr3mR5p5MRmDaV1mLRXPEw3lO2LGpoHiypfbIvHEXy4uNDLneQFyXlg4WTUoDBtQxRsKEhVqZHJndhUSpGyY75w4BEOzHXSFUSW3CRbT4ZQtI69hzLaiiLfo41xpFiLCX/2RSfTaBGH0NXcotZZ8pSMgd2Lc2x5ebbQDKTgLuVL3mss4wdxFU1eytQClFRqJcPwPG/u83hzh/qyUamFD3fzJLFA7Y1ODuoOqzpOSQY2yzx7gd7eqiEddrimYQjItNF5RUZ4Y502usO9RicHKrBQ7A7TGgs3UlfE5WFXlBHjMVY4@/n2HzgDdn4GstpP6VCxUbZe0ZFlUc4OlHjW3YUeYaWUdDFFydl6UAacz2eRPoacnbl4HUEZ68z7BHXtOakv512108lNWiqyPicyZCRiy1C@Tu6K6uUOLg1wD4m7D2LB4ekREhYsNF5dRb0XTeWv9ozLXM/FlcyYPGZIWYlwMZEfNrjStc4PYqSHCez6SVxszHOh/DI22lu7sdGVy9HD7sbWdxWztN8sf7Y7Goe4wQrxKSRXxM@xOMt612O8gDWJ4Up7q@BW82PZwaPDLTbxrGrn5HqyjiiTk6rWqEkpr880zsLgmdy2IHEHV1Vr8lRXN5@XYnJh5kkBFkddFmCD543/A0P75Cmhna9ScFmyS9NTcFdvyh27Vsvr5EZ/ZH2SAeeVZc8xPdeqBzdL2e@LmUMHGuYxX9q415vHJHlBs9vrjJWMeyOkr2mLevCfN0m0PRzNmYdM/Shn9omL@jRcWaSPW02L7UURtRCxir2x5QTb58rVcCQv1dXNd/PZYqV8X1SAG2upHzzJZB8x2ogBHGFhAFog6O0PFFRvFiS97ekrUlGM3RygibP8F6RfhNR8XEV6c05Ht72nKWj6MxU0XaSgvX@GgqZPVNDdz1TQXU@f04@u/zMUdPdEBRn5uLsAI3xetBwQY6T/og3lcI41OvqKzo4lFyd6KWX8QqfYfyXLW0xpuXOczvyZCz8OaSw6/NDmuqx9T8sF6yuaRu1X6Vz5m4wq39vUFwl26Q66ACvu5n@gfCt/U77qr5qI0jMZnWj6sngyaf4UxhljE62K3ed2dKUduCO@p1j2xA5sz122PEJO9Ulzb6K9pIukSbM@0eQd9qjVJ83la6W1/2strf0NLa2lWlpboqX0NDuOXSvF8@ITD3d0vk@CkedatnsFqsFWtT/l3Jgdl3/6gx@Xp3eZ9MInub6JrzD7rjEk@UtMdjGEGuGJiMnBMhJLCex8N3N8KsQdCMIOsOehbVkOoWUHyZUuvc/V2H0uiid4Fij74IISwlgDZYKg0AflIICG1my1NzZfbG1D5UvXrV5UsO3KJyNQ8YFWXiA27mv09iZ2ye6cxKiBX64XLpHZfQDFoFf7FlSYpuq5pFM3u0IFP5kEzi@ZOvTaucJ0GAnWRy5pMQW9la/MKlS35oCY1zjxaAomCQLDp3cQQO8joG87RKB7ML1BWSZ6I6lGiFVBr/Sr6pf@0UVVZts1XYNC4UIBlRxGqGQOldLTP4QjN5LkGeNRdj03JC67y6PsgRHEdyzZXjK1BtRKxJLGVbhg3gCWzRxAMnfRBAR1tVpffEaRv1yoc3qJKzsxzXhPe1/pUN6iEgmcDDmuZcgIEmtigSISn8BNbtEjqJLyDhHthJ/oENkjAt6AtCyEsWMCYfExAMehpwVCcRnFfDriSsg5VfMf605RvujyN3FeJ/RMhR@bsKCaIsbKiRQSYyvaxUX@UGWeLkWli8@59kV3QwWkWREQ06TnQAWEOFh0kmiRMySMGRVhifTC0wUW5mUUHhErLqwoMi9wO0KmqBP0bddwnKnAvUMQ5G@r1K4t4qvF6jeK7aFHRS23uZZwQKZg@ITXx9D2XPPQs@y@jfZiQA8Holnvw9tT2oL/B2E4Cnbq9Ss7HIx7qukN66/fKGkhXT3XnbAaFeYlEHqCy@vrjk723x3q6iX7R9Q71cR/d5rqqZZqqEZD9YTz049nB4d6pfIt60SMUHy4MUExWdbNuRinebSZES9Cou5DHYnXD6CfRWUpOvcslrJZeZckRTj0U5Ligrz9s9eX7/Y/8xK@hweO3Gy0t@QMugLbyZvMr89lMR2Sl/XoIp1UUFztgYUKjBSTcKw9LAoSgDHigUeIB@riCqEx@ytU6xiQ@QtUS/iSGSUuKslIFuIyiGqCVSKOKQIaRrkcwf05@H0iUSaYWW1QTqBNh8jhPyTITAIrI4ESNc3icjX@kUYB9urBCL2DhPaQrI/M0Xh9Etx1wMIsIGf6zEbTdpzkMsM9mur4J5PwIiLDdlD30G5mgGn05B/N5vGEf5Sm1n7R3mpttrcyODR1diW1e7/VnXXlUr2r1ZPWLAdRWDdw2ZEd4t6o0dqLWQZEl608ThsZeEw0y5sTLxulVa@Jy6TeIdP6QCGy6ApfnjbB8egyCOUnFkZGXNemuQe92PAxT2PqHY1DfPVcQlclGEoCsoPv9a/KS16LUKqv4xvvk0NogRkDMpcq1YXYz1DsoXHrEDcxxTkXe5aDpe7FnCvSBY7Co6QuRpGgkjTwIKmLKQQZx3CLEL6gR3CmHuX07DyqEjo@0uMrbhEzDCubsMYIuLrkOuLFHonM0X4jj6Jr2RIazgv2vLCvdPcSKXdhl/IT@@IVHq2H/M6FZ702Zj395CiT73ifp0fnULILJEllEY5VaIoLjli6WhvTqiMoNTtJcWiTC5PaTSTQSl6iLAt8HqM0mpNKK5Y5dbtrnrieL2KhXa3Cm9NPLxNE8Sbs0xVCcRPHWGy18rvFJaqmiBXmKLwVJFqwzb1ggI8OEsrIv0@EYABK8E3RoIarv8b/AA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online! (with pxem.posixism)</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# for three times; do push( read integer); done
.a._._._XX.z
# call subroutine
## NOTE. When DOT-e is performed when stack is a,b,c,bottom,
## then subroutine begins with same content of stack
## And when subroutine ends when stack is d,e,f,bottom,
## then previous stack would be d,e,f,a,b,c,bottom
## to continue origimal procedure
## In this program content is empty, so is subroutine
## thus x,y,z,bottom to x,y,z,x,y,z,bottom,
## which duplicates entire stack
.a.eXX.z
# while size &lt; 2 &amp;&amp; pop != pop; do
.a.zXX.z
  # dup; dup; while size&lt;2 &amp;&amp; pop!=pop; do
  ## this is equal to while stack is empty; do
  .a.c.c.zXX.z
    # push '1'; putc pop; exit
    .a1.o.dXX.z
  # done
  .a.aXX.z
# done
.a.aXX.z
# push '0'; putc pop; (implicity) exit
.a0.oXX.z
.a
</code></pre>
","","user100411"
"221057","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 30 bytes (Filename) + 0 bytes (Content) - 25 bytes (bonus) = 5 bytes, requires nonprintable character, does not deal with default.</h1>
<ul>
<li>Filename (nonprintable is escaped): <code>._.c.w.tXXX.eX.eX.e.p.m\001.-.c.a</code></li>
<li>Content is empty.</li>
</ul>
<p><a href=""https://tio.run/##1Rr9V9rI9vf8FWNESMAACWjVOHZdq23PWt2j9m3fK9YTkkHzDElOEkAE9l/vuzOTT0Cqu23PPo6YcOfeO/feuR/zZRnh3VfT6/u2QyRZEkISIYUM9EHfCO9Rs6lpAnnwvSBCp0c3h6en@EiIxj5BtyQyPbeHDhoWGTbcgeMg7aCsonKZtwPLvuFay9pjfr8fXr3DYklKMBU/ZUqb5NKEPmp7M/6izMSE8uPZ@083l1dvsNZsttA66nkBeve78vFTyvr88v2n03/fHJ1fXBwfXWE1Rnp79hENItsJN1EX9N5EvnUf3gmmERIklia/Hl6@u/nX8cXl@/Ozvdp4JiLbRdJYFhBiZvGQ74X2Q/yz9itwtezQ6DoEEfPOQxNjM9y0ZijyUDcGGShElqDrJDTMtJ//PNkN6Q8cIyIIhGKdeH4E7yMvsELfsSMAGo5thEi5RZXSRK2JpV/EWQVX6LMCrWcfT0@PPrzBe0mX6ygg/yUmcBkGGup6g8AliRwSEEhMFWvQ74916MnuRXoGQZRtCmb6lNaRLMhcYpVK7Ae2G/XQRtjpuFS35vp6tTHbQ787hPYygK9LRiTgY6JQTzMim5osvCOOUxep1g92hNRlIrcTkcnQcJC4hnqGExIRTado8n07nwkCCQIveJDkVZxLWkpTYkTrqNVCrW3UeoXaLdTeQrvw9wrt7iK12YSvCl8NvlvwBZgKMBVgKsDUNnwBrm7Ddwe@0K5BuwbtEHbAum/YLjxuiUsC6hbgTYOuH3i3gdFHvcDrI9cbwXBGaH9fqahhdGcFFaE3cM3I9lxkdCEYpH54m6mERKYlUpGIoEGPlZGasg7apJQQiKGEYCCiTZMR2z3J7g56PRJgLIoMhGhImaTnDMI7SdYZBAiwBMQR2HxKuTi2S1BMGeMAK0Dbx02ZosPo0gdvMh0vJDE9w57B18Qxvc7lMNf@FFEiQiKUKCboBByEt4GtJBHVqyVxUxRBDz2Dfv6CrquIwfPCUXrLcxwjaGKTAmIB1YJx@sa4m6hNe2KvYUT8Wi0WMYUcYPZqRLG4fAwYjEuTYuImFyDXT9682QCmxAXSHJkddh3DvZf4wMUamBi3tOlU2t3HZrls7mO1xUb81@O3788mLPP40RiL7CGm7LHIHuJCf5mduOVZepLAnGFkmPeb4p4oF8Gh/UgycAAJX6L/QkIsBqKuHnsh92Pq/xGIQ/NhyLI3Mcw7FJqBDUnR6/GfgQf5HPLD@jqqCwExLM91xpCAjbDPagsLjcrV@eHlh1xgwNPw7chwJDdvJGl7ax@75bK7j3eb8mvJrbU0ec@ds67Zt4pkHTaSkgsmbslgY/qynby8il/aSVN7C14Smt20Q8gS8FzDu9v8sZPDAipIIDkApJKUTuN0qtqKn6@KAwsDAMnDicfJD8iQj9lMyLdKyQuN7tel5p5UakKKEBMExpPrnhmv1JTlcpmzxJYXxYkiJoEw/cLjjP0vJSHLAjDfwuMw6yhOEjHgz0a9ITNYmsKcTK4kauN8LW6YHVfcLIiozxmBK86lLrHQOT57UxQ963NZjzOB@ROUQYH63S/ozfnVmw@HRxfn744vjgteOLoveuEfv1WykbFvXS8gNxbgQ1m642HlkjCiscKDugSGFQ0xli5tg9yZzydi3aDzLQgTyEvAEtVHm6j@AN/xJoLAqT9CxUQiFUM9KGuinqddR@HYjYwHxAtDXF1iHF4cEyMn/SuKvlx8cJE5IFYnjPAh4ur82fjyefQwfrwuNSY5jjRzQrMK2jpM21ueppvK7nUN3INllc@2xfMIvFxf47Ke/gBynlg4GXUoKNsoTjYUVK9TJ5P1xFVKsbETuaBjHzrmNukIIituko3TLhRVtw9AR1tR5An4GEdKrJjKZ1/ruUaLOITO5pa1ztK3tA9gLy6I5RXFAjeQwsdMLvmguUoewFVUeaVQS1AyrZWcwIuyuS@Tze3jVb1SD@/vF0kShdpbegHq9qsYhiQHm@XevRC3d2pABww3VEgBuTY6riAIb2zQRrd/0NQLoDkR5tlBWWPpRuqIMD3siDJgPCUKF7/Y/h1HwC6OQN76GR0YNq7WaxhEFuV8R2lkPV7jGCujpJMpSs7mgzKC8XwR6VPI@ZFL5hFUMH0xJmhoL2h9sxiqul4YtExlvKAyymnEpqF8ntwR6zd7MDWANSSsPoiFjs9PgHDOQ5PZVcx93lX@KmeY5nouzGQG5ClHymsEk4lit@EtVvXvJEgXCtj9s6TYWpRC@WlitHf2E6crl@OX/a2dbxpmJd@8fLbrDyJYYEXwFpFbEhREnOWj6ylZkDVM4Ep7Zy6sFvuywye7W@7iedMu6PVsG1Ehh1W1WZMyWV/onHOd52rbksId3lat4XND3XxZiSmkmWclWOh1VYINX9b/d0ztw@ekdj5LgWnJPi1P4WNDk3W7VivaZISfmJ/kwEVj2QtCL7TicLRS/J6Y23SgaR7qpQ1rvUVMUlQ0v7zOecmg6wN9TV3GIXjZINH2yF9wD5nGUcHt0xANaLqySA@WmhZbiwLqXMaa58amE2ydK1cjX15pq9E369lyo3xbVYRG1so4eJbLPuG0sQDQw9IEtETRh@@oKNbmNH3o4jVpXo39AkCDUf4L2i9D0p42EdYWbPTQfZ6Bxj/SQONlBjr4Zxho/EwDPf5IAz128YJ9MP5nGOjxmQYyinl3CUb0smx5Rwwf/6QFZX9BNNr7GmbbkssLvZQJfo0p9l@p8hYzWmEfR1/cc@HbIc1lmx/qAsvat6w8533zrlH7WTZX/qagyrcW9fME@3QFPQebX81/R/3W/qZ@1Z81EKUXCjpU8ap8MtR@iOBMsKFaBfaFFV1pDz2SwFMse2iHtueumh6BpHioHQzV13SSNNQaQ1XeY69qY6itnitt/F9baeNvWGkjs9LGCitlu9lJ7lqb3y8@82BFFwQk9D3Xst1bVDfYrPaH7Buz7fI/fuPb5dlZJj3wSY9vkiPMnmv0SfEQkx0MgUV4IWJ6sIrESgLb381tnwoJA0HYQ@y9b1uWQ@i1g/RIl57nquw8F9QTPAsph8hFSoQGKlKGAIoCpByFqKlqrfbW9qudXVT53HGr1xVouw2Ij@rwYozuKTasa3B7G1iyMycxbuCH63OHyOw8gGLQo30LVZilGoWi0zA7QgU@uQLOD5l0euxcYTaMFeuBlPQyBT2Vr8wq1LbmHTHvYeDBFUwShkZAzyAQPY9APdshAl2D4SYVmeBmehshMQU90q/WP/dOrqsyW65hFc1dXJhDJccxKllApfT0H@HIzbR4JnhUXM@NiMvO8qh4yAiTM5Y8l9xdA@olYknlJlwybgitGjmE0rGLByBs1KuN5XsUxcOFBqeXuLFT10zWtJOKTmWLr0jAYMjJXYacIokllhgijQlY5M5HBDVSMSDilfAzAyK/RcAbgJalMLZNICzfBuA4dLdAmJ9GsZiOpRIKQaX9Y8Mprhcd/ktctAndU@HbJiypZoiJcWKDJNiKen1d3FRZpMtQ6eRzoX3Z2dAc0mwekNBk@0BzCEmy0NNsUXAkyBkVYYX2wvMVFhZ1FJ5QK7lYMS@8wP0IhKJB0LNdw3HGAo8OQZC/rlO/tkhQR/4D6Zt1dvnKDvt1iu1BRMUtD4WW6I6MkREQfj@Gthea@55l92zwFwN1oSNa9a7en9MW@LuLIj/cazRu7ehu0K2bXr/x9p1y5RvkxBg9ErdRYCesA0kBQndwj46adUE4OTv8cEzPfmOnrdRv6mZ9VI8@ffpUJ/yv7tf7nWZTrSvQZFRgtC7PP14cHeOv@ahinMTpyESKycpwIeY4xZPNjHgZEo0nGln8QgEEXnxPBfNQYzWc3feSpBiHfkpSckPv8OLtzYfDT/xO33TKkbVme0fOoStoN/0l8/N0Wcy65Pd8sEhHGSmuOmW5A1LHMBqo02VZA0HSmPKUMaUxrxCaxL@gagMyNP@BqiX4kesluWWS0yyCeRG1BLuaOKAI4CnlcgwPFuCTVKNcdrPaSDlDbdpFAX@aIjMNrJwGStw0S@6v8Y/kh8DVQz6EC4nsPtn0TX@wOQwfdWRBWZBzPPPptZ1UvVx3T9Y@/slVwJjIsB2wPWprOWCWTvlHtXmC4R9FU9uv2jut7fZODofW0o5U70x2OrOOXGp01EbampcgzvMGzEPyXUyMGr2MMcuB6DyWJ24jB0@IZkV34vdI6SXWNGSy6JDphUEh9ugKn69qyPHovAj0JxakSpjoZsUIwtoIoHBDLfYHEfz0XEKnKZBbQrIHvxtflNf8ckKpsQm/OE8OoTfOGJCFVKkhJHEGaveNB4e4qSsuhNiLAiwLLxZcsS2gF542sZjknrSBZ00sZhAQHPIvQPgMH8AVfj/l/OKS3pY5PcHJYbcItUbWz6FuzFLdJrDKOMdYleO7aYw/Oj1haGxBMouNw1GX4vELGa1pbqHBK1QbKhQ@O@G1iVOen1yikp1HnfGG05M8kIssslqyMaBXgkqazm9talSkbPSoWGvnCXtuOZBKjfn2kNjpbHhAn@gziXmPoh7wzXfK@Lda@ox67oK2@qwyDe@QEn5V/wc"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online! (with pxem.posixism)</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# read integer and push it (pxem.posixism errors when not given)
.a._XX.z
# dup; while pop!=0; do
.a.c.wXX.z
  # heap=pop
  .a.tXX.z
  # .e command actually stands for calling content as
  # subroutine BUT content is empty so it stands for
  # duplicating entire stack
  # also non-command substrings stand for literals
  # so stack would have (3*2+1)*2+1*2=30 X's
  .aXXX.eX.eX.eXX.z
  # pop all to output each of them
  .a.pXX.z
  # push heap; push 1; push abs(pop-pop); dup
  .a.m\001.-.cXX.z
# done
.a.a
</code></pre>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 12 bytes (Filename) + 0 bytes (Content) = 12 bytes.</h1>
<ul>
<li>Filename: <code>XX.eXX.e.e.p</code></li>
<li>Content is empty.</li>
</ul>
<p>It outputs 24 X's without trailing LF.</p>
<p><a href=""https://tio.run/##1RprU9tI8rt@xSCMLdnItmRDADFkWQJJaglsAbnNXUwoWRpjHbKkkmSDAe9fz/XM6G3jwG6S2nMiLPd093T39GNelhEOv5reyLcdIsmSEJIIKWSsj0dGeIPabU0TyJ3vBRE6PrjaPz7GB0I09Qm6JpHpuQO017LIpOWOHQdpe1UVVau8HViODNda1B7z@33/4h0WK1KCqfgpU9okVx7oV2Nnxl@UmZhQfjx5/@nq/OIN1trtDlpFAy9A735XPn5KWZ@ev/90/O@rg9Ozs8ODC6zGSG9PPqJxZDvhOuqD3uvIt27CoWAaIUFi5eHX/fN3V/86PDt/f3qy05jORGS7SJrKAkLMLB7yvdC@i382fgWulh0afYcgYg499GCsh@vWDEUe6scgA4XIEnSdhIaZ9vOfJ7sho7FjRASBUKwTz4/g/dYLrNB37AiAhmMbIVKuUa3yoDbEyi/irIZr9LsGrScfj48PPrzBO0mXqygg/yUmcJkEGup748AliRwSEEhMFWs8Gk116MkeRHoGQZRtCmb6VFaRLMhcYpVK7Ae2Gw3QWtjruVS39upqvTXbQb87hPYyhscltyTgY6JQTzMim5osHBLHaYpU6zs7QuoikbuJyGRiOEhcQQPDCYmIHh/Rw/ftfCYIJAi84E6Sl3GuaClNhRGtok4HdTZR5xXqdlB3A23D/1doexup7TY8KjwaPBvwAEwFmAowFWBqFx6Aq5vwbMED7Rq0a9AOYQesR4btwtc1cUlA3QK8adz3A@86MEZoEHgj5Hq3MJwR2t1VamoYDa2gJgzGrhnZnouMPgSDNAqvM5WQyLREKhIRNOixMlJb1kGblBICMZQQDES0bjJieyDZ/fFgQAKMRZGBEA0pkwyccTiUZJ1BgABLQByBzR8pF8d2CYopYxxgBWi7uC1TdBhd@sWbTMcLSUzPsGfwmDim17kc5sqfIkpESIQSxQSdgIPwNrCVJKJmvSKuiyLooWfQz1/QZR0xeF44Sm95jmMEbWxSQCygWjDOyJj2E7VpT@w1jIjfaMQippA9zF6NKBaXjwGDcWlSTNzmAuT6yZs3G8CUuECaI7PDvmO4NxIfuFgDE@OO9vgobe9is1o1d7HaYSP@6@Hb9ycPLPP40RSL7EtM2WORfYlz/WV24pZn6UkCc4aRYd6sizuiXASH9j3JwAEkfIn@CQmxGIi6euyF3I@p/0cgDs2HIcvexDCHKDQDG5KiN@A/Aw/yOeSH1VXUFAJiWJ7rTCEBG@GI1RYWGrWL0/3zD7nAgG/DtyPDkdy8kaTNjV3sVqvuLt5uy68lt9HR5B23ZF1zZBXJemwkJRdM3JHBxvRlM3l5Fb90k6buBrwkNNtph5Al4HsFb2/yr60cFlBBAskBIJWkdBqnU9VO/P2qOLAwAJA8nHic/IBM@JjNhHyrlLzQ6H5dae9IlTakCDFBYDy57pnxKm1ZrlY5S2x5UZwoYhII0y88ztjfShKyLADzLTwOs47iJBED/mw1WzKDpSnMyeRKojbO1@Ka2XPF9YKIeskIXHEudYWFzuHJm6LoWZ@LepwJzJ@gDArU735Bb04v3nzYPzg7fXd4dljwwtubohf@8VstGxn72vUCcmUBPpSlIQ8rl4QRjRUe1BUwrGiIsXRpG@TOfD4Rmwadb0GYQF4Clqh5u46ad/BM1xEETvMeKiYSqRjqXlUT9TztKgqnbmTcIV4Y4uoS4/DimBg56V9R9MXig4uUgFh9YIR3EVfnz9aXz7d30/vLSushx5FmTmhWQVuHaXvN03Rb2b5sgHuwrPLZtngegZfLS1zV0x9AzhMLJ6MOBWUbxcmGgppN6mSynrhKJTZ2Ihd07EPH3CY9QWTFTbJx2oWi6vYe6GgrivwAPsaREium8tmXeq7RIg6hs7lFrbP0Le0D2ItzYnlFscANpPA@k0veay@TB3AVVV4q1AKUTGslJ/C8bO7LZHNHeFmv1MNHu0WSRKHuhl6AuqM6hiHJwWa5dy/E3a0G0AHDNRVSQK6NjisIwhtbtNEd7bX1AqgkQpkdlDWWbqSeCNPDnigDxlOicPGL7d9xBOziCOStn9GBYeNqvYJBZFHOd5RG1v0ljrEySjqZouRsPigjGM8XkT6FnB@5ZB5BBdPnY4KG9pzWV/OhquuFQctUxnMqo5xGbBrK58k9sXm1A1MDWEPC6oNY6PD0CAhLHprMrmLuZVf5q5xhmuu5MJMZk6ccKa8RTCaK3YbXWNW/kyB9KGA3z5JiY14K5aeJ0d3aTZyuWo1fdje2vmmYpXzz8tmuP45ggRXBW0SuSVAQcZaPrqdkQdYkgSvdrVJYzfdlh092t9jF86ad0@vZNqJCTupquyFlsr7QOUud52rbgsIdXtetyXND3XxZiSmkmWclWOh1WYINX9b/d0ztk@ekdj5LgWnJLi1P4X1Lk3W70Sja5BY/MT/JgYvGsueEnmvF4e1S8QdibtOBpnmolzas9eYxSVHR/PI65yXjvg/0DXURh@Blg0TbI3/OPWQaRwW3T0M0oOnKIgNYalpsLQqopYxV5samE2ydK9cjX15qq9tv1rPFRvm2qgjdWkvj4Fku@4TTxgJADwsT0AJF776jolgraXrXxytSWY3dAkCDUf4L2i9C0p42EdbmbHTXf56Bpj/SQNNFBtr7Zxho@kwD3f9IA9338Zx9MP5nGOj@mQYyinl3AUb0smw5JIaPf9KCcjQnGu19BbNtycWFXsoEv8QU@69UeYsZrbCPo8/vufDtkPaizQ91jmXjW1YueV/ZNRo/y@bK3xRU@daivkywS1fQJVh5Nf8d9Vv5m/rVf9ZAVF4o6ETFy/LJRPshgjPBJmod2BdWdJUddE8CT7HsiR3anrtsegSS4om2N1Ff00nSRGtNVHmHvaqtibZ8rrT2f22ltb9hpbXMSmtLrJTtZie5a6W8X3ziwYouCEjoe65lu9eoabBZ7Q/ZN2bb5X/8xrfLs7NMeuCTHt8kR5gD1xiR4iEmOxgCi/BCxPRgFYmVBLa/m9s@FRIGgrCD2PvItiyH0GsH6ZEuPc9V2XkuqCd4FlL2kYuUCI1VpEwAFAVIOQhRW9U63Y3NV1vbqPa559Yva9B2HRAfNeHFuL2h2LCuwd1NYMnOnMS4gR@ulw6R2XkAxaBH@xaqMUu1CkWnZfaEGnxyBZwfMun02LnGbBgrNgAp6WUKeipfm9Wobc0hMW9g4MEVTBKGRkDPIBA9j0AD2yECXYPhNhWZ4HZ6GyExBT3Srzc/D44u6zJbrmEVlS4ulFDJYYxK5lApPf1DOHI7LZ4JHhXXcyPisrM8Kh4ywuSMJc8ld9eAeolYUbkJF4wbQstGDqF07OIBCFvNemvxHkXxcKHF6SVu7NQ1kzXtQ02nssVXJGAw5OQuQ06RxBILDJHGBCxyyxFBjVQMiHgl/MyAyG8R8AagZSmMbRMIi7cBOA7dLRDK0ygW07FUQiGotH9sOMX1osd/ifM2oXsqfNuEJdUMMTFObJAEW1EvL4ubKvN0GSqdfM61LzobKiHNyoCEJtsHKiEkyUJPs0XBkSBn1IQl2gvPV1iY11F4Qq3kYkVZeIH7EQhFg2Bgu4bjTAUeHYIgf12lfm2RoIn8OzIym@zylR2OmhTbg4iKW@4KLdGQTJEREH4/hrYXmkeeZQ9s8BcD9aEjWvUu3p/SFvg/jCI/3Gm1ru1oOO43TW/UevtOufANcmTc3hO3VWAnrAJJAUJ3cA8O2k1BODrZ/3CIP31qEvrAP184P/14dnCIv@ZDhqGJj7cmUkxWYwsBxSmebGbEi5BosNCw4bcFIKriSyiYxxEr0OwylyTFOPRTkZLrd/tnb68@7H/iF/YeHzmy1u5uyTl0BW2nv2R@WC6LWZf8Eg8W6RAixVUfWWKAvDCJxurjopSAICM88nzwSANaITRDf0H1FqRf/gPVK/Aj10tyhSSnWQSTHmoJdu9wTBHADarVGB7MwR9SjXKpy@oi5QR1aRcF/McUmWlg5TRQ4qZZcjmNfyQ/BK4e8iEWSGSPyLpv@uP1SXivIwtyvpzjmc@d3aSk5bp7srDxT668xUSG7YDtUVfLAbNcyT@qzbMH/yia2n3V3epsdrdyOLRQ9qRm72GrN@vJlVZPbaWteQniJG7AJCPfxYPRoDctZjkQnaTyrGzk4AnRrOhO/JIovaGahkwWHTK9DSjEHl3jk1ENOR6d9ID@xII8CLPYrNJAzBoBVGUotP44gp@eS@gcBBJHSHbgd@uL8prfPKi01uEX58kh9DoZA7KQqrSEJM5A7ZFx5xA3dcW5EHtRgGXhxYIrtgX0wnMiFuNMUEsbeErEYgYBwSG5AoRP3wGcu31yenYe3wk6PsLJgbYI9YRdkrDGALi@4jbiVztSnePVRREFq/kLM1wW4LyQV7ZWiY27kKX8TF78PkfnsbhO4TWuCzUOnxzlqhvneXp0jip2iSS9RwR9lZqS60WsOK2N6R0jVNH09CqoxpXJ/CZWaKWoUV4EPo5x0SxopZYvNfV6a564XryyQlmtonenf7xOEcXbaEDnA@UlGxOx0ymuDZeYmiLWWKDwViTR69k8Cobw6gChDPIHRAiHSAm//g8"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre><code>XX.z
# push two X's
.aXXXX.z
# call content (as subroutine), pushing final result
## NOTE if original stack was 1,2,3 from top,
## the subroutine stack is also intialized with 1,2,3
## Then when returning from subroutine with final result of stack 4,5,6
## then original stack would be 4,5,6,1,2,3
## Since content is empty, it stands for duplicatinf entire stack
.a.eXX.z
## now X,X,X,X
# push two X's
.aXXXX.z
## now four X's
# duplicate entire stack twice
.a.e.eXX.z
# finally pop all to output each of them
.a.p
</code></pre>
","","user100411"
"221061","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, 23 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>$((-$4)) $2 $3 $((-$1))
</code></pre>
<p><a href=""https://tio.run/##VcixCsIwEIDhPU/xDzc0ww1Jiwq@ikuaO0ihGLCCjx@Lm@P3WTna@LRtd15ejMJKxe5Y5/A3qkhBVqQiZ3ttnceQaVJZYkQyMvNjinFYf/pYuHDjGjIzGU1B/yeFLw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p>Requires positional parameters for each of A, B, C, and D. Before evaluating the command. Also the code evaluates to just four strings, so run <code>echo</code> command with those code (may not portable when D is originally positive, as hyphen-parameter may be treated as an option).</p>
<h2>How it works</h2>
<ul>
<li>dollar-double-parentheses is arithmetic expansion.</li>
</ul>
<hr />
<h1>Polyglot for Bash, OSH, bosh, Dash, ksh, yash, and Zsh, 25 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>$((- $4)) $2 $3 $((- $1))
</code></pre>
<p><a href=""https://tio.run/##VckxCoQwFADRPqeY4hemSJEouuBVtonJh4hiYBX2@FHYast5s52lfcu6Kx@NmchCIs/kyqkXziERWZCEPKypVN5Nuu4Zg7VIQHp@7a1tuR7aBkZeTCbQE3DeuH/x5gY"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>Differences</h2>
<ul>
<li>A space between hyphen and dollar. This is a workaround for negative values; if one of them was expanded to <code>$((--1))</code>, for example, Dash, OSH and Bash parse as minus of minus one, but other four don't; they parse to decrement a variable named one, although one is a constant.</li>
</ul>
<hr />
<h1>Polyglots for Bash and OSH, 19 bytes</h1>
<p>Thanks, 2x-1!</p>

<pre class=""lang-bash prettyprint-override""><code>$[-$4] $2 $3 $[-$1]
</code></pre>
<p><a href=""https://tio.run/##Vci9CoMwFIDRPU/xDXe9Q6JowUepDvm5EEEa0EIfP7Zjx3NSvGr/1P0wTouFSCJTFkrjsjeqSEQSkpFvW66NtctTZdyQgAz84Lde2sv6yMSD2QUGAuqd/o93Nw"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>What the heck</h2>
<p><code>$[ ... ]</code> is historically equivalent to <code>$(( ... ))</code>, which is <a href=""https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xcu_chap02.html#tag_23_02_06_04"" rel=""nofollow noreferrer"">not adopted for POSIX</a>.</p>
<p>OBTW adding a space betwee hyphen and dollar (which is +2 bytes), the code would be polyglot for Zsh, too.</p>
","","user100411"
"221062","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, <s>21</s> 20 bytes (filename) + 0 bytes (content) = <s>23</s> <s>21</s> 20 bytes, requires unprintable character.</h1>
<ul>
<li>Filename (escaped unprintable): <code>\001.r.-.z.c.n,.o\001.+.ce.a</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##1Vr/U9u4Ev/df4UQIbYTnNghbQFH9DgK185RcgO9d/deQxljK8RDYntsJxCS3L/eW0l2YschhV7budehsS3trj672l19dayo99n2B4Hbp4qqSBGNkUaH5nBgRbdI1xsNk94Hfhij06Orw9NTcmTG44CiGxrbvtdFB3WHjuresN9HjYOyUS7zWhA4sDynWJvI@u3ww1uCS0pKpwVzgaxKLU3Yo7o/Ey/aDKcofj979@fVxYc3pKHrO2nhb@2Ld3@e/vfqqH1@fnz0gRimbUUU4dLk58OLt1f/OT6/eNc@26@OZxi5njJWuZY@CvzIvTfZR/Vn06SRZc8Z/7eSjw6GfSumKOoxLj@I4e3OD50o6LuxafVdK0LaDZJLE6OKSz/hmUxk9pTNs99PT4/evyH7@XYU1rhjRj23G3MgDmL0SQG1ez4qbaq8dUPln7HvI7/vgOpujIxEGh1ZfYQ3UNfqRxRPpxO0inYGrcatliYbUdxzQlnqDj07dn0PWddgRmUQ3aiTIHS9GGEahn6IDIQRlHIBiq6aswUL9FekhDTettWJ21Xc62G3S0NCMFYnXT@0abc/jHqKagINUYA6puEUHn3XoyihVk3ghPoW0VV4DEMPwcO0@35EExZo0yYJOaO2N/7CCKtpcxgcA1SeRMNrBaNapYS3MQZIJi/4@AldVhAvmrc4c/x@3wp1YptJk2CYuVYDa3ydIp/wZxTToFplTc8/Dwh/teLUWvzTnNcT3ZwtRGaNMZEQyrLAZ5ZLytjXja77lner2JwpgWoTstOYTpW9FrHLZbtFjB2Vcf18/Mu7M0ZHB0E8Jpg/8Fw8wfyBC@0hlFoD80ruxwqYK4ot@3Yb72M1Xxy5D3RRHELsKuwnotThRQMLPFXnmISTSdImigEOC5uI2QJRy@6hyA5diB6/Kz5DfxiDX0ibm6gmhdRyfK8/Bve1ogFPE1aMWi35Q/vw4n3Ga@FpBW5s9RUvayTl5YsW8cplr0X2dPW14lV3Guq@t2Rde@Dk2TrwipDigYl3VLAxe3mZvrxKXpppVfMFvKQ8e/MGDb0Bzw2y91I8djNUwGXoWTZD35vzNQSfYewkz1f5joUOoKHVT/opCOlI9NlMytYq6QsLw9clfV8p6RDCOCXgMoXuC@OVdFUtl4VI4vgxEwjunrBAvH0SccR/S5jbDDqfBVi2RsTZoiFGtBDzV71WV3lZGgG4v8DFqGdpbHQR3rI7Ht7OQTSXjCAUF6hLPHSOz97koS/aXNXiTOL@JKlYYn73E3rT/vDm/eHRefvt8flxzgvvbvNe@Mev8qJn3BvPD@mVA/SBFfdEWHk0ilmsiKAugWGxhRN08zrIepMsvJrFBk4IE0hBIBLV7rZR7R7@j7cRBE7tAaMpwgyGcVBuYDPLu4misRdb90gk7iD0b0JrkNAk@T8xctq@ppmr4YOLLBUSY8IZ72Ohzl/1Tx/v7scPl6X6JCMR8iSrNkDbPtf2RqRhXdu7rIJ78Kzy0XVEHoGXy0tSNucfwC4Si2BjDtXxEEqSDSuq1ZiTqWbqKqXE2CkuaDiAhoVNOhJGLOMoLpk3oRmmewA6upqmTsDHBFFqxTk@99LMVDq0T9mgv6p2Nn@btwHicQGWn4cFbqBEDwtc6oG@Dg/Qaoa6FtQKkoXWWgZwEZv3PGzegKxrlXn4oJVnSRVqvjBzpd6gQqBLMmWzzLsfkeZuFfhA4JYBKSBTx/oVgIjKOqv0Bge6mStagrAsDoY1nm6UDu50vA5WgeIxKAJ@vv4b9oCb74Gs9Rd8YNhktN4gABmr2YbmkfVwSRKqBSebIjF2PmdTEfTns1gfI872XDqPYMDMYkyw0C5ofVUMVdPMddpCZVJQGWU0YhPIZBLbwbWrfZgawNKA2jF10HH7BBiXPDSdXSXSl13layUjSOAezGSG9DFHymoEk4l8s9ENMcxvBOQaBrDbJ6F4UUSh/TAYzd1W6nTlcvLSerH7RcOslZvF53rBMEaeH8NbTG9omIM4y0bXY1iQM0rLtebuUlgV23KjR5tb7eJZ0xb0erKNGMhRxdCrygLrM51zqfHM2LZi4I5uKs7oqaFuP2@IyaWZJyVYaHVdgo2e1/43TO2jp6R2MUuBaUmLDU/RQ70BS@NqNW@TO/LI/CRTnDeWWwBdqCXR3Vr4XbxYs/I0D@OlC2u9IiXNK5pdSWe8ZHgdAH/VWCUhfF4nsfo4KLiHyuIo5/bzEA1ZunJoF5aaDl@LAulSxlqWxqcTfJ2rVuJAXWuruy@OZ6uN8mVVEbpz1sbBk1z2EadNAEALKxPQCkXvv6GipLGk6f012VCW1WjlChrQy1@h/SqixuMmIo2Cje6vn2ag8fc00HiVgQ7@HQYaP9FAD9/TQA/XpGAfQv4dBnp4ooGsfN5dQRE/L1v2qBWQH7SgHBSgsdY3CN@WXD3QKwvgl4RRf80o73Cj5fZxzOKei9gO0VdtfhgFkdUvWXnJ@5Zdo/qjbK79Q6Dalxb1ywwttoJeKltezX9D/Tb@oX6VH9URpWcCHRlkXT4ZNb4LcA5sZFRAfG5FV9pHDzT0NccduZHre@umR4CUjBoHI@M1mySNGvWRoe7zV6M@aqyfK239X1tp6x9YaWthpa01VlrsZqe5a2N5v/jMhxVdGNIo8D3H9W5QzeKz2u@yb8y3y//4VWyXoxvq0ZCdhLIDn/nxjdgh1@SuZw1o/oSRHwyBRcRAxPXgIxIfEvj@bmb7VEoFSNI@4u8D13H6FJXLUnJEsBWxU1pjc7NSn4F6ku8g7RB5SIvR0EDaCIriEGlHEdKNxk7zxctXu3tI/tjxKpcy1N2ENEA1eLHubhk1rGtI8yWI5GdOOKnAJWVxKLEVdTqeoLi7ZRSAGZYRMrdUPTfo1O2OJMO/zAAuDplMDNQyt2GiWBdQglb8uFaeycy2do/at9Dx4Ao2jSIrZGcQiJ1HoK7bpxJbgxGdQaZEl9ID69QU0B1Kpfaxe3JZUflyjRhInBI/RkqPE1JaIGX87IcKYn0@eKZ0DK7vxdTjZ3kMHrKi9IwlK0UIMNhxDPMSXDKECVf0G0Lreg6hed8lHRDVa5X66j2K/OFCXfArwthz10zXtBPZZNhMlHaGKqVaLhRJLbHCEPOYgEXuckQwI@UDIlkJPzEgslsEogJ4eQrj2wTS6m0AQcN2C6TlaRSP6QSVlAuqxr82nJLxoiO@cNEmbE9FbJvwpLogTI2TGCSl1ozLy/ymSpFvQcomn4X6VWdDS0Sz5YKUZ7EPtESQJgtzni1yjgQ5Q5bWaC89XWGpqKP0iFrJ6WEBvCT8CECxIOi6ntXvjyURHZKkft5kfu3QsIaCezqwa/zSjRsNaozah4hKau5zNXGPjpEVUtQN/QGvz1UPfMftuuAvFrqGhtio9@Fdm9XAXy@Og2i/Xr9x497wumb7g/ovb7UPgUVPrLsH6tVz4qRNYMmVsB3coyO9JkknZ4fvj9nZb@K0ckfXjVpYe6jZNW@75vPPas2mNUuGbrpo/35@dExk@XM2oLgQPL2zkWbzETgXboLn0WrOvIpISUItuYrCQIrrQopSUtLLVIfnv1y9P/yTX76aTnl9Q2/uqtqeqqqYsYtbNgSzPkKaZ0x55EPgj@KhMV0V8whCfioCfsoiVqMsBX9ClTrkV/GBKiX44PLT2yEM30cGnt8IG7Ji6NfLchkKw0LhAoTTRNpZM0cgUDkZVNp0qgQRsPgoAGelsTug24EdDLdH0YPpQE5Ws3o1p4/mslSx2HL7YI5mg6soG25H0hpG81Vzd@dlc1diQ05HqXUmu51ZRy3VO0ZdniYdIk@sKruRMGMzOJGyLBMGE4zEhTd2027uFQsHUHHSQbKYiTVQ32cjPgChjqymwJJGBtZ9n3pf2@kiIAlOvZoXilgkWHwBCIho@BJzRiSL@w7t8wt2@@L0hKSHpxhyl2q22Z2n@ifujKU6uxDWJsRQk7tOXDI6PeFkfIILtFxNQbqSThzw70wzE1eR8ZqQ8cjZich1grN9coFKbpZ0JipOT7KFAjLmuWlryK6YlBrichw8AZL2WlxVEBpstFPxwl6AykjkdhHudLZ84E/1mSSy7@IuyM02yuXv7Ah/KGgLnjGNekiLPv8N"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# push 1; push int(rand()*pop)
## NOTE rand() outputs 0&lt;=n&lt;1
## NOTE assuming NUL cannot be used for filename
.a\001.rXX.z
# while size&lt;2 || pop!=pop; do
.a.zXX.z
  # dup; print pop; push comma; putc pop
  .a.c.n,.oXX.z
  # push 1; push pop+pop; dup; push 101
  .a\001.+.ce
# done
.a.a
</code></pre>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 3 bytes (filename) + 20 bytes (content) = 23 bytes, requires unprintable character.</h1>
<ul>
<li>Filename: <code>e.e</code></li>
<li>Content (some unprintables are escaped): <code>.c.w\001.-.e.+.n .o.d.a</code></li>
</ul>
<h2>With comment</h2>
<pre><code>e.eXX.z # push 101; call content
.a
</code></pre>
<pre><code>XX.z
# dup; while pop!=0; do
.a.c.wXX.z
  # push 1; push abs(pop-pop); call content (* result of final stack will be pushed to original *)
  .a\001.-.eXX.z
  # push pop+pop; print pop; push space; print pop; return
  .a.+.n .o.dXX.z
# done; (* implicit return *)
.a.a
</code></pre>
<p><a href=""https://tio.run/##1RprU9tI8rt@xTAYW7KRLBknAeQhyxLYpJbgLWDv9i4mlJDGoMKWVJJsMLb3r@d6ZvS0DYHdJLXnSpDU093T3dOPeTlWdPPF9oeBO6CyIksRjZFKR@ZoaEW3SNdbLZPeB34Yo@ODy/3jY3JgxpOAomsa277XR3tNh46b3mgwQK29qlGt8lZgOLQ8Z7k14fXb/vl7gityiqcGGUPWpFSm7NHYnYsXdY5TKX4/@fDH5dn5O9LS9a0U@Fv37MMfx/@5POienh4enBPDtK2IIlyZ/rx/9v7yX4enZx@6J7uNyRwj15MnCtfSR4Efufcm@2j8bJo0suyM8L8r6ehwNLBiiqIbRuUHMbzd@aETBQM3Nq2Ba0VIvUa1ytRo4MpPeF4jNfasmSe/Hx8ffHxHdsv9yKxzx4xu3H7MBXEQw08A1L7xUWVd4b0bCv@MfR/5AwdUd2NkJNzo2BogvIb61iCieDabolW4c@g17nTUmhHFN05Yk/ojz45d30PWFZhRHkbXyjQIXS9GmIahHyIDYQRQzkDWFXOek8B4RXJI401bmbp92b0a9fs0JARjZdr3Q5v2B6PoRlZMwCEyYMc0nMFj4HoUJdiKKSH4ATkgdYiuIHiOQo89RJM98COaUHPsOfy3SULPAEBsr/2JEXQrmCWCYJyiU7CJaItGVzJGWr2CNzEGwc0c@ukzuqgjDi8Kx@gdfzCwQp3YDJAIaJhSwRZDa3KV6st64q9RTINGIxExg@wR/mrFibjC3BwmpMkwiS4EKPRTtCsjXyAukRbI3OhqYHm3ss2JEg1sQrZas5m80yF2tWp3iLGlMKqfD3/5cMLw6DCIJwTzB87YE8wfeKm/3E7C8jwkZDBnFFv27SbexUoZHLkPNAeHkAZk9iei1OGgoQVOr3OZhL9K0jqKQRwWgRGzBaKWfYMiO3QhEP2@@Az9UQwuJq2vI00KqeX43mACkWBFQ55xrBh1OrXz7v7Zx0IAwNMK3NgayF7RSPLrVx3iVateh@zoylvZa2y1lF1vwbr20CmT9fhIyh6YeEsBG7OX1@nLm@SlnTa1X8FLSrOTdWjoLXiukZ3X4rFdwAIqQy@SGfpORtcSdIaxlTzflAcWBoCG1iAZpyCkYzFmc6nYKqcvLKLfVvRduaJDNsApAucpdM@NV9EVpVoVLInjx1Ph/QkJhOlnEWf8byUNWR6AxRYRh3lHSZJIAH82tabCYWkE4EEuVxq1vKWP8Ibd8/BmSURzwQhCcSF1hYfO4cm7suh5n6t6nEvcnyQFS8zvfkLvuufvPu4fnHbfH54elrzw7rbshf/@tZaPjHvt@SG9dAA/sOIbEVYejWIWKyKoK2BYbOFEuqwNcmcxn2DNYjUYwgTyErBE2t0m0u7h/2QTQeBoDxjNEGZiGHvVFjaLtOsomnixdY9EDQhC/zq0hglOUkoSI6f9q6q5WnxwkQUgMaac8D4W6vzZ/Pzp7n7ycFFpTgscWeaEZgO0HXBtr0Wa1tWdiwa4B88qn1xH5BF4ubggVTP7AHKRWAQZc6ieh1CSbBhI05iTKWbqKpXE2Klc0HEAHQub9CSMWMaRXZJ1oRqmuwc6uqqqTMHHBFJqxUw@98IsNDp0QNn8YVXrPHvL@gD2eEksvywWuIEcPeRyKXv6U/IArmooTwq1AiXXWi0IvCyb9zLZvCF5qlfm4cNOmSRVqP3KLEG9YZ3AkBRg88K7H5H2dgPogOGGASmg0MbGFQQRjU3W6A33dLMEWhBhkR2UNZ5u5B7u9bweVgDjMVGE@OX2bzgCbnkEitbP6cCwSbVeIyAyVoodZZH1cEESrJySTaYYOZ/@KQjG80WkjyEXRy6dRzDBzOWYYKG9pPXlcqiaZmnQcpXJksqooBGfhor5cA9rl7swNYBVBrVj6qDD7hEQLnhoOrtKuC@6yl/lDNNc34OZzIg@5khFjWAyUe42uiaG@Y0EuYICdvssKV4tS6H@MDHa253U6arV5KXzavurhnmSb1E@1wtGMfL8GN5iek3DkojzYnQ9JgtyxilcbW8vhNVyX270aHerXbxo2iW9nm0jJuS4bugNOZf1hc650Hmhtq0o3NF13Rk/N9Ttl5WYUpp5VoKFXp9KsNHL@v@GqX38nNQuZikwLemw8hQ9NFuK6TYaZZvckUfmJwVw2VjuktBLrSS6e1L8Ps7XrDzNQ710Ya23jEnLihaX1wUvGV0FQN8wVnEIXzZIrD0OltxDYXFUcvssREOWrhzah6Wmw9eigLqQsRa58ekEX@cq9ThQnrTV3Vfr2WqjfF1VhO6cJ@PgWS77iNMmAkAPKxPQCkXvv6GipLWg6f0VWZMX1eiUAC0Y5b@g/Sqk1uMmIq0lG91fPc9Ak@9poMkqA@39Mww0eaaBHr6ngR6uyJJ9CPlnGOjhmQayynl3BUb8smx5Q62A/KAF5XBJNNb7GuHbkqsLvZwLfkEY9l@p8g43Wmkfx1zecxHbIfqqzQ9jiWXja1Ze8L5F12j8KJurf1NQ9WuL@kWCDltBL8AWV/PfUL@1v6lf/UcNROWFgo4N8lQ@Gbe@i@BcsLFRB/alFV1lFz3Q0Fcdd@xGru89NT0CScm4tTc23rJJ0rjVHBvKLn81muPW03Oljf9rK238DStt5FbaeMJK@W52mrvWFveLT3xY0YUhjQLfc1zvGmkWn9V@l31jvl3@71/Fdjm6ph4N2aEqO/DJjm/EDrla63vWkJYPK/nBEFhEFCKuB69IvCTw/d3C9qmUMpCkXcTfh67jDCiqVqXkiGAjYge@xvp6vTkH9STfQeo@8pAao5GB1DGA4hCpBxHSjdZW@9XrN9s7qPap59UvatB2HdIAafBi3d0ybFjXkPZrYMnPnHDSgCtyfiixEfV6nsC4u2UYIDMsI2rcUs1S0WnaPakGv0IBF4dMJgbsGrdholgfpASt@MlvbV5jtrVvqH0LAw@uYNMoskJ2BoHYeQTquwMqsTUY0ZnIlOhSevadmgKGQ65rn/pHF3WFL9eIgcSB82Oo9DBBpUuojJ79oQJZz4pnisfE9b2Yevwsj4mHrCg9YylyEQwMdhzDvARXDGHCFeOG0FMjh1A2dskARE2t3ly9R1E@XGgKelkYO3PNdE07rZlMNhOlg6FIqZa5IqklVhgiiwlY5C5GBDNSOSCSlfAzA6K4RSAagJanML5NIK3eBhA4bLdAWpxG8ZhOpJJKQdX6x4ZTUi964gsv24TtqYhtE55Uc8TUOIlBUmzVuLgob6os0@WobPK51L7qbGgBab4ISGnyfaAFhDRZmFm2KDkS5Iya9IT20vMVlpZ1lB5RK71YsSi8JPwIhGJB0Hc9azCYSCI6JEn5ss782qGhhoJ7OrQ1fn/HjYYaw/YhopKW@1JLfEMnyAop6of@kLeXmoe@4/Zd8BcLXUFHrOqdf@iyFvh3E8dBtNtsXrvxzehKs/1h85f36nlg0SPr7oF6zRI7aR1IShC2g3twoGuSdHSy//GQUI1KZ93fTw8O2TFw4r81zdbuerpuaKpGtYbmIc3XHM2qKfhLMZw4Czy7s5Fq8/pbCjbB9tFmTrwKiQUSCylxkwAiLrmgQkSM8eLN7yHJcoLDfhU5vbC1f/rL5cf9P/gFLzSbCeSW3t5WCugq2sm@FHGQruC8S3HBh2A2vEj1jBlPGpAzxvHImK1KFwiyxUzkihkLdpWy7P0Z1ZuQmsUHqlfgo9BLer2koFkMEyJmCX5PbcQQwEWq1QQeLsGnmUaFtOa0kXqC2qyLEv4sQ@YaOAUN1KRpziyWM5WDCLj6KIA4obE7pJuBHYw2x9GDiRyoB0qBZzGvttNyV@ju0aInfoXSlxBZ7gBsj9qtAjDPo@JnuCKziJ/aMtpv2ttbr9vbBRxWRHuy1ptu9@Y9pdLsGc2stShBkuAtmIAUu5haDXYLY14AsQmsyNhWAZ4SzcvuJK4VsvuMWcjk0QFYMyaBqMtiotpCA59NiEB/6kCOhBluXoUgnq0QKjYU4WAUw6fvUTY/gaQS0V34bn5W34pbCZXmJnwJngLCrppxIA@pSlNK4wzUHlr3A@plrrgUYi8KsDy8eHAltoBeRL4kOM00WYNIlwTnEBAcEi9AxNQewDVxMaV7esauyRwfkfSUG0ORUcwuFIx5phu7BNglxFCSS2mcPzo@4mh8JTJPjCNQV@KJmxhbs8IKQ5SmNpQmcnIkipKg7B6doYpbRJ2LhuOjIlCIjHkR2Rixu0CVlrgQCc95cfSYWGvdlL2wHEhlJHz7CPd6Gz7Qp/pME953cR/4Fjvl/Le2zDnz3CVtzXltFt0gNfryPw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online! (with pxem.posixism)</a></p>
","","user100411"
"221064","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 1000010000.</h1>
<ul>
<li>Filename: <code>10000.e.p</code> (9 bytes)</li>
<li>Content: empty (0 bytes)
<ul>
<li>Total: 9 bytes</li>
</ul>
</li>
</ul>
<p><a href=""https://tio.run/##1Vr/U9u4Ev/df4UQIbETnNghbQFH9DgK185RcgO9d/deQxljK8SDY3tsJxCS3L/eW0l2YschhV7buce0sS3trj672l19tc2o/9nyB4HjUlmRpYjGSKVDYzgwo1ukac2mQe8DP4zR6dHV4ekpOTLicUDRDY0t3@uhg4ZNRw1v6LqoeVDWy2VeCwIHpmcXaxNZvx1@eEtwSU7p1GAukFUppQl71PZn4kWd4RTF72fv/ry6@PCGNDVtJy38rXPx7s/T/14ddc7Pj48@EN2wzIgiXJr8fHjx9uo/x@cX7zpn@7XxDCPHk8cK19JHgR859wb7qP1sGDQyrTnj/1by0cHQNWOKoj7j8oMY3u780I4C14kN03XMCKk3qFKa6DVc@gnPKqTCnhXj7PfT06P3b8h@vh2ZNW4bUd/pxRyIjRh9UkCtvo9KmwpvXVf4Z@z7yHdtUN2JkZ5IoyPTRXgD9Uw3ong6naBVtDNoNW631YoexX07rEi9oWfFju8h8xrMKA@iG2UShI4XI0zD0A@RjjCCUi5A1hRjtmCB/orkkMbbljJxerJzPez1aEgIxsqk54cW7bnDqC8rBtAQGahjGk7h4ToeRQm1YgAn1LeJpsBjGHoIHobl@hFNWKBNiyTkjNra@AsjrKTNYXAMUHkSDa9ljOrVEt7GGCAZvODjJ3RZRbxo3uLM9l3XDDViGUmTYJi5VgNzfJ0in/BnFNOgVmNNzz8PCH8149Ra/NOY1xPNmC1EZo0xkRDKssBnlkvK2NeJrl3Tu5UtzpRAtQjZaU6n8l6bWOWy1Sb6jsK4fj7@5d0Zo6ODIB4TzB94Lp5g/sCF9hBKrYF5JfdjGcwVxaZ1u433sZIvjpwHuigOIXZl9hNRavOigQmeqnFMwskkaRPFAIeFTcRsgahp9VFkhQ5Ej98Tn6E/jMEvpM1NVJdCatq@547Bfc1owNOEGaN2u/Khc3jxPuO18DQDJzZd2csaSX75ok28ctlrkz1NeS17tZ2msu8tWdca2Hm2LrwiJHtg4h0FbMxeXqYvr5KXVlrVegEvKc/evEFda8Jzg@y9FI/dDBVw6VqWTdf25nxNwafrO8nzVb5joQNoaLpJPwUhHYk@m0nZWjl9YWH4uqTtyyUNQhinBFym0H1hvJKmKOWyEElsP2YCwd0TFoi3TyKO@G8Jc5tB57MAy9aIOFs0xIgWYv5q1BsKL0sjALsLXIx6lsZGD@Etq@vh7RxEY8kIQnGBusRD5/jsTR76os1VLc4k7k@SgiXmdz@hN50Pb94fHp133h6fH@e88O4274V//FpZ9Ixz4/khvbKBPjDjvggrj0YxixUR1CUwLDZxgm5eB1lvkoVXN9nACWECKQhEovrdNqrfw//xNoLAqT9gNEWYwdAPyk1sZHk3UTT2YvMeicQdhP5NaA4SmiT/J0ZO21dVYzV8cJGlQqJPOON9LNT5q/Hp4939@OGy1JhkJEKeZNU6aOtybW9EGtbUvcsauAfPKh8dW@QReLm8JGVj/gHsIrEINuZQXQ@hJNmwonqdOZlipK5SSoyd4oKGA2hY2KQrYcQyjuyQeROqbjgHoKOjqsoEfEwQpVac43MujUylTV3KBv1VtbP527wNEI8LsPw8LHADOXpY4FIOtHV4gFbVlbWgVpAstFYzgIvYvOdh8wZkXavMwwftPEuqUOuFkSv1BlUCXZIpm2Xe/Yi0dmvABwK3dEgBmTrWrwBEVDZYpTc40Ixc0RKEZXEwrPF0I3dxt@t1sQIUj0ER8PP137AHnHwPZK2/4APDJqP1BgHIWMk2NI@sh0uSUC042RSJsfM5m4KgP5/F@hhxtufSeQQDZhRjgoV2QeurYqgaRq7TFiqTgsoooxGbQCaT2C6uX@3D1ACWBtSKqY2OOyfAuOSh6ewqkb7sKl8rGUEC92AmM6SPOVJWI5hM5JuNbohufCMg1zCA3T4JxYsiCvWHwWjttlOnK5eTl/aL3S8aZq3cLD7HC4Yx8vwY3mJ6Q8McxFk2uh7DguxRWq62dpfCqtiWEz3a3GoXz5q2oNeTbcRAjqq6VpMXWJ/pnEuNZ8a2FQN3dFO1R08Ndet5Q0wuzTwpwUKr6xJs9Lz2v2FqHz0ltYtZCkxL2mx4ih4aTVga12p5m9yRR@YnmeK8sZwC6EItie7Wwu/hxZqVp3kYLx1Y6xUpaV7R7Eo64yXD6wD4a/oqCeHzOonVx0HBPRQWRzm3n4doyNKVTXuw1LT5WhRIlzLWsjQ@neDrXKUaB8paW919cTxbbZQvq4rQnb02Dp7kso84bQIAWliZgFYoev8NFSXNJU3vr8mGvKxGO1fQhF7@Cu1XETUfNxFpFmx0f/00A42/p4HGqwx08O8w0PiJBnr4ngZ6uCYF@xDy7zDQwxMNZObz7gqK@HnZsk/NgPygBeWgAI21vkH4tuTqgV5eAL8kjPprRnmbGy23j2MU91zEdoi2avNDL4isfcnKS9637Bq1H2Vz9R8CVb@0qF9maLMV9FLZ8mr@G@q38Q/1q/6ojig9E@hIJ@vyyaj5XYBzYCO9CuJzK7rSPnqgoa/azsiJHN9bNz0CpGTUPBjpr9kkadRsjHRln7/qjVFz/Vxp6//aSlv/wEpbCyttrbHSYjc7zV0by/vFZz6s6MKQRoHv2Y53g@omn9V@l31jvl3@x69iuxzdUI@G7CSUHfjMj2/EDrla6XnmgOZPGPnBEFhEDERcDz4i8SGB7@9mtk@lVIAk7SP@PnBs26WoXJaSI4KtiJ3S6pub1cYM1JN8G6mHyENqjIY6UkdQFIdIPYqQpjd3Wi9evtrdQ5WPXa96WYG6m5AGqA4v5t0to4Z1DWm9BJH8zAknFbgkLw4ltqJu1xMUd7eMAjDDMqLCLdXIDToNqytV4C8zgItDJgMDdYXbMFGsByhBK35cW5lVmG2tPrVuoePBFSwaRWbIziAQO49APcelEluDEY1BpkST0gPr1BTQHXK1/rF3cllV@HKN6EicEj9GSo8TUlogZfzshwpibT54pnQMru/F1ONneQweMqP0jCUrRQjQ2XEM8xJc0oUJV/QbQut6DqF53yUdEDXq1cbqPYr84UJD8MvC2HPXTNe0k4rBsBko7QxFSrVcKJJaYoUh5jEBi9zliGBGygdEshJ@YkBktwhEBfDyFMa3CaTV2wCChu0WSMvTKB7TCSopF1TNf204JeNFV3zhok3YnorYNuFJdUGYGicxSEqt6peX@U2VIt@ClE0@C/WrzoaWiGbLBSnPYh9oiSBNFsY8W@QcCXJGRVqjvfR0haWijtIjaiWnhwXwkvAjAMWCoOd4puuOJREdkqR83mR@bdOwjoJ7OrDq/NKNEw3qjNqHiEpq7nM1cZ@OkRlS1Av9Aa/PVQ982@k54C8muoaG2Kj34V2H1cC/fhwH0X6jcePE/eF13fIHjV/eqh8Ck56Ydw/Ua@TESZvAkithO7hHR1pdkk7ODt8fE12DvzqtB9JF5/fzo2PyORsvnAZP7yykWnyAzUWT4Hi0mjOvIpKTSEpumrDzZ3EbSJZLcnpX6vD8l6v3h3/yu1XTKa9vaq1dRd1TFAUzdnGJhmDWBUj19CkPbIjrUTzUp6tCGkFET0U8T1lAqpRl2E@o2oD0KT5QtQQfXH56@YPh@8jA8wtfQ1YM3XZZLkNhWChcgLBbSD1r5QgEKjuDSp1O5SACFh8F4Is0dgZ0O7CC4fYoejBsSLlKVq/W9NFUlSoWm44L5mg1uYoV3elKalNvvWrt7rxs7UpsROnK9e5ktzvrKqVGV29UpkmHVCZmjV04mLEJmshIpgFjBUbiPhu7SDf3ioUDKDjpoIqYaDWR67MBHYBQu6KkwJJGBua9S72v7XQRbwQnjiZ6SoQaweILQEDAwpeYEqKKuM7QOb9glytOT0h6NoohNSlGh11panzizlhqsPteHUJ0JbnKxCWj0xNOxuevQMvVFKQr6cT5/c40My8VCa0FCY2cnYhUJjg7Jxeo5GRJZ6Li9CRbKCBjnnq2huwGSakp7r7BEyCpr8VNBKHBRicVL@wFqPREbg/hbnfLB/5Un0ki@y7ugdxso1z@zo7wh4K24BnTqI/U6PPf"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221067","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: 22 bytes + content: 4 bytes - bonus: 10 bytes = 16 bytes.</h1>
<ul>
<li>Filename (escaped unprintables): <code>.w.i.c\001.+.a\013.+l.w.el.a</code></li>
<li>Content: <code>.v.p</code></li>
</ul>
<p><a href=""https://tio.run/##1Vr/U9u4Ev/df4UQIbET7NghbQFH9DgK185RuIHeu3uvoYyxFeLBsT22kxCS3L/eW0l2YichhV7budehsS3trj672l19day4@9kOeqHrUVmRpZgmSKV9s9@z4juk642GSe/DIErQ6dH14ekpOTKTUUjRLU3swO@gg7pDB3W/73mocVA2ymVeCwJ7lu8s16ayfjv88JbgkpzRqeFMIKtSSmP2qO1PxYs6xRmK38/e/Xl9@eENaej6Tlb42/nluz9P/3t9dH5xcXz0gRimbcUU4dL458PLt9f/Ob64fHd@tl8bTTFyfXmkcC0DFAaxe2@yj9rPpkljy54x/m8lH@31PSuhKO4yriBM4G0YRE4cem5iWp5rxUi9RZXS2Kjh0k94WiEV9qyYZ7@fnh69f0P2i@3IrHHHjLtuJ@FAHMTo0wJqdwNU2lR464bCP5MgQIHngOpugoxUGh1YHsIbqGN5McWTyRitop1Cq0mrpVaMOOk6UUXq9H07cQMfWTdgRrkX3yrjMHL9BGEaRUGEDIQRlHIBsq6Y0zkL9FcsRzTZtpWx25Hdm36nQyNCMFbGnSCyacfrx11ZMYGGyECd0GgCD8/1KUqpFRM4ob5FdAUe/chH8DBtL4hpygJt2iQlZ9T2xl8YYSVrDoNjgMrjuH8jY6RVS3gbY4Bk8oKPn9BVFfGiWYtTJ/A8K9KJbaZNgmFmWvWs0U2GfMyfcULDWo01Pfs8IPzVSjJr8U9zVk90czoXmTfGWEIozwKfeS4pZ183vvEs/062OVMK1SZkpzGZyHstYpfLdosYOwrj@vn4l3dnjI72wmREMH/gmXiC@QMvtYdQZg3MK7kfy2CuOLHsu228j5Vicew@0HlxBLErs5@YUocX9SzwVJ1jEk4mSZsoATgsbGJmC0Qtu4tiO3IheoKO@IyCfgJ@IW1uIk2KqOUEvjcC97XiHk8TVoJarcqH88PL9zmvhacVuonlyX7eSPLLFy3il8t@i@zpymvZr@00lH1/wbp2zymyteEVIdkHE@8oYGP28jJ7eZW@NLOq5gt4yXj2Zg0aegOeG2TvpXjs5qiAy9DzbIa@N@NrCD7D2Emfr4odCx1AI8tL@ymM6ED02VTK18rZCwvD1yV9Xy7pEMI4I@Ayhe5z45V0RSmXhUjiBAkTCO6eskC8fRJxxH9LmNsMOp8FWL5GxNm8IUY0F/NXXasrvCyLAOzNcTHqaRYbHYS37LaPtwsQzQUjCMUF6hIPneOzN0Xo8zZXtTiVuD9JCpaY3/2E3px/ePP@8Oji/O3xxXHBC4d3RS/849fKvGfcWz@I6LUD9KGVdEVY@TROWKyIoC6BYbGFU3SzOsh64zw8zWIDJ4QJpCAQibThNtLu4f9oG0HgaA8YTRBmMIyDcgObed5NFI/8xLpHInGHUXAbWb2UJs3/qZGz9lXVXA0fXGShkBhjznifCHX@qn/6OLwfPVyV6uOcRMiTrNoAbT2u7a1Iw7q6d1UD9@BZ5aPriDwCL1dXpGzOPoBdJBbBxhyq7SOUJhtWpGnMyRQzc5VSauwMFzQcQsPCJm0JI5ZxZJfMmlAN0z0AHV1VVcbgY4Ios@IMn3tl5iod6lE26K@qnc7eZm2AeLwEKyjCAjeQ44c5LuVAX4cHaFVDWQtqBclcazUHeBmb/zxsfo@sa5V5eK9VZMkUar4wC6V@r0qgS3Jl09x7EJPmbg34QOCWASkgV8f6FYCIyjqr9HsHulkoWoCwKA6GNZ5u5DZut/02VoDiMSgCfrH@G/aAW@yBvPXnfGDYdLTeIAAZK/mGZpH1cEVSqjknmyIxdj5nUxD057NYHyPO91w2j2DAzOWYYKG9pPX1cqiaZqHT5iqTJZVRTiM2gUwnsW2sXe/D1ACWBtROqIOOz0@AccFDs9lVKn3RVb5WMoIE7sNMpk8fc6S8RjCZKDYb3xLD/EZAbmAAu3sSihfLKNQfBqO528qcrlxOX1ovdr9omLVy8/hcP@wnyA8SeEvoLY0KEKf56HoMC3IGWbna3F0Iq@W23PjR5la7eN60S3o92UYM5KBq6DV5jvWZzrnQeG5sWzFwx7dVZ/DUULefN8QU0syTEiy0ui7Bxs9r/xum9sFTUruYpcC0pMWGp/ih3oClca1WtMmQPDI/yRUXjeUugV6qJfFwLfwOnq9ZeZqH8dKFtd4yJS0qml9J57ykfxMCf81YJSF6Xiex@iRccg@FxVHB7WchGrF05dAOLDUdvhYF0oWMtSiNTyf4OlepJqGy1lbDL45nq43yZVURGjpr4@BJLvuI06YAoIWVCWiFovffUFHSWND0/oZsyItqtAoFDejlr9B@FVHjcRORxpKN7m@eZqDR9zTQaJWBDv4dBho90UAP39NADzdkyT6E/DsM9PBEA1nFvLuCInletuxSKyQ/aEHZW4LGWt8gfFty9UAvz4FfEUb9NaO8w41W2Mcxl/dcxHaIvmrzw1gSWfuSlRe8b9E1aj/K5uo/BKp@aVG/yNBiK@iFssXV/DfUb@Mf6lf9UR1ReibQgUHW5ZNB47sA58AGRhXEF1Z0pX30QKNAddyBG7uBv256BEjJoHEwMF6zSdKgUR8Yyj5/NeqDxvq50tb/tZW2/oGVtuZW2lpjpfludpa7Nhb3i88CWNFFEY3DwHdc/xZpFp/Vfpd9Y75d/sevYrsc3VKfRuwklB34zI5vxA65Wun4Vo8WTxj5wRBYRAxEXA8@IvEhge/v5rZPpUyAJO0j/t5zHcejqFyW0iOCrZid0hqbm9X6FNSTAgeph8hHaoL6BlIHUJRESD2KkW40dpovXr7a3UOVj22/elWButuIhkiDF2t4x6hhXUOaL0EkP3PCaQUuyfNDia243fYFxfCOUQBmWEZUuKXqhUGnbrelCvzLDeDikMnEQF3hNkwV6wBK0Iof11amFWZbu0vtO@h4cAWbxrEVsTMIxM4jUMf1qMTWYERnkCnRpezAOjMFdIdc1T52Tq6qCl@uEQOJU@LHSOlxSkqXSBk/@6GCWJ8Nnhkdgxv4CfX5WR6Dh6w4O2PJSxECDHYcw7wElwxhwhX9htC6nkNo1ndpB8R1rVpfvUdRPFyoC35ZGHvmmtmadlwxGTYTZZ2hSJmWc0UyS6wwxCwmYJG7GBHMSMWASFfCTwyI/BaBqABensL4NoG0ehtA0LDdAmlxGsVjOkUlFYKq8a8Np3S8aIsvvGwTtqcitk14Up0TZsZJDZJRq8bVVXFTZZlvTsomn0v1q86GFoimiwUZz3wfaIEgSxbmLFsUHAlyRkVao730dIWlZR2lR9RKTw@XwEvCjwAUC4KO61ueN5JEdEiS8nmT@bVDIw2F97Rna/zSjRv3NEYdQESlNfeFmqRLR8iKKOpEQY/XF6p7geN2XPAXC91AQ2zU@/DunNXAXzdJwni/Xr91k27/RrODXv2Xt@qH0KIn1vCB@vWCOGkTWAolbAf36EjXJOnk7PD9MTv7TZ22og01V7Pbum5oNc1q68aOVvOgkHqaVYGOujz//eLomGgDLfycDyouCE@GNlJtPgoXQk5wPVrNmVcRyWm4pddRGFBxZUiWS3J2oerw4pfr94d/8gtYkwmvb@jNXUXdUxQFM3Zx04Zg1k9I9Y0Jj34I/kHSNyar4h5B2E9E0E9Y1KqUpeFPqFqHHCs@ULUEH1x@dkOE4fvIwPNbYX1WDH17VS5DYbRUOAfhNJF61iwQCFRODpU6mchhDCwBCsFhaeL26HZoh/3tQfxgOpCXlbxezcmj@SxTLLFcD8zRbHAVK4bbltSG0XzV3N152dyV2LDTlrX2eLc9bSuletuoVyZph1TGVo3dSpiyWZxIW5YJAwpG4tIbu20384q5Ayg47aCKmI01kBewUR@AUKeiZMDSRnrWvUf9r@10EZQEZ57NC0U8Eiy@AARENXyJeSOqiDsP5xeX7AbG6QnJDlAx5C/FPGf3nuqfuDOW6uxS2DkhhpLed@KS0ekJJ@OTXKDlagrSlXTikH9nkpu8iqzXhKxHzk5EvhOc5yeXqOTmSaei4vQkXyggY56ftvrsmkmpIS7IwRMgqa/FdQWhwcZ5Jl7YC1AZqdwOwu32VgD8mT7jVPYw6YDcfKNc/s6O8IclbcEzJnEXqfFnK75z3b8B"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# while size==0 || pop!=0; do
.a.wXX.z
  # push getchar; dup; push 1; push pop+pop;
  # NOTE EOF is -1
  .a.i.c\001.+XX.z
# done
.a.aXX.z
# push 11; push pop+pop;
.a\013.+XX.z
# push whatever not zero; while pop!=0; do call content; push whatever not zero; done
.al.w.el.a
</code></pre>
<pre><code>XX.z
# get called, with my stack initialized to original one
# reverse; pop all to putchar for each of them
# implicitly return, pushing each content of
# my stack from bottom to pop to original one
.a.v.p
</code></pre>
<hr />
<h1>Pxem, filename: 14 bytes + content: 0 bytes = 14 bytes.</h1>
<ul>
<li>Filename: (unprintables are escaped) <code>.w\005\005.+\001x.+.p.a</code></li>
<li>Content: empty.</li>
</ul>
<p>Wow, shorter than above!</p>
<p><a href=""https://tio.run/##1Vr/V9rIFv89f8U4IiRgIEFs1TB2XavbnrWyR923@16xnpgMkmNIcpIAIrD/evfOTAIJINVu27Ovp5Jk5t47n3vn3jtfbTPqfrb8XuC4VFZkKaIxUmnf6PfM6B5pWr1u0IfAD2N0dnxzdHZGjo14FFB0R2PL9zrosGbTQc3ruy6qHxb1YpHXgsCe6dnLtYms346u3hFckFM6NZgJZFVKYcwelYOpeFGnOEXx@/n7P28ur96SuqbtpIW/tS7f/3n235vj1sXFyfEV0Q3LjCjChfHPR5fvbv5zcnH5vnV@UBlNMXI8eaRwLX0U@JHzYLCPys@GQSPTmjH@byUf7fVdM6Yo6jIuP4jhbeiHdhS4TmyYrmNGSL1DpcJYr@DCT3haIiX2LBnnv5@dHX94Sw7y7ciscduIuk4n5kBsxOiTAmp1fVTYVHjrusI/Y99HvmuD6k6M9EQaHZguwhuoY7oRxZPJGK2inUKrcbOplvQo7tphSer0PSt2fA@Zt2BGuRfdKeMgdLwYYRqGfoh0hBGUcgGyphjTGQd0VySHNN62lLHTkZ3bfqdDQ0IwVsYdP7Rox@1HXVkxgIbIQB3TcAIP1/EoSqgVAzihvkk0BR790EPwMCzXj2jCAk1aJCFn1NbGXxhhJW0Og1@AxuOofytjVC0X8DbGAMngBR8/oesy4kWzFqe277pmqBHLSJrUM1r1zNFtinzMn1FMg0qFNT37PCT81YxTY/FPY1ZPNGM6F5k1xtP0M3InunVN714Gsyb4LEJ26pOJvNe0ikWrqTdAiZ9Pfnl/Pqa9IB4RzB9YyCOYP7AhIZRtAD5TxTGv5B4rg2Wi2LTut/EBVvLFkfNI58UhRKnMfiJKbV7UM8EnwSWkqSTcSZI2UQxYWIBETG1ETauLIit0IE78jvgM/X4MLiBtbqKqFFLT9j13BI5qRj2eEMwYNZulq9bR5YeMf8LTDJzYdGVPGUPjiWnkV7tN4hWLXpPsa8ob2avs1JUDj2HKGNTq2Xm2NrwiJHtg2B0FLMteXqUvr5OXRlrV2IWXlGd/1qCu1eG5QfZficdehgq4dC3Lpmv7M7664NP1neT5mhtRdCmQQwfQ0HSTfgpCOhB9NpWytXL6wiLuTUE7kAsaBCtOCbhMofvceAVNUYpFIZLYfswEgmcnLBBan0TI8N8C5jaDzmexlK0RITVviBHNxfxVq9YUXsbQ82TiznEx6qmU1HQQ3rLaHt7OQTQWjCAUF6gLGvs@OX@bhz5vc1WLU4n7k6RgifndT@ht6@rth6Pji9a7k4uTnBcO7/Ne@MevpXnPOHeeH9IbG@gDM@6KsPJoFLNYIRxZAQyLTZygm9VBghtn4VVNNkRCmEC2AZGoOtxG1Qf4G20jCJzqI0YThBkM/bBYx0aWdxNFIy82H5BI0UHo34VmL6FJMn1i5LR9VTVWwwcXWSgk@pgzPsRCnb9qnz4OH0aP14XaOCMRUiKr1kFbl2t7JzKupu5fV8A9eFb56Ngij8DL9TUpGrMPYBeJRbAxh2p7CCXJhhVVq8zJFCN1lUJi7BQXNBxAw8ImbQkjlnFkh8yaUHXDOQQdHVVVxuBjgii14gyfc21kKm3qUja8r6qdzt5mbYB4vATLz8MCN5Cjxzku5VBbhwdoVV1ZC2oFyVxrNQN4GZv3Mmxej6xrlXl4r5lnSRVq7Bq5Uq9XJtAlmbJp5t2PSGOvAnwgcEuHFJCpY/0KQERljVV6vUPNyBUtQFgUB8MaTzdyG7fbXhsrQPEUFAE/X/8Ne8DJ90DW@nM@MGwyWm8QgIyVbEOzyHq8JgnVnJPNhhg7n54pCPrzRaxPEWd7Lp1HMGDGckyw0F7S@mY5VA0j12lzlcmSyiijEZsrJtPVNq7eHMDUABYB1IqpjU5ap8C44KHphCqRvugqXysZQQL3YCbTp085UlYjmEzkm43uiG58IyC3MIDdPwvF7jIK9YfBaOw1U6crFpOX5u7eFw2zVm4Wn@MF/Rh5fgxvMb2jYQ7iNBtdT2FB9iAtVxt7C2G13JYTPdncahfPmnZJr2fbiIEclHWtIs@xvtA5FxrPjG0rBu7ormwPnhvq1suGmFyaeVaChVbXJdjoZe1/w9Q@eE5qF7MUmJY02fAUPdbqsAquVPI2GZIn5ieZ4ryxnCXQS7UkGq6F38FjaTbJZGkexksH1nrLlDSvaHbRnPGS/m0A/BV9lYTwZZ3E6uNgyT0UFkc5t5@FaMjSlU07sNS0@VoUSBcy1qI0Pp3g61ylHAfKWlsNvzierTbKl1VFaGivjYNnuewTTpsAgBZWJqAVij58Q0VJfUHTh1uyIS@q0cwV1KGXv0L7VUT1p01E6ks2erh9noFG39NAo1UGOvx3GGj0TAM9fk8DPd6SJfsQ8u8w0OMzDWTm8@4Kivhl2bJLzYD8oAVlbwkaa32D8D3J1QO9PAd@TRj114zyNjdabh/HWN5zEdsh2qrND31JZOVLVl7wvkXXqPwom6v/EKj6pUX9IkOTraAXyhZX899Qv41/qF/5R3VE4YVABzpZl08G9e8CnAMb6GUQn1vRFQ7QIw191XYGTuT43rrpESAlg/rhQH/DJkmDem2gKwf8Va8N6uvnSlv/11ba@gdW2ppbaWuNlea72Wnu2ljcLz73YUUXhjQKfM92vDtUNfms9rvsG/Pt8j9@Fdvl6I56NGRnnuzAZ3Z8I3bI1VLHM3s0f5bID4bAImIg4nrwEYkPCXx/N7N9KqUCJOkA8feeY9suRcWilBwRbEXsPFbf3CzXpqCe5NtIPUIeUmPU15E6gKI4ROpxhDS9vtPYffV6bx@VPra98nUJ6u5CGqAqvJjDe0YN6xrSeAUi@ZkTTipwQZ4fSmxF7bYnKIb3jAIwwzKixC1Vyw06NastleBfZgAXh0wGBuoSt2GiWAdQglb8YLY0LTHbWl1q3UPHgytYNIrMkJ1BIHYegTqOSyW2BiMag0yJJqVH06kpoDvkcvVj5/S6rPDlGtGROA9@ipSeJKR0iZTxsx8qiLXZ4JnSMbi@F1OPn@UxeMiM0jOWrBQhQGfHMcxLcEEXJlzRbwit6zmEZn2XdEBUq5Zrq/co8ocLNcEvC2PPXDNd045LBsNmoLQzFCnVcq5IaokVhpjFBCxyFyOCGSkfEMlK@JkBkd0iEBXAy1MY3yaQVm8DCBq2WyAtTqN4TCeopFxQ1f@14ZSMF23xhZdtwvZUxLYJT6pzwtQ4iUFSalW/vs5vqizzzUnZ5HOpftXZ0ALRdLEg5ZnvAy0QpMnCmGWLnCNBzihJa7SXnq@wtKyj9IRayenhEnhJ@BGAYkHQcTzTdUeSiA5JUj5vMr@2aVhFwQPtWVV@vcaJelVG7UNEJTUPuZq4S0fIDCnqhH6P1@eqe77tdBzwFxPdQkNs1Lt632I18L8bx0F0UKvdOXG3f1u1/F7tl3fqVWDSU3P4SL1aTpy0CSy5EraDe3ysVSXp9Pzowwk7@02ctlQdtjVtl/1VK/CrP1Qr1aBqlqCPLlu/XxyfkM/ZWOL8eDK0kGrxwTcXaYLjyWrOvIpITqIsuXDC8Ik7QbJckNMbU0cXv9x8OPqT37CaTHh9XWvsKeq@oiiYsYu7NASz7kGqp0940EPMD@K@PlkV7giifSJifcKCVaUs@35C5RqkVvGBygX44PLTiyEM30cGnl/76rNi6NLrYhEKw6XCOQi7gdTzRo5AoLIzqNTJRA4iYPFRAH5KY6dHtwMr6G8PokfDhnSsZPVqTJ5MY6lisem4YI5GnatY0p22pNb1xuvG3s6rxp7ERpu2XG2P99rTtlKotfVaaZJ0SGlsVthlhCmbvIlsZRowjmAkbrWx63Qzr5g7gIKTDiqJSVgduT4b7AEItUtKCixppGc@uNT72k4XsUhw6tC8UIQhweILQEAww5eYLqKSuOrQurhkFy/OTkl6boohbSlGi91Uqn3izliosWtfLUJ0JbnUxCWjs1NOxue2QMvVFKQr6cTZ/s4kM2cVya4ByY6cn4o0Jzhbp5eo4GRJp6Li7DRbKCBjnpa2@ux2SaEubsDBEyCpb8QtBaHBRisVL@wFqPREbgfhdnvLB/5Un3Eiexh3QG62US5/Z0f4w5K24BmTqIvU6PPf"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221115","<h1><a href=""https://www.gnu.org/software/sed/"" rel=""nofollow noreferrer"">sed</a>, 227 bytes</h1>
<pre><code>s/^.o*/&lt;&amp;&gt;/
:a
s/&gt;z\(.o*\)/&gt;&lt;\1&gt;/
ta
:b
s/z&gt;/0&gt;/g
y/z/-/
s/oooooooooo/x/g
s/ooooooooo/m9/g
s/oooooooo/m8/g
s/ooooooo/m7/g
s/oooooo/m6/g
s/ooooo/m5/g
s/oooo/m4/g
s/ooo/m3/g
s/oo/m2/g
s/o/m1/g
s/x\([^xm]\)/x0\1/g
s/m//g
y/x/o/
tb
</code></pre>
<p><a href=""https://tio.run/##tY47DsIwEET7PQgCpDCEPwj5IhikRCCqZYsEyezlg2MHCKAUFExhv3mewsXpmJwv16oqcBjJENueAW0yKmDU9r2xA5itTb0tM9rk/kENxgZnukGRwAt5Bs77lgCv3wR41e7gZauCF68Gnj8LePZg8LRB8CQSOA3gbH93cLz3H3ZjGx0j/NP5FZV5VQkpqQiJaDg0HBHDVbfIGiP1vp43UZX3fPbvReeyO/TD9i@hF94B"" rel=""nofollow noreferrer"" title=""sed – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p>0 and 1 for input are replaced with z and o respectively.
Input is given from stdin, on every line.</p>
<h2>With comments</h2>
<pre><code># first integer
s/^.o*/&lt;&amp;&gt;/
# find each item
:a
s/&gt;z\(.o*\)/&gt;&lt;\1&gt;/
ta
# below: to decimal
:b
# to zero
s/z&gt;/0&gt;/g
# minus sign
y/z/-/
# to decimal others
# m letter indicates that converting a digit is done
s/oooooooooo/x/g
s/ooooooooo/m9/g
s/oooooooo/m8/g
s/ooooooo/m7/g
s/oooooo/m6/g
s/ooooo/m5/g
s/oooo/m4/g
s/ooo/m3/g
s/oo/m2/g
s/o/m1/g
# not converted yet? then to 0
s/x\([^xm]\)/x0\1/g
s/m//g
y/x/o/
# repeat until every unary is converted
tb
</code></pre>
","","user100411"
"221119","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 28 bytes + Content: 0 bytes = 28 bytes.</h1>
<ul>
<li>Filename (Unprintables are escaped): <code>\011.t.w0.i.-.+.m\001.-.c.t.a\055.-.n</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##1Vr/U9vGEv9df8VxGEuykS0ZQwD5SCmBJlOCO5C@9r2YMEI6Yw22pJFkG2O7/3q6dyfZkm0cSJNMXydF57vdvc/u7e59dayo89n2e4HbpYqqSBGNkUb7Zr9nRfdI12s1kz4Efhij85Ob4/NzcmLGo4CiOxrbvtdGR1WHDqpev9tFtaOiUSzyVhDYszxnuTWR9dvxh7cEF5SUTgtmAlmTWhizT/lwKgraFKcofr949@fN1Yc3pKbrO2nlb82rd3@e//fmpHl5eXrygRimbUUU4cL45@Ortzf/Ob28ete8OCyPphi5njJSuZY@CvzIfTDZj/LPpkkjy54x/m8lH@31u1ZMUdRhXH4QQ2noh04UdN3YtLquFSHtDsmFsVHGhZ/wVCYy@8rmxe/n5yfv35DDfD8K69wxo47bjjkQBzH6pILaHR8VNlXeu6Hyn7HvI7/rgOpujIxEGh1YXYQ3UNvqRhRPJmO0inYKvcaNhiYbUdxxQllq9z07dn0PWbdgRqUX3anjIHS9GGEahn6IDIQR1HIBiq6a0zkLjFekhDTettWx21bc2367TUNCMFbHbT@0abvbjzqKagINUYA6puEEPl3XoyihVk3ghPYG0VX49EMPwce0u35EExbo0yYJOaO2N/7CCKtpdxgcA1QeR/1bBaNKqYC3MQZIJq/4@AldlxCvmvU4dfxu1wp1YptJl2CYmVY9a3SbIh/zbxTToFxmXc9@HhFetOLUWvynOWsnujmdi8waYywhlGWBn1kuKWNfN7rtWt69YnOmBKpNyE5tMlEOGsQuFu0GMXZUxvXz6S/vLhgd7QXxiGD@wTPxBPMPXuoPodQamDdyP1bAXFFs2ffb@BCr@erIfaTz6hBiV2F/IkodXtWzwFN1jkk4mSRtohjgsLCJmC0QtewOiuzQhejx2@Jn6Pdj8AtpcxNVpJBaju91R@C@VtTjacKKUaMhf2geX73PeC18rcCNra7iZY2k7O02iFcseg1yoKuvFa@8U1MPvQXr2j0nz9aCIkKKBybeUcHGrLCXFl4lhXraVN@FQspzMOvQ0Gvw3SAHe@Kzn6ECLkPPshn6wYyvJvgMYyf5vsoPLAwADa1uMk5BSAdizKZStlVJCywMXxf0Q6WgQwjjlIDLFLrPjVfQVbVYFCKJ48dMILh7wgLx9knEEf9bwNxmMPgswLItIs7mHTGiuZi/qpWqyuvSCMDdOS5GPU1jo43wlt3y8HYOorlgBKG4QF3goXN68SYPfd7nqh6nEvcnScUS87uf0Jvmhzfvj08um29PL09zXji8z3vhH7/K85Fx7zw/pDcO0AdW3BFh5dEoZrEigroAhsUWTtDN2iDrjbPwKhabOCFMIAWBSFQZbqPKA/w/2kYQOJVHjCYIMxjGUbGGzSzvJopGXmw9IJG4g9C/C61eQpPk/8TIaf@aZq6GDy6yUEmMMWd8iIU6f1U/fRw@jB6vC9VxRiLkSdZsgLZdru2dSMO6dnBdBvfgWeWj64g8AoXra1I0Zz@AXSQWwcYcquUhlCQbVlWpMCdTzdRVComxU1zQcQAdC5u0JIxYxlFcMutCM0z3CHR0NU0dg48JotSKM3zutZlpdGiXskl/Vet0Vpr1AeLxEiw/DwvcQIke57jUI30dHqDVDHUtqBUkc621DOBlbN7LsHk9sq5X5uG9Rp4lVai@a@ZqvV6JwJBk6qaZsh@R@n4Z@EDglgEpINPGxhWAiMYqa/R6R7qZq1qAsCgOpjWebpQWbrW8FlaB4ikoAn6@/RuOgJsfgaz153xg2GS23iAAGavZjmaR9XhNEqo5J1siMXa@ZlMRjOeLWJ8izo5cuo5gwMzlmGChvaT1zXKommZu0OYqkyWVUUYjtoBMFrEtXLk5hKUBbA2oHVMHnTbPgHHBQ9PVVSJ90VW@VjKCBO7BSqZPn3KkrEawmMh3G90Rw/xGQG5hArt/FordZRTaD4NR32@kTlcsJoXG7v4XDbNWbhaf6wX9GHl@DKWY3tEwB3Gaja6nsCBnkNZr9f2FsFruy42e7G61i2dNu6TXs23EQA5Khl5W5lhf6JwLnWfmthUTd3RXcgbPDXX7ZVNMLs08K8FCr@sSbPSy/r9hah88J7WLVQosSxpseooeqzXYGpfLeZsMyRPrk0x13ljuEuilVhIN18Jv4/melad5mC9d2OstU9K8otmddMZL@rcB8JeNVRLClw0Sa4@DJfdQWRzl3H4WoiFLVw5tw1bT4XtRIF3IWIvS@HKC73PVUhyoa201/OJ8ttooX1YVoaGzNg6e5bJPOG0CAHpYmYBWKPrwDRUltQVNH27JhrKoRiNXUYNR/grtVxHVnjYRqS3Z6OH2eQYafU8DjVYZ6OjfYaDRMw30@D0N9HhLluxDyL/DQI/PNJCVz7srKOKXZcsOtQLygzaUvSVorPcNwo8lV0/0yhz4NWHUXzPLO9xouXMcc/nMRRyH6KsOP4wlkeUvWXnB@xZdo/yjbK79Q6Dalzb1iwwNtoNeqFvczX9D/Tb@oX6lHzUQhRcCHRhkXT4Z1L4LcA5sYJRAfG5HVzhEjzT0NccduJHre@uWR4CUDGpHA@M1WyQNatWBoR7yolEd1Navlbb@r6209Q@stDW30tYaK81Ps9PctbF4Xnzhw44uDGkU@J7jeneoYvFV7Xc5N@bH5X/8Ko7L0R31aMhuQtmFz@z6RpyQa3Lbs3o0f8PIL4bAImIi4nrwGYlPCfx8N3N8KqUCJOkQ8XLPdZwuRcWilFwRbEXsltbY3CxVp6Ce5DtIO0Ye0mLUN5A2gKo4RNpJhHSjtlPf3Xu1f4Dkjy2vdC1D211IA1SBgjW8Z9SwryH1PRDJ75xw0oALyvxSYitqtTxBMbxnFIAZthEyt1Q1N@lU7ZYkw3@ZCVxcMpkYqGVuw0SxNqAErfh1rTyVmW3tDrXvYeDBFWwaRVbI7iAQu49AbbdLJbYHIzqDTIkupRfWqSlgOJRS5WP77Lqk8u0aMZC4JX6KlJ4mpHSJlPGzP1QQ67PJM6VjcH0vph6/y2PwkBWldyxZKUKAwa5jmJfggiFMuGLcEFo3cgjNxi4ZgKhaKVVXn1HkLxeqgl8Rxp65ZrqnHcsmw2aidDBUKdVyrkhqiRWGmMUEbHIXI4IZKR8QyU74mQGRPSIQDcDLUxg/JpBWHwMIGnZaIC0uo3hMJ6ikXFDV/rXhlMwXLfELL9uEnamIYxOeVOeEqXESg6TUmnF9nT9UWeabk7LF51L7qruhBaLpYkXKMz8HWiBIk4U5yxY5R4KcIUtrtJeer7C0rKP0hFrJ7eESeEn4EYBiQdB2PavbHUkiOiRJ/bzJ/NqhYQUFD7RnV/ijGzfqVRi1DxGVtDzkWuIOHSErpKgd@j3enmvu@Y7bdsFfLHQLHbFZ78O7JmuBf504DqLDavXOjTv924rt96q/vNU@BBY9s4aP1KvmxEmbwJKrYSe4Jyd6RZLOLo7fn7K738Rp5ZZuGJW4MtQrbkWrlCu9lq4bULKh0mrpu7tQ9mQYsavm75cnp0SWP2dji8vDk6GNNJtPxrnIEzxPNnPmVURKEnXJqxSGV7wcUpSCkr6rOr785eb98Z/8HdZkwttren1f1Q5UVcWMXTy4IZgNF9I8Y8KTAOSAQdw3JqvCH0H0T0TsT1jwapRl40@oVIVUK36gUgF@cPnpQxGG7yMDzx@H9Vk1DPF1sQiV4VLlHIRTR9pFPUcgUDkZVNpkogQRsPgoAL@lsduj24Ed9LcH0aPpQHpWs3rVJ0@mtVSx2HK7YI56jasoG25L0mpG/VV9f2evvi@x2aelVFrj/da0pRaqLaMqT5IBkcdWmT1OmLLFnMhelgnzCkbi7Rt7dDfzirkDqDgZIFksymqo67PJH4BQR1ZTYEknPeuhS72vHXQRmwSnDs4rRVgSLH4BCAhu@CWWj0gWTx@al1fsIcb5GUnvUTGkMdVssudP1U/cGQtV9jasSYihJs@euGR0fsbJ@FoXaLmagnQlnbjr35lk1rAi@dUh@ZGLM5H2BGfz7AoV3CzpVDScn2UrBWTM09RWn702KdTEOzn4AiTttXi1IDTYaKbihb0AlZHIbSPcam35wJ/qM05kD@M2yM12yuXv7Ah/WNIWPGMSdZAWfX5V042d@sHe/t8"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online! (with pxem.posixism)</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# push 9; heap=pop
.a\011.tXX.z
# while empty || pop!=0; do
.a.wXX.z
  # push 48; push getchar
  .a0.iXX.z
  # push abs(pop-pop); if size&gt;=2; then push pop+pop; fi
  .a.-.+XX.z
  # push heap; push 1; push abs(pop-pop)
  .a.m\001.-XX.z
  # dup; heap=pop
  .a.c.tXX.z
# done
.a.aXX.z
# push 48; push abs(pop-pop); printf &quot;%d&quot;, pop
.a\055.-.n
</code></pre>
","","user100411"
"221221","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: 2 bytes + content: 64 bytes = 66 bytes.</h1>
<p>Thank you for commenting me that I need to use content of the file.</p>
<h2>Filename</h2>
<pre><code>.e
</code></pre>
<h2>Content</h2>
<pre><code>Stack Exchange Cha.p.c.c.zt - The Nineteenth Byte.p.d.a.v.st.v.p
</code></pre>
<h2>How it works</h2>
<ul>
<li>Every command substring consists of a dot and a char.</li>
<li>Every non-command substring is considered to be a command to push each of the string from backwards.
<ul>
<li>I.e. literals.</li>
</ul>
</li>
<li>Filename is main routine; content is subroutine.</li>
<li><code>.e</code> calls subroutine.</li>
<li>19th byte on content is <code>.</code> of <code>.p</code> --- a command to pop each to putchar().
<ul>
<li>Then the stack would be empty.</li>
</ul>
</li>
<li><code>.c</code> is dup() iff not empty; nop() otherwise.</li>
<li><code>.z ... .a</code> is <code>while size&lt;2 || pop!=pop; do ... ;done</code>.</li>
<li><code>.d</code> is exit() on filename; <code>return</code> on content.</li>
<li><code>.v</code> reverses entire stack.</li>
</ul>
<h2>Links to TIO</h2>
<ul>
<li><a href=""https://tio.run/##nRhrV@JG9Ht/xTAFMgOEAOKuyzhaRXdLq6xVu90VqCdCkGhIAgkKAvvXt/dOEgTXnj6Ox2Ry5859v4aeGQy@/UgGYegHNcO4tcPB5KbY9YbGh5/1S9@03puPT5Zr@FNrWPS9wJ7awdC4cbwbY2jaEdwuVopD211t/xBYIdGtiZgMzeCelEqVirCmvjcOyUn9@uDkRNYFC2e@RW6tsOu5/WxWfQHXoen2@J7Rsx4Md@I4pLKXLWez8eGzg8ufJU2zGI/ofkJAbfH0HF/52jJa6EuasP292fh8fXF5JCul0lYCPPt40fh88uW6/vH8/Lh@KcuiRXSX0PT88ODi5@tPx@cXjY/NGpAhnWx2TpRWHlFaCvzIH4rl6szVa0es4cQxQ4sEAzzg@SGsHr1xL/AdOxSmY5sB0W@Jlp6X8zT9E11qUsO3Jpq/n5zUT49kTbEApZFhTwQDux8q5j2CiDHA6g48kv6RUyJJGVkzBQkGFtgw9DziOb29LHrBDkmZC@vBdAhNkb7pBBZdLF5BJ@v4SgKFM10EVo9ogTE1ZoYI4PFkaIrvE@ksFqCyogQ437EFTcACzoN8906AC33bsRhnfVkSXTOwgEOZEtslrJ/jpA/eEFZgdoUZBNbwxpmh4z3w@YFL9IdwUl6EY6LXA1IqV7aq22/e7rwjWqvt5jra4nZs@aS4MB/viXZ4/KHRnDvApCerbwRYl/lj2w37RPPPvI9u025cd@vBxcOn/nvreHz@@Mf08@zL05V5EF4OT3tHeT2VzmS0xf9gnS5JWm9Rki4R2pFtSsEkjvdojVkQicBopksL6RLnhLapoAIMqanQYJQWLgq0RrlA0fsykJSKvjdmAiLesV2L9PdKgs/tPksAwa4scYUHwAAtWc9m@1L2@PyYcaFYknor6IilBV4niKV2HwfoiWh9wvoc2YmXhKMdJKScWRLL5YrN9wwUh@jICQs4ABBj2Z@43dD2XHLCukr2bgrk5UFodu9bTj7fkd01JDiCOA6fxx6jTmwDB3R3dJ0ncPiLaejlTiwI2GG51JQn9AfiQfio4KNJSERaxzrugYJuXhqtx@nsqWPohmmgBdzdUsycFk1yWCXFCIEuaNeEiIbYpqvgVnjgaxZRMTvGPiU/gWhuHsjVQE8k6SmdjJ6RzaZcHtsygvD5RLp6WUSSuXuTdfcqH8SiREKQR8MjRfNVWV7qEglHzVgewFDuc/8DycTtEKMitnsmaLex9iUpShesRSIzE90JSQUrEVBaJF4wZQlfEKTpPsXVAABakAOT@Z7bDR7GYcfIMXO3zPNGKw@Zp0ffFQ7@saahWBq@MQcyIoACsQx2ywL@460BrAageGjkUilTLOeBTBmtvhV7Q5hoFPu6Y@QNB6g23@vAhpngexCgC4ZqeW4AAgBwgEBjaOiwXYZVIotYliFJX6i5taGmNj9r2flSR6bBr/m88CV86xVICv8rBHA2C8znEUj6UehOboJwzNKlwhYXPcuxoGGctXTd7ohIMTj4p0Naf5JOHs93jTkcYVQB0rRAsyRLCxHJfySQRgqBMbd1WXmB@zcnnfiE4klWTP81x2fBEytC6IPH0xlcASIjpQUpRWg8TfncQ9tB9fTFVKab7wWZyXTkLrEmxLooPkd8DxNpuitnfH4tp3B4JmbyWiw3rA2Ry4x23tif5mc1cPr@VId3Ct45eGfgnZnVoLm9rtdx82iOJegOQvBu1xZ3@XxUhQDtroPZkfRHSLViLm0YWgQwwBxgQ8PApomS54wzluXCuIVvAoOXuIH@qPLAvoZM6FvjcNgBuxtZqJyGCEWS0ACKKgRs8LnaMRG4VMseLrHLYcvur@YB1ZU1zGFW4tpiEX33gPTYCidjFztPxCWPBMxeL@Gq43dwEybfKfyGsSb5bqcR0LMfEkBGIXgJgcAo5ow/Lt8zmoUKCOZ4IdmqHUdl@aJ1LyF5IMGTPjiI@qAGU0KYVB4NDb1YHV21DIsd8vk9ZB2Q6Uh4YD9Afx0CxcNdhIpDcBksCocxAixeEEfRgQFXfb5HoMhxAakddMe2H8pYUOx@ltX7SovQwMYwjqrP9SZ3xo446lP4lfGOPFIygWibDS4yf@rXjfb4y2qDwMZeeW3r1@ctpc3zzuXGDjJF5Z/3P7NzPj@XgKYk0fXY9eR8DWnC6nFPYHp5FwaI@m5l@w3fr9ewn67QPiAtsMDE/WoUDSQ7ccXExeHjmWi8WrXY/XSppq/r8jsyg1P1NdgBO02a0sENTOk1SNnT1/rR6oTPkhEmBQblE/YZnmv7XjRGvL7pskZhVDgqOM8485EEJJi7HMu9DQdsxFUENaDhNHalIxoQPxPGjmRct0eFRqHM@VfaKunvOnT/KF/dqVW3cehZsbFBhjP2YZP3NTst1AtXhS98fipp8bpGml6I9cm6tcZU1CXgiytgq2aeaNirvo2csr3Db8aWeY8Vrw61ttra2u5g7byS1apejw9HKNjp2U50rlyF7laXcgs7aoQE96fQdieWWKLtI@z6bnUHEfe233KuwEqGZ@4RA/5FfiGsrgOyQGeKM3aV@7KuY3fN@GfsctMAwdrm540EeAC33BU@cVVrwfQlyPY7qUIanHAHtviEyVtodIR64eiIi7vo@07XO/LTugPGa6xwMYZbnOc6s2wWZMLZ6oDR4rhGYElRDUwAldQ8hxGz4czH50QDclCGACMFJNbkn7LfCqOII@Qyj7HL4jcVWlGAxcDfdkdrB2f/4eDe@sGnlVAsOprIFYu/QgzXLDHAKrlp@WG0fY@D/QBchijr@z30zDpK3CURT9xDUdnwmCpRDay7eahFDFMH5LqLXlE95DxynFRI6NFnZqoNIa9fVPiApPkX@YuNqbFCgRwD1oCiI9puaV9v1BobvlONa4Ni7gVF7GSjuB78EkcLU4aHMdFRbxnHS7pGrqyxl1pFzGjP2R8ZTs0xRpyvc4Vu@C9pZl6lmQGaGUUTW/u3982D02NZtH6of2xeHjcvpXaB1x9yPO0OTPfWIvWBWfSLXfh7ColOLgcWaUINDi3LDQfkcBZasN0rmsWHYhDCw9e@JXeptCJOyYLEd3TSh4drDi2Szf7wPdZjl@hdqMwbu7Fc61SwzAD3v0N7jczKfn3w2ere/nzsf17Km@dqEIQZE2Yz/CFIvydld1woJ6Pbn6qS50ibFXNtnoZBrV3G0YUvKVx@sM1LNWDpXaJ@qZpgpfCGOM0AcPwd8FnMXpXozeoGAo4xAex7xLd7BSu0h1bB7/qTwkPwJHpmaPF1Nav/rGZo2g7R3WolUQeUYMX2fKe9RGXaZUN7vo/plXL1bXVn6011B24ucEMCq6ghNxpqzei@99/tjLe8yE74onhJTAYomiCMZFvD98fzC6lpyQCI9cOGac3GwQNvULzbsjty9ZNJu53xaMGGlG2eZ7ZLUpZjWQNCV78HjOB@OCK07cLQEm93W@lSJ9INR7d4ak@QIBIGRA@@/QU"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></li>
<li><a href=""https://tio.run/##nRhrV@JG9Ht/xTAFMgOEAOKuyzhaRXdLq6xVu90VqCdCkGhIAgkKAvvXt/dOEgTXnj6Ox2Ry5859v4aeGQy@/UgGYegHNcO4tcPB5KbY9YbGh5/1S9@03puPT5Zr@FNrWPS9wJ7awdC4cbwbY2jaEdwuVopD211t/xBYIdGtiZgMzeCelEqVirCmvjcOyUn9@uDkRNYFC2e@RW6tsOu5/WxWfQHXoen2@J7Rsx4Md@I4pLKXLWez8eGzg8ufJU2zGI/ofkJAbfH0HF/52jJa6EuasP292fh8fXF5JCul0lYCPPt40fh88uW6/vH8/Lh@KcuiRXSX0PT88ODi5@tPx@cXjY/NGpAhnWx2TpRWHlFaCvzIH4rl6szVa0es4cQxQ4sEAzzg@SGsHr1xL/AdOxSmY5sB0W@Jlp6X8zT9E11qUsO3Jpq/n5zUT49kTbEApZFhTwQDux8q5j2CiDHA6g48kv6RUyJJGVkzBQkGFtgw9DziOb29LHrBDkmZC@vBdAhNkb7pBBZdLF5BJ@v4SgKFM10EVo9ogTE1ZoYI4PFkaIrvE@ksFqCyogQ437EFTcACzoN8906AC33bsRhnfVkSXTOwgEOZEtslrJ/jpA/eEFZgdoUZBNbwxpmh4z3w@YFL9IdwUl6EY6LXA1IqV7aq22/e7rwjWqvt5jra4nZs@aS4MB/viXZ4/KHRnDvApCerbwRYl/lj2w37RPPPvI9u025cd@vBxcOn/nvreHz@@Mf08@zL05V5EF4OT3tHeT2VzmS0xf9gnS5JWm9Rki4R2pFtSsEkjvdojVkQicBopksL6RLnhLapoAIMqanQYJQWLgq0RrlA0fsykJSKvjdmAiLesV2L9PdKgs/tPksAwa4scYUHwAAtWc9m@1L2@PyYcaFYknor6IilBV4niKV2HwfoiWh9wvoc2YmXhKMdJKScWRLL5YrN9wwUh@jICQs4ABBj2Z@43dD2XHLCukr2bgrk5UFodu9bTj7fkd01JDiCOA6fxx6jTmwDB3R3dJ0ncPiLaejlTiwI2GG51JQn9AfiQfio4KNJSERaxzrugYJuXhqtx@nsqWPohmmgBdzdUsycFk1yWCXFCIEuaNeEiIbYpqvgVnjgaxZRMTvGPiU/gWhuHsjVQE8k6SmdjJ6RzaZcHtsygvD5RLp6WUSSuXuTdfcqH8SiREKQR8MjRfNVWV7qEglHzVgewFDuc/8DycTtEKMitnsmaLex9iUpShesRSIzE90JSQUrEVBaJF4wZQlfEKTpPsXVAABakAOT@Z7bDR7GYcfIMXO3zPNGKw@Zp0ffFQ7@saahWBq@MQcyIoACsQx2ywL@460BrAageGjkUilTLOeBTBmtvhV7Q5hoFPu6Y@QNB6g23@vAhpngexCgC4ZqeW4AAgBwgEBjaOiwXYZVIotYliFJX6i5taGmNj9r2flSR6bBr/m88CV86xVICv8rBHA2C8znEUj6UehOboJwzNKlwhYXPcuxoGGctXTd7ohIMTj4p0Naf5JOHs93jTkcYVQB0rRAsyRLCxHJfySQRgqBMbd1WXmB@zcnnfiE4klWTP81x2fBEytC6IPH0xlcASIjpQUpRWg8TfncQ9tB9fTFVKab7wWZyXTkLrEmxLooPkd8DxNpuitnfH4tp3B4JmbyWiw3rA2Ry4x23tif5mc1cPr@VId3Ct45eGfgnZnVoLm9rtdx82iOJegOQvBu1xZ3@XxUhQDtroPZkfRHSLViLm0YWgQwwBxgQ8PApomS54wzluXCuIVvAoOXuIH@qPLAvoZM6FvjcNgBuxtZqJyGCEWS0ACKKgRs8LnaMRG4VMseLrHLYcvur@YB1ZU1zGFW4tpiEX33gPTYCidjFztPxCWPBMxeL@Gq43dwEybfKfyGsSb5bqcR0LMfEkBGIXgJgcAo5ow/Lt8zmoUKCOZ4IdmqHUdl@aJ1LyF5IMGTPjiI@qAGU0KYVB4NDb1YHV21DIsd8vk9ZB2Q6Uh4YD9Afx0CxcNdhIpDcBksCocxAixeEEfRgQFXfb5HoMhxAakddMe2H8pYUOx@ltX7SovQwMYwjqrP9SZ3xo446lP4lfGOPFIygWibDS4yf@rXjfb4y2qDwMZeeW3r1@ctpc3zzuXGDjJF5Z/3P7NzPj@XgKYk0fXY9eR8DWnC6nFPYHp5FwaI@m5l@w3fr9ewn67QPiAtsMDE/WoUDSQ7ccXExeHjmWi8WrXY/XSppq/r8jsyg1P1NdgBO02a0sENTOk1SNnT1/rR6oTPkhEmBQblE/YZnmv7XjRGvL7pskZhVDgqOM8485EEJJi7HMu9DQdsxFUENaDhNHalIxoQPxPGjmRct0eFRqHM@VfaKunvOnT/KF/dqVW3cehZsbFBhjP2YZP3NTst1AtXhS98fipp8bpGml6I9cm6tcZU1CXgiytgq2aeaNirvo2csr3Db8aWeY8Vrw61ttra2u5g7byS1apejw9HKNjp2U50rlyF7laXcgs7aoQE96fQdieWWKLtI@z6bnUHEfe233KuwEqGZ@4RA/5FfiGsrgOyQGeKM3aV@7KuY3fN@GfsctMAwdrm540EeAC33BU@cVVrwfQlyPY7qUIanHAHtviEyVtodIR64eiIi7vo@07XO/LTugPGa6xwMYZbnOc6s2wWZMLZ6oDR4rhGYElRDUwAldQ8hxGz4czH50QDclCGACMFJNbkn7LfCqOII@Qyj7HL4jcVWlGAxcDfdkdrB2f/4eDe@sGnlVAsOprIFYu/QgzXLDHAKrlp@WG0fY@D/QBchijr@z30zDpK3CURT9xDUdnwmCpRDay7eahFDFMH5LqLXlE95DxynFRI6NFnZqoNIa9fVPiApPkX@YuNqbFCgRwD1oCiI9puaV9v1BobvlONa4Ni7gVF7GSjuB78EkcLU4aHMdFRbxnHS7pGrqyxl1pFzGjP2R8ZTs0xRpyvc4Vu@C9pZl6lmQGaGUUTW/u3982D02NZtH6of2xeHjcvpXaB1x9yPO0OTPfWIvWB6Re78PcUEp1cDizShBIcWpYbDsjhLLSKfrFXNIsPxSCEh699S65SaUWbkgWJr@ikDw/XHFokm/3he6zHLtG7UJg3dmOx1qlglQHuf4f2GpmV@frgstW1/fnY/7yTN8/VHAgjJoxm@DuQfk/K7rhQTia3P1Uhz5E2K@baPA1zWruMkwtfUrj7YJeXar7Su0T9UDXBQuENcZgB4Pg74LOYvSrRm9UNBJxiAtj3iG/3ClZoD62C3/UnhYfgSfTM0OLralb/Wc3QtB2iu9VKog4owYrt@U57icq0y4b2fB3TK@Xq2@rO1pvqDlxc4IIEVlEzbjTTmtF177/bGS95kZ3wRfGOmMxPNEEYybaG74/nF1LTkvkPy4cNw5qNcwdeoHi3ZXfk6heTdjvj0YINGds8z2yXpCzHsgaErn4OGMH1cERo24WZJd7uttKlTqQbTm7x0J4gQSQMiB58@ws"" rel=""nofollow noreferrer"">Without 19th byte</a></li>
</ul>
","","user100411"
"221228","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: 6 bytes + content: 0 bytes = 6 bytes.</h1>
<ul>
<li>Filename: <code>1.p.1-</code></li>
<li>Content: empty</li>
</ul>
<p><a href=""https://tio.run/##nRhtV9pI9/v@imEWyAwQkii2lnF0FW2XXaWuut1WoJ4IQaIhARIUBfrX@9w7SRCsz9mX01NmcufOfX8bu3bY//4z6UfRMKwaxo0b9SfX5U4wMD78ql8Mbee9/fDk@MZw6gzKwyB0p244MK694NoY2G4Md8sb5YHrL49/Cp2I6M5ETAZ2eEdMc2NDONNhMI7Ice1q//hY1gSLHocOuXGiTuD38nn1BVwHtt/lu0bXuTf8ieeRjd28lc8nl0/3L36VNMsSPKIPUwLqiGdnuBSri3ijL2jK9s9G/fPV@cWh3DDNzRR4@vG8/vn4y1Xt49nZUe1CWqJJdJ/Q7Oxg//zXq09HZ@f1j40qkCHtfH5GlFYBUVoK/CgeiMXyzuVrV5zBxLMjh4R9vBAMI9g9BONuOPTcSNiea4dEvyFadmYVafYXutCkhqsmGn8eH9dODmVVsQClkWFXhH23FynmXYKICcDp9AOS/ZlTIomFrJmChH0HbBgFAQm87m4eveBGxOLCubc9QjOkZ3uhQ@fzV9DJKr6SQOFM56HTJVpoTI1HQ4Tw82Roiu8Tac/noLKiBDg/sAVNwALevXz3ToALh67nMM560hQdO3SAg0WJ6xPWK3DSA28IJ7Q7wg5DZ3DtPaLjA/D5vk/0@2hizaMx0WshMa2NzcrWm7fb74jWbPmFtja/GTtDUp7bD3dEOzj6UG/MPGDSlZU3AqzLhmPXj3pEG54GH/2GW7/q1MLz@0@9987R@Ozhr@nnxy9Pl/Z@dDE46R4W9Uw2l9Pm/4F11pS01qQkaxLali1KwSRe8OCMWRiLwGiuQ0tZk3NCW1RQAYbUVGgwSkvnJVqlXKDoPRlKSkUvGDMBEe@5vkN6u6bgM7fHUkC4I02u8AAYoiVr@XxPyi6fHTEuFEtSa4ZtsXDA6wSx1OlDHz0R749ZjyM78ZJwfIKElDNNsVgs2fzIQHGIrxyzkAMAMRa9id@J3MAnx6yjZO9kQF4eRnbnrukVi23ZWUGCK4jj8VniMeolNvBAd0/XeQqHfwkN3WongoAdFgtNeUK/JwGEjwo@moZErHWi4y4o6Bel0XyYPj61Dd2wDbSAv2MmzGnZJgcVUo4R6Jx2bIhoiG26DG6FB75mMRW7bexR8guI5heBXBX0RJKB0snoGvl8xueJLWMIn02kr1silszfnay6V/kgESUWgjwYASnbr8ryUpdYOGon8gCGcp//L0imbocYFYndc2GrhbUvTVE6Z00Sm5noXkQ2sBIBpXnqBVuauECQZnsUd30AaGEBTDYM/E54P47aRoHZOxYvGs0iZJ4ef29w8I8zjcTCGBozICNCKBCLcMcS8D856sOuD4pHRiGTscViFsqM0ew5iTeEjUZxr9pG0fCAauO9DmyYDb4HATpgqGbghyAAAPsINAaGDscW7FJZxMKCJH2h5uaamtrstOkWzbbMgl@LRTGU8K1vQFIMv0EA5/PAfBaD5DAO3cl1GI1Z1ixtctF1PAcaxmlT1922iBWDi1890vxK2kW83zFmcIVRBcjSEs2TPC3FJP@WQBYphMbM1eXGC9z/c9NLbiieZMn0H3N8Fjy1IoQ@eDybwx0gMmLOiRmj8SzlswBtB9VzKKYy23gvyKPMxu4SK0KsijLkiB9gIk135COfXckpXH4Uj/JKLNasDZHLjFbR2JsWH6vg9L2pDmsG1gKsOVhzj1Vobq/rddQ4nGEJuoUQvN1xxW2xGFchQLttY3ak/RFSrVzIGoYWAwwwB9jQMLBpouQF45TluTBu4JvA4CWuoT@qPHCvIBN6zjgatMHuRh4qpyEikSY0gOIKAQd8pk5sBC7Utotb7HLYsnvLeUB1ZQ1zmJlcm8/j7y6QHjvRZOxj54m5FJGA3e2mXHX8Dq@j9DuD3zDWpN@tLAK67n0KyCmEICUQGuWC8dfFe0bzUAHBHC8kW7bjuCyfN@8kJA8keNoH@3Ef1GBKiNLKo6Gh58ury5bhsAM@u4OsAzJtCT/YD9BfB0DxYAeh4gBcBpvSQYIAmxfEUXRgwFWf7xIoclxAaoedsTuMZCIodj/H6X6jZWhgYxhH1edqkztlhxz1Kf3OeFseKplAtPUGF5s/8/tae/xteUDgYNdaOfr9@Uhp83xysXaCTFH55/PP7IzPziSgKUl0PXE9OVtBmrBa0hOYbu3AAFHb2dh6w/dqVeynS7QPSAssMPG/GWUDyU58MfFx@HgmmuyWLXYva1b1VV3@RGZwq7YC22cnaVPav4YpvQope/JaP1reGLJ0hMmAQfmEfYbflfMgHiNeP/RZvTQqHZa8Z5zZSAISzF2e499EfTbiKoLq0HDqO9ITdYifCWOHMqnbo1K9ZHH@jTZN/V2b7h0WK9vVyhYOPUs2Lshwyj6s875iJ6Va6bL0hc9OJC1fVUkjiLA@OTfOmIqaBHxxCWzVzBMPe5W3sVO2tvn12LHvsOLVoNZWmptbbaydl7JS0WvJ5RgFOz3bju9ZFehuNSk3saPGSPB@ilx/4ogF2j7Gru1UthFxd@st5wqsZHjmHjPgX@QXwmo6IAt0pjhll4Uvqzp2Vox/yi7WDRCuHH5eS4B7cMtt6RNXtRZMb0K230oV0uCEW7DFJ0zeUr0t1IKjI25u4@9bXW/LT6sOGK@wws0YXnGB7z3m8yATzlb7jJbHVQJbimpgAqik5gWMmDVnPjwnGpCDMgQYGSCxIv@U/VEaxRwhl3mCbYk/VGjFAZYA/9gZrVx8/BcXd1cvPi2FYvHVVK5E/CVitGKJPlbJdcsP4uM7HOz74DJEWT3vomdWUZIuiXjiDorKmsdUiapj3S1CLWKYOiDXbbzE9ZDz2HFSIaFHn5mpNoS8flPhA5IWX@QvNqb6EgVyDFgDio5oO@aeXq/W13ynGtcaxcILitjJRkk9@C2JFqYMD2Oip1aZxEu2Si6dcZBZRsxo19sbGV7VM0acr3KFbvgPaeZepZkDmjlFE1v79/eN/ZMjqVnlYdnSNTKf/5RAWubWVst8ow60n2ofGxdHjQv5PX0nZRUanSevb9KDH98eODCGvcB46BC9A/V25SSh9nwbC4fjR6@h/Hh9aYse2H/5Bl@58t8e2I0zNdTBvAhzFv5RR78jlj8uWekY9lVV5QJpsXKhxbMwdLUsHEP4gsJDBlu2VMOS3iHqr04TzPpggJMJAMc/AJ/F7FaI3qisIeBIEsJ5QIZut@RE7sApDTvDSek@fBJdO3L4qpqVv1czsl2P6H5lI1UHlGDl1my7tUBlWpahPb@t9A2r8rayvfmmsg2vEHjtgFXUwBoPqHb8dvv3dsYXW2wnXCg@@NJhiKYII9nScP14di41LR3msBa4MHm5OETga4h3mm5bLv/80WrlAlpyIf0aZ7ktU0orkTUkdPm2H8Fbb0Roy4cBJDnuNLNmO9YNx7BkAk@RIBL6RA@//w8"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<p><code>.p</code> is <code>until empty; do putchar pop; done</code>. <code>.1</code> is not a command; treated as a substring for literal.</p>
","","user100411"
"221233","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 10 bytes, with warning</h1>
<pre><code>1dnl lnd1-
</code></pre>
<p><a href=""https://tio.run/##yzX5/98wJS9HIScvxVD3/38A"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
<hr />
<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 16 bytes, clean output</h1>
<pre><code>1m4exit tixe4m1-
</code></pre>
<p><a href=""https://tio.run/##yzX5/98w1yS1IrNEoSSzItUk11D3/38A"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
","","user100411"
"221240","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 32 bytes + Content: 4 bytes = 36 bytes, depends on ASCII-compatible.</h1>
<ul>
<li>Filename (escaped unprintables): <code>\001.n.e\002.n.emiss a few.p.ec.n.ed.n</code></li>
<li>Content: <code>, .p</code></li>
</ul>
<p><a href=""https://tio.run/##nRhtV9pI9/v@imEWyQwQEhBbyzi6irbLrlJX3W4rUE@EINGQRBIUBPrX@9w7SRCsz9mX01NmcufOfX8be1Y4@P4zGURRENYM48aJBuPrUtcfGh9@1S8Cy35vPT7ZnhFM7GEp8ENn4oRD49r1r42h5cRwp1QpDR1vefxTaEdEt8diPLTCO2KalYqwJ4E/ishx/Wr/@FjWBYumgU1u7Kjre/1cTn0B16Hl9fiu0bMfDG/suqSymyvncsnl0/2LXyXNsgSP6EFKQB3x7AyXQm0Rb/QFTdn@2Wx8vjq/OJQV09xMgacfzxufj79c1T@enR3VL2RZtIjuEZqdHeyf/3r16ejsvPGxWQMypJPLzYjSyidKS4EfhQOxWN65fO2KPRy7VmSTcIAX/CCC3aM/6oWB60TCch0rJPoN0bKzcoFmf6ELTWq4aqL55/Fx/eRQ1hQLUBoZ9kQ4cPqRYt4jiJgA7O7AJ9mfOSWSlJE1U5BwYIMNI98nvtvbzaEXnIiUubAfLJfQDOlbbmjT@fwVdLKKryRQOJN5aPeIFhoTY2qIEH6eDE3xfSKd@RxUVpQA5we2oAlYwH2Q794JcGHguDbjrC9N0bVCGziUKXE8wvp5TvrgDWGHVldYYWgPr90pOt4Hn@97RH@IxuV5NCJ6PSRmubJZ3Xrzdvsd0VptL9/R5jcjOyClufV4R7SDow@N5swFJj1ZfSPAuiwYOV7UJ1pw6n/0mk7jqlsPzx8@9d/bR6Ozx78mn6dfni6t/ehieNI7LOiZ7MaGNv8PrLOmpPUWJVmT0I5sUwomcf1He8TCWARGN7q0mDU5J7RNBRVgSE2FBqO0eF6kNcoFit6XoaRU9P0RExDxruPZpL9rCj5z@iwFhDvS5AoPgCFasp7L9aXs8dkR40KxJPVW2BELG7xOEEudPg7QE/H@mPU5shMvCccnSEg50xSLxZLNjwwUh/jKMQs5ABBj0R973cjxPXLMukr2bgbk5WFkde9abqHQkd0VJLiCOC6fJR6jbmIDF3R3dZ2ncPiX0NDLnUQQsMNioSlP6A/Eh/BRwUfTkIi1TnTcBQW9gjRaj5PpU8fQDctAC3g7ZsKclixyUCWlGIHOadeCiIbYpsvgVnjgaxZTsTrGHiW/gGheAcjVQE8k6SudjJ6Ry2U8ntgyhvDZWHp6WcSSebvjVfcqHySixEKQR8MnJetVWV7qEgtHrUQewFDu8/4FydTtEKMisftG2G5j7UtTlM5Zi8RmJrobkQpWIqA0T71gSRMXCNJsn@JuAAAtzIPJAt/rhg@jqGPkmbVT5gWjVYDM0@PvCgf/2JNILIzAmAEZEUKBWIQ7ZQH/k6MB7AageGTkMxlLLGahzBitvp14Q1hoFOeqYxQMF6g23@vAhlngexCgC4Zq@V4IAgBwgEBjaOhwXIZdKotYlCFJX6i5uaamNjttOQWzI7Pg10JBBBK@9QokRfANAjiXA@azGCSDOHTH12E0YlmzuMlFz3ZtaBinLV13OiJWDC5@dUnrK@kU8H7XmMEVRhUgS4s0R3K0GJP8WwJZpBAaM0eXlRe4/@emm9xQPMmS6T/m@Cx4akUIffB4dgN3gMiIOSdmjMazlM98tB1Uz0BMZLb5XpCpzMbuEitCrIoScMT3MZEmO3LKZ1dyApenYiqvxGLN2hC5zGgXjL1JYVoDp@9NdFgzsOZh3YB1Y1qD5va6XkfNwxmWoFsIwdsdR9wWCnEVArTbDmZH2h8h1Ur5rGFoMcAAc4ANDQObJkqeN05ZjgvjBr4JDF7iGvqjygPnCjKhb4@iYQfsbuSgchoiEmlCAyiuEHDAZ@rEQuBCbXu4xS6HLbu/nAdUV9Ywh5nJtfk8/u4B6ZEdjUcedp6YSwEJWL1eylXH7/A6Sr8z@A1jTfrdziKg5zykgA2F4KcEQqOUN/66eM9oDiogmOOFZMt2HJfl89adhOSBBE/74CDugxpMCVFaeTQ09Hx5ddkybHbAZ3eQdUCmI@EH@wH66wAoHuwgVByAy2BTPEgQYPOCOIoODLjq8z0CRY4LSO2wO3KCSCaCYvez7d43WoIGNoJxVH2uNrlTdshRn@LvjHfkoZIJRFtvcLH5M7@vtcfflgcEDnbLK0e/Px8pbZ5PLtZOkCkq/3z@mZ3x2ZkENCWJrieuJ2crSGNWT3oC08s7MEDUdypbb/hevYb9dIn2AWmBBcbeN6NkINmxJ8YeDh/PRJPdssXuZc2avqrLn8gMbtVXYPvsJG1K@9cwpdcgZU9e60fLGwFLR5gMGJSP2Wf4XTn34zHi9UOPNYr3xcOi@4wzu5eABHOXa3s30YDdcxVBDWg4jR3pigbEz5ixQ5nU7ftio1jm/Bttmfq7Dt07LFS3a9UtHHqWbByQ4ZR9WOd9xU6K9eJl8QufnUhauqqRph9hfbJv7BEVdQn44hLYqpknHvaqb2OnbG3z65Ft3WHFq0OtrbY2tzpYOy9ltarXk8sxCnZ6th3fK1ehu9Wl3MSOGiPB@ylyvLEtFmj7GLu@U91GxN2tt5wrsJLhmXvMgH@RXwir64As0JnilF3mv6zq2F0x/im7WDdAuHL4eS0BHsAtt8VPXNVaML0J2X4rVUiDE27BFp8weYuNjlALjo64uY2/b3W9Iz@tOmC0wgo3I3jF@Z47zeVAJpyt9hktjWoEthTVwARQSc3zGDFrznx8TjQgB2UIMDJAYkX@CfujeB9zhFzmCXZZ/KFCKw6wBPjHzv3Kxem/uLi7evFpKRSLr6ZyJeIvEaMVSwywSq5bfhgf3@FgPwCXIcrqeQ89s4qSdEnEE3dQVNY8pkpUA@tuAWoRw9QBuW7jJa6HnMeOkwoJPfrMTLUh5PWbCh@QtPAif7ExNZYokGPAGlB0RNsx9/RGrbHmO9W41ijmX1DETnaf1IPfkmhhyvAwJrpqlUm8ZGvk0h75mWXE3O@6e/eGW3ONe85XuUI3/Ic0N16luQE0NxRNbO3f3zf3T46k1jbNcskr2bBWcB06YUgsAhNvKSjZXQT1Sp72U/1j8@KoeSG1IikF2vf01ZRVZOg8eYuTPvx41tCGoewFxmOX6F2ovisnCc3n21hGbC96DeXH60vL9MEbyxf5ypX/9txunqkRD6ZHmLrwTzz6HSl7o2I5Hcq@qhqdJ21Wyrd5FkawdhmHEr6g8KzBBi7V6KR3ifob1BhrgD/EOQWAox@Az2L2qkRvVtcQcEAJ4dwngdMr2pEztItBNxgXH8In0bMim6@qWf17NSPLcYnuVSupOqAEK7Vn2@0FKtMuG9rzS0uvlKtvq9ubb6rb8CaBtw9YRY2v8bhqxS@5f29nfL/FdsKF4vMvHY1oinAv2xquH8/Opaalox1WBgfmMAdHCnwb8W7L6cjlH0Pa7Q2fFh1IxubZxpYpZTmRNSR0@dK/h5ffPaFtD8aR5LjbypqdWDccypJ5PEWCSBgQPfz@Pw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<ul>
<li>Pxem is a stack-based procedure language.</li>
<li><code>.n</code> is <code>printf(&quot;%d&quot;,pop) unless empty</code>.</li>
<li><code>.e</code> calls subroutine (which is content).</li>
<li><code>.p</code> is <code>putc pop until empty</code>.</li>
<li>Other non-command substrings are literal: pushed from backward.</li>
</ul>
","","user100411"
"221245","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 45 bytes + Content: 0 bytes - Bonus: 30 bytes = 15 bytes.</h1>
<ul>
<li>Filename (escaped some characters): <code>Xx\202\330\330\100\362\336\352\344\100\304\302\346\312\100\302\344\312\100\304\312\330\336\334\316\100\350\336\100\352\346!.z\002.$.o.c!.a</code>
<ul>
<li>Printed version: <code>Xx‚ØØ@òÞêä@ÄÂæÊ@ÂäÊ@ÄÊØÞÜÎ@èÞ@êæ!.z.$.o.c!.a</code></li>
</ul>
</li>
<li>Content: empty</li>
</ul>
<h2>What it does</h2>
<ul>
<li>Twice necesity ASCII codes before.</li>
<li>Halve on this program.</li>
</ul>
<p><a href=""https://tio.run/##nRhtV@I49/v@ipCt0AClLaLjEKOr6Myyq4yr7qwjMJ4KRaqlRVoUBeavz3Nv0iI4PmdfjkeS3Nzc19yXtOtE/e8/k34cD6Oqad54cX98XeqEA/Pjr8b50HE/OI/PbmAOJ@6gNAwjb@JFA/PaD6/NgeMpuFcqlwZesNj@KXJjYrhjPh440R2xrHKZu5NhOIrJUe1q7@hI1LgePw1dcuPGnTDoZbNyBVwHTtBlO2bXfTCDse@T8k7WzmaTwyd7578KqukJHjGGKQG5xbQpDoXqXE2MOU3Z/tmoX1ydnR@IsmWtp8CTT2f1i6MvV7VPp6eHtXNh8yYxAkK16f7e2a9Xnw9Pz@qfGlUgQ9rZ7JRIrUIiteS4KOzz@eLM5VtH3MHYd2KXRH08EA5jmD2Go2409L2YO77nRMS4ITltaheo9gud50QOxxxv/Hl0VDs@EFXJApRGhl0e9b1eLJl3CSImALfTD4n2M6NEEBtZ6xIS9V2wYRyGJPS7O1n0ghcTm3H3wfEJzZCe40cunc3eQCfL@FICiTOZRW6X5CJzYj6ZPIKfZzMn@T6T9mwGKktKgPMDW9AELOA/iPfvObhw6PmuzvSesHjHiVzgYFPiBUTv5RnpgTe4Gzkd7kSRO7j2n9DxIfh8LyDGQzy2Z/GIGLWIWHZ5vbKx@W7rPck1W0G@nZvdjNwhKc2cxzuS2z/8WG9MfWDSFZVNDtbVhyMviHskNzwJPwUNr37VqUVnD597H9zD0enjX5OLpy/Pl85efD447h4UjIy2tpab/QfWmiVorUmJZhHaFi1KwSR@@OiO9EiJoNO1Di1qFmOEtiinHAyZk1dDp7R4VqRVyjiK3hORoJT3wpHO4cb7XuCS3o7F2dTr6Skg2hYWk3gAjNCStWy2J0SXTQ91xiVLUmtGbT53wesEseTuYx89oeZHeo8hO/6asNpBQtKZFp/PF2x@ZCA5qCNHesQAgBjz3jjoxF4YkCO9I2XvZEBeFsVO567pFwpt0VlCgiOI47Np4jHqJzbwQXffMFgKh7@EhmG3E0HADvN5TnrCeCAhXB95@Wh6JZTWiY47oGBQEGbzcfL03DYN0zHRAsG2lTCnJYfsV0hJIdAZ7Thwo@Fu08Xllnjga11RcdrmLiW/gGhBAchVQU8kGUqdzK6ZzWYClthSQdh0LALD5kqyYGe87F7pg0QUJQR5NENSct6U5bUuSjjqJPIAhnRf8C9Ipm6HO8oTu69FrRbmvjRE6UxvEmVmYvgxKWMmAkqz1AuOsHCAS6r1KM76AMhFeTDZMAw60cMobpt53dm2WcFsFiDyDLUuM/CPO4n53ByaUyDDI0gQ82jb5vCfbPVh1gfFYzOfyTh8Po1Exmz23MQb3EGjeFdts2D6QLXxwQA2ugO@BwE6YKhmGEQgAAD7CDQHpgHbNsxSWfjchiB9peb6ipq56UnTK1htoYFfCwU@FLA2yhAUw29wgbNZYD5VIDFUV3d8HcUjXbOK64x3Xd@FgnHSNAyvzZVicPCrT5pfSbuA5zvmFI7oVAI0WqRZkqVFRfJvCWhIITKnniHKr3D/z0k/OSF5kgXTf8zxRfDUinD1wePaGs4AUSfWjFgKjWmUTUO0HWTPIZ8IrfGBkyehKXfxJSGWRRkyxA8xkCbb4olNr8QEDj/xJ3HF5yvWhpurm62CuTspPFXB6bsTA8YMjHkY12Bce6pCcXtbr8PGwRRT0C1cwdttj98WCioLAdptG6MjrY8QaqW8Zpo5BTDBHGBD08SiiZLnzRM9y7h5A2sCjRe/hvoo48C7gkjouaN40Aa7m1nInCaPeRrQAFIZAjbYVO44CJzLaRenWOWwZPcW/YCsyjmMYd1iudlMrbtAeuTG41GAlUdxKSABp9tNuRq4jq7jdJ3BNbQ16bqlIaDrPaSANYkQpgQis5Q3/zr/oNMsZEAwxyvJFuVYpeWz5p2A4IEAT@tgX9XBHHQJcZp5cmjo2eLoomS4@j6b3kHUAZm2gB@sB@ivfaC4v41Qvg8ug0lxP0GAySviKDowYLLOdwkkOcYhtKPOyBvGIhEUq5/rdr/REhSwEbSjcrlc5E70A4b6FH/XWVscSJlAtNUCp8yf@X2lPP622CCwsWMvbf3@siW1edk5X9lBpqj8y/6FfsqmpwLQpCSGkbienC4hjfVaUhN0w96GBqK2Xd7YZLu1KtbTBdpHpAUWGAffzJKJZMcBHwfYfLwQTWaLErurWVVjWZc/kRmcqi3B9vTjtCjtXUOXXoWQPX6rHi1ODPW0hcmAQdlYv4Dfpf1QtRFvbwZ6vXhfPCj6LzjTewFI0Hf5bnAT9/V7Jm9QHQpOfVv4vA73Z6zrByLJ2/fFetFm7BttWsb7Nt09KFS2qpUNbHoWbDyQ4UT/uMr7Sj8u1oqXxS9seixo6apKGmGM@cm9cUeU1wTg80tgK3se1exV3imnbGyx65Hr3GHGq0GurTTXN9qYOy9FpWLUksMKBSu9vqXO2RWobjUh1rGiKiR4P8VeMHb5HG2vsGvblS1E3Nl4x5gESxleuCsG7Iv4QvSaAcgcnclP9Mv8l2UdO0vGP9HPVw0QLW1erATAA7jltviZyVwLprcg2m@FvNLghFuwxWcM3mK9zeWArSNObtX61jDa4vOyA0ZLrHAygldcGPhP2SzIhL3Vnk5LoyqBKUU1MABkULM83pgVZz6@BBqQgzQEGBkgsST/RP@jeK84QiyzBNvmf8irpS5YAvxj@37p4NO/OLizfPB5IZSujqZyJeIvEOMlS/QxS65afqC277Cx74PLEGV5v4ueWUZJqiTi8TtIKisekymqjnm3ALlIx9ABuW7VoPIhY8pxQiKhR1@YyTKEvH6T1wckLbyKXyxM9QUKxBiwBhQD0batXaNera/4ThauFYr5VxSxkt0n@eC35Lbo0vDQJvpyFMl90ark0h2FmcWNud/xd@9Nv@qb94wtc4Vq@A9prr1Jcw1orkmaWNq/f2jsHR@K3MWkVbbKrfV1S/7bFoybuN5srW/AWKkomFWBf1wD3C4nMLX/slZzRQvw1nG9qfY2FEzNJZ1M6bllWeWSVgpLnUzJyf2UPsU0KRuFVP1T7VPj/LBxLr6/2pslj3/Sg5/AGbjQBb7CeOwQowM0lnYSai@nMW@5QfwWyo/HF67ogfsXnwCWjvy3933jVPaU0K5Cm4fflIw7Ygejop12gV9lUciTll7Kt5gGPV/Lxi6IzSm8o7BjELJXMzpEfvQaY9IJB9gYAXD0A/BFzG6FGI3KCgJ2RBHsh2TodYtu7A3c4rAzHBcfomfedWKXLatZ@Xs1Y8fziRFUyqk6oIReak23WnNUpmWbuZennVG2K@8qW@ublS14BMFjC6wi@2XVHzvq6fjv7YwPRmUnHCi@N9NejKYI96KVw/HT6ZnI5dJeElORB42fhz0MPsZYp@m1xeLrS6u1FtKiB9HfOF3bsISwE1kjQhefFu7hqXlPaCuA/ifZ7jQ1q610wy4weQCkSHAT@sSIvv8P"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 55 bytes + Content: 0 bytes - Bonus: 50 bytes = 5 bytes.</h1>
<ul>
<li>Filename (escaped some): <code>Xx\202\330\330\100\362\336\352\344\100\304\302\346\312\100\302\344\312\100\304\312\330\336\334\316\100\350\336\100\352\346!.z\002.$.t.v.m.v.c!.a.t.p</code>
<ul>
<li>Printed: <code>XxØØ@òÞêä@ÄÂæÊ@ÂäÊ@ÄÊØÞÜÎ@èÞ@êæ!.z.$.t.v.m.v.c!.a.t.p</code></li>
</ul>
</li>
<li>Content: empty</li>
</ul>
<h2>What it does</h2>
<ul>
<li>Move to bottom each of them.</li>
<li>Hide last <code>!</code> to heap.</li>
<li>Print all of them at once.</li>
</ul>
<p><a href=""https://tio.run/##nRhtV@I49/v@ipCt0AClLaLjEKOr6Myyq4yr7qwjMJ4KRaqlRVoUBeavz3Nv0iI4PmdfDgeS3Nzc19yX0HWi/vefST@Oh1HVNG@8uD@@LnXCgfnxV@N86LgfnMdnNzCHE3dQGoaRN/GigXnth9fmwPEU3CuVSwMvWGz/FLkxMdwxHw@c6I5YVrnM3ckwHMXkqHa1d3QkalyPn4YuuXHjThj0slm5Aq4DJ@iyHbPrPpjB2PdJeSdrZ7PJ4ZO9818F1fQEjxjDlIDcYtoUh0J1ribGnKZs/2zUL67Ozg9E2bLWU@DJp7P6xdGXq9qn09PD2rmweZMYAaHadH/v7Nerz4enZ/VPjSqQIe1sdkqkViGRWnJcFPb5fHHm8q0j7mDsO7FLoj4eCIcxzB7DUTca@l7MHd9zImLckJw2tQtU@4XOcyKHY443/jw6qh0fiKpkAUojwy6P@l4vlsy7BBETgNvph0T7mVEiiI2sdQmJ@i7YMA5DEvrdnSx6wYuJzbj74PiEZkjP8SOXzmZvoJNlfCmBxJnMIrdLcpE5MZ9MHsHPs5mTfJ9JezYDlSUlwPmBLWgCFvAfxPv3HFw49HxXZ3pPWLzjRC5wsCnxAqL38oz0wBvcjZwOd6LIHVz7T@j4EHy@FxDjIR7bs3hEjFpELLu8XtnYfLf1nuSarSDfzs1uRu6QlGbO4x3J7R9@rDemPjDpisomB@vqw5EXxD2SG56En4KGV7/q1KKzh8@9D@7h6PTxr8nF05fnS2cvPh8cdw8KRkZbW8vN/gNrzRK01qREswhtixalYBI/fHRHeqRE0OlahxY1izFCW5RTDobMyauhU1o8K9IqZRxF74lIUMp74UjncON9L3BJb8fibOr19BQQbQuLSTwARmjJWjbbE6LLpoc645IlqTWjNp@74HWCWHL3sY@eUPMjvceQHX9NWO0gIelMi8/nCzY/MpAc1JEjPWIAQIx5bxx0Yi8MyJHekbJ3MiAvi2Knc9f0C4W26CwhwRHE8dk08Rj1Exv4oLtvGCyFwyehYdjtRBCww3yek54wHkgI10dePppeCaV1ouMOKBgUhNl8nDw9t03DdEy0QLBtJcxpySH7FVJSCHRGOw7caLjbdHG5JR74WldUnLa5S8kvIFpQAHJV0BNJhlIns2tms5mAJbZUEDYdi8CwuZIs2Bkvu1f6IBFFCUEezZCUnDdlea2LEo46iTyAId0X/AuSqdvhjvLE7mtRq4W5Lw1ROtObRJmZGH5MypiJgNIs9YIjLBzgkmo9irM@AHJRHkw2DINO9DCK22Zed7ZtVjCbBYg8Q63LDPzjTmI@N4fmFMjwCBLEPNq2OXyTrT7M@qB4bOYzGYfPp5HImM2em3iDO2gU76ptFkwfqDY@GMBGd8D3IEAHDNUMgwgEAGAfgebANGDbhlkqC5/bEKSv1FxfUTM3PWl6BastNPBrocCHAtZGGYJi@A0ucDYLzKcKJIbq6o6vo3ika1ZxnfGu67tQME6ahuG1uVIMDn71SfMraRfwfMecwhGdSoBGizRLsrSoSP4tAQ0pRObUM0T5Fe7/OeknJyRPsmD6jzm@CJ5aEa4@eFxbwxkg6sSaEUuhMY2yaYi2g@w55BOhNT5w8iQ05S6@JMSyKEOG@CEG0mRbPLHplZjA4Sf@JK74fMXacHN1s1UwdyeFpyo4fXdiwJiBMQ/jGoxrT1Uobm/rddg4mGIKuoUreLvt8dtCQWUhQLttY3Sk9RFCrZTXTDOnACaYA2xomlg0UfK8eaJnGTdvYE2g8eLXUB9lHHhXEAk9dxQP2mB3MwuZ0@QxTwMaQCpDwAabyh0HgXM57eIUqxyW7N6iH5BVOYcxrFssN5updRdIj9x4PAqw8iguBSTgdLspVwPX0XWcrjO4hrYmXbc0BHS9hxSwJhHClEBklvLmX@cfdJqFDAjmeCXZohyrtHzWvBMQPBDgaR3sqzqYgy4hTjNPDg09WxxdlAxX32fTO4g6INMW8IP1AP21DxT3txHK98FlMCnuJwgweUUcRQcGTNb5LoEkxziEdtQZecNYJIJi9XPd7jdaggI2gnZULpeL3Il@wFCf4u86a4sDKROItlrglPkzv6@Ux98WGwQ2duylrd9ftqQ2LzvnKzvIFJV/2b/QT9n0VACalMQwEteT0yWksV5LaoJu2NvQQNS2yxubbLdWxXq6QPuItMAC4@CbWTKR7Djg4wCbjxeiyWxRYnc1q2os6/InMoNTtSXYnn6cFqW9a@jSqxCyx2/Vo8WJoZ62MBkwKBvrF/C7tB@qNuLtzUCvF@@LB0X/BWd6LwAJ@i7fDW7ivn7P5A2qQ8Gpbwuf1@H@jHX9QCR5@75YL9qMfaNNy3jfprsHhcpWtbKBTc@CjQcynOgfV3lf6cfFWvGy@IVNjwUtXVVJI4wxP7k37ojymgB8fglsZc@jmr3KO@WUjS12PXKdO8x4Nci1leb6Rhtz56WoVIxaclihYKXXt9Q5uwLVrSbEOlZUhQTvp9gLxi6fo@0Vdm27soWIOxvvGJNgKcMLd8WAfRFfiF4zAJmjM/mJfpn/sqxjZ8n4J/r5qgGipc2LlQB4ALfcFj8zmWvB9BZE@62QVxqccAu2@IzBW6y3uRywdcTJrVrfGkZbfF52wGiJFU5G8IoLA/8pmwWZsLfa02lpVCUwpagGBoAMapbHG7PizMeXQANykIYAIwMkluSf6H8U7xVHiGWWYNv8D3m11AVLgH9s3y8dfPoXB3eWDz4vhNLV0VSuRPwFYrxkiT5myVXLD9T2HTb2fXAZoizvd9EzyyhJlUQ8fgdJZcVjMkXVMe8WIBfpGDog160aVD5kTDlOSCT06AszWYaQ12/y@oCkhVfxi4WpvkCBGAPWgGIg2ra1a9Sr9RXfycK1QjH/iiJWsvskH/yW3BZdGh7aRF@OIrkvWpVcuqMws7gx9zv@7r3pV33znrFlrlAN/yHNtTdprgHNNUkTS/v3D42940ORu5i0yla5tb5uya9twbiJ683W@gaMlYqCWRX44hrgdjmBqf2XtZorWoC3jutNtbehYGou6WRKzy3LKpe0Ulx6KA3g28mUHFgMcz/VPjXODxvn4nv6OtOkuHSWvPlJD34CZ@BC8/cK47FDjA5k@aWdhNrLaUxXbhC/hfLj8YUHeuD1xct/6ch/e9Y3TmUrCV0qdHf4V5JxR@xgVLTT5u@rrAV50tJL@RbToNVr2dj8sDmF5xM2CkK2aEaHyP@6xphrwgH2QwAc/QB8EbNbIUajsoKAjVAE@yEZet2iG3sDtzjsDMfFh@iZd53YZctqVv5ezdjxfGIElXKqDiihl1rTrdYclWnZZu7lRWeU7cq7ytb6ZmUL3j7wxgKryDZZtcWOejH@ezvjO1HZCQeKz8y0BaMpwr1o5XD8dHomcrm0hcQM5EG/52Hrgm8w1ml6bbH406XVWgtp0YOgb5yubVhC2ImsEaGLfxTu4YV5T2grgLYn2e40NautdMPmL@n7UyS4CX1iRN//Bw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221388","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 13 bytes (filename) + 0 bytes (content) = 13 bytes.</h1>
<ul>
<li>Filename (escaped unprintable): <code>.w.o.i.c\001.+.a</code></li>
<li>Content: empty</li>
</ul>
<h2>With comments</h2>
<pre><code>XX.z
.a.wXX.z # while empty || pop!=0; do
  .a.oXX.z # if !empty; then putchar pop; fi
  .a.iXX.z # push getchar (* NOTE EOF IS -1 *)
  .a.c\001.+XX.x # dup; push 1; push pop+pop
.a.aXX.z # done
.a
</code></pre>
<p><a href=""https://tio.run/##nRhrV9pI9Ht/xTjLYwYISRBbZRxdRbvLrlJX3W4rsJ4YQomGBElQEOhf7947SRCse/ZxespM7ty579fYtcL@tx/IcOIM3HKlPHD98jAI3YkbDt78QMyKY1bsLaO7Y25WKu@6W9vbO9Wdrapj3pg3tuPYb813Tm/TfBM6EdGcsRgPrPCOGEalIpzJMBhF5KR@fXByIuuCRdOhQ744kR34vVxOfdnBYGD5Xb6nd50H3R97Hqns5cxcLrl8dnD5s6QZluARbZgSUEc8M8OlWFvEG21BU7a/Nxufri8uj2TFMDZT4NmHi8ank8/X9Q/n58f1S2mKFtF8QjOzw4OLn68/Hp9fND40a0CGdHK5GVFaBUQZROBH8VAslneuXrviDMaeFTkk7OOFYBjB7jEYdcOh50bC8lwrJNoXks/MzCLN/EgXeZnHNS@av5@c1E@PZE2xAKWRYVeEfbcXKeZdgogJwLH7Acn8wCmRxETWTEHCvgM2jIKABF53L4decCNicuE8WB6hG6RneaFD5/NX0MkqvpJA4UzmodMl@VCf6FNdhPDzpOcV3yfSmc9BZUUJcL5jC5qABbwHubMjwIVD13MYZz1pCNsKHeBgUuL6hPUKnPTAG8IJLVtYYegMbrwpOj4Anx/4RHuIxuY8GhGtHhLDrGxWt96@294h@VbbL3Ty8y8jZ0jKc@vxjuQPj39qNGceMOnK6lsB1mXDketHPZIfngUf/KbbuLbr4cXDx95753h0/vjH5NP089OVdRBdDk67R0VtI5PN5uf/g3XGkLTeoiRjENqRbUrBJF7w6IxYGIvAaNampYzBOaFtKqgAQ@ZVaDBKSxclWqNcoOg9GUpKRS8YMQER77m@Q3p7huAzt8dSQLgrDa7wABiiJeu5XE/KLp8dMy4US1JvhR2xcMDrBLHU6WMfPRHvT1iPIzvxknB8goSUMw2xWCzZfM9AcYivnLCQAwAxFr2xb0du4JMTZivZ7Q2Ql4eRZd@1vGKxI@0VJLiCOB6fJR6jXmIDD3T3NI2ncPiX0NDMTiII2GGxyCtPaA8kgPBRwUfTkIi1TnTcAwX9otRbj5PpU0fXdEtHC/i7RsKcli1yWCXlGIHOqW1BRENs02VwKzzwNYupWB19n5IfQTS/CORqoCeSDJROelfP5TZ8ntgyhvDZWPqaKWLJ/L3xqnuVDxJRYiHIox6QsvWqLC91iYWjViIPYCj3@f@BZOp2iFGR2D0btttY@9IUpXPWIrGZieZFpIKVCCjNUy9Y0sAFgjTTo7jrAyAfFsBkw8C3w4dR1NELzNo1eVFvFSHztPi7wsE/ziQSC32oz4CMCKFALMJdU8D/5KgPuz4oHumFjQ1LLGah3NBbPSfxhrDQKO51Ry/qHlBtvteADbPA9yCADYZqBX4IAgCwj0B9oGtwbMIulUUsTEjSF2purqmZn5213KLRkRnwa7EohhK@tQokxfArBHAuB8xnMUgO49Ad34TRiGWM0iYXXcdzoGGctTTN7YhYMbj4p0daf5JOEe/b@gyuMKoAGVqiOZKjpZjkPxLIIIVQn7marLzA/ZubXnJD8SRLpv@a47PgqRUh9MHjmSzuAJERY06MGI1nKJ8FaDuonkMxkZnme0GmMhO7S6wIsSrKkCN@gIk02Z3ySVFONTaVEy6Wln5/AbUqYnq7qO9PitMa@Ht/osG6AWsB1iys2WkN@trrKh03j2ZYfW4h@m53XXFbLMYFCNBuO5gYaWuELCsXMrqejwE6WALMp@vYL1Hogn7GclzoX@Cb6LDcQGtUKeBeQxL0nFE06IDJ9RwUTV1EIs1lAMXFAQ74TJ1YCFyobRe32OCwW/eWo4BqyHlMX2bw/Hwef3eB9MiJxiMfm07MpYgErG435arhd3gTpd8b@A0TTfrdziCg6z6kgKxCCFICoV4u6H9cvmc0B8UPzPFCsmUnjivyRetOQt5AbqctsB@3wDwMCFFadPJo6Pny6rJbOOyQz@4g4YBMR8IPtgL01yFQPNxFqDgEl8GmdJggwOYFcRQdGHDV4rsE6hsXkNWhPXKHkUwExcbnON2vtAy9awSTqPpc7W9n7IijPqVfGe/IIyUTiLbe22Lzb/y61hl/WR4QONgzV45@fT5S2jyfXK6dIFNU/vn8Ezvns3MJaEoSTUtcT85XkMasnrQDppm7MDvUdytbb/l@vYatdIn2E9ICC4z9r3pZR7JjX4x9nDueiSa7ZXfdzxg1bVWX35EZ3KqvwA7YadqPDm5gQK9BbTx9rRUtbwxZOr1sgEH5mH2C35XzIJ4gXj/0WaN0Xzoqec84s3sJSDByeY7/Jeqze64iqAG9prErPdGA@BkzdiSTkn1fapRMzr/SlqHtdOj@UbG6Xatu4byzZOOCDGfsp3Xe1@y0VC9dlT7z2amk5esaaQYR1ifnizOioi4BX1wBWzXuxHNe9V3slK1tfjNyrDssdnUos9XW5lYHy@aVrFa1enI5RsEmz7bje2YVGltdyk1spjESPJ0i1x87YoG2j7Hru9VtRNzbese5AisZnrnHDPhn@ZmwugbIAp0pzthV4fOqjvaK8c/Y5boBwpXDT2sJ8ABuuS195KrWgukNyPZbqUIanHALtviIyVtqdIRacGrEzW38fatpHflx1QGjFVa4GcEDLvC9aS4HMuFYdcBoeVQjsKWoBiaASmpewIhZc@bjc6IBOShDgLEBJFbkn7DfSvcxR8hlnmCb4jcVWnGAJcDfdu9XLk7/w8W91YtPS6FYfDWVKxF/iRitWKKPVXLd8oP4@A5n@j64DFFWz7vomVWUpEsinriDorLmMVWiGlh3i1CLGKYOyHUbL3E95Dx2nFRI6NFnZqoNIa9fVPiApMUX@YuNqbFEgRwD1oCiIdqusa81ao0136nGtUax8IIidrL7pB78kkQLU4aHCdFTq0ziJVMjV84o2FhGzP2et3@vezVPv@d8lSt0w39JM/sqzSzQzCqa2Nq/vW8enB7LfPmxHJTdst02DLNcLFv5N/UPzcvj5qX8lj6KMgqVkjlJHtukBz@@NXBILvfme6xHm2g21Nm104TqKhUsGg5MPX@D9hqZpTV64IHlA/z52v98XTfP1fwMwyJMWvgXHe2OmP6oZKaD2J@qLhdIm5ULbZ6Bsatt4iDCFxReMdi0pRqXNJuoPzmNMe@DAc4mABx9B3wWs1slWrO6hoBDSQjnARm63ZITuQOnNLSH49JD@CS6VuTwVTWr/6xmZLke0fxqJVUHlGDl9my7vUBl2qaef35YaRWz@q66vfm2ug1PEHjqgFXUyBqPqFb8cPvvdsbnWmwnXCi@9tJxiKYI97Kdx/XD@YXM59NxDquBC7OXi2MEPoW43XI7cvm3j3Y7G9CSCwnYPM9uGVKaiawhocuH/T089O4JbfswgiTHditjdGLdcBBLZvAUCSKhT7Tw21PfGdj98VPfd@@CBzdy/gI"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221392","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: <s>30</s> 27 bytes + Content: 0 bytes = <s>30</s> 27 bytes, does not support signed zero, not clean.</h1>
<ul>
<li>Filename (escaped unprintable): <code>._.n.o.-a.d.n.-.-.00y.\001c._.</code>
<ul>
<li>Reversed: <code>._.c\001.y00.-.-.n.d.a-.o.n._.</code></li>
</ul>
</li>
<li>Content: empty</li>
</ul>
<p><a href=""https://tio.run/##nRhrV9pI9Ht/xTiLMAOEJIitMo6uot1lV6mrbrctsJ6YhBINCZKgUKB/vXvvJEGw7tnH6SkzuXPnvl@jY0X9bz@Q4cQdeJVqZeAFlWEYeRMvGrz6gZhV16za24aza25Vq2@c7Z2d3druds01b8wb23Xt1@Ybt7dlvorcmGjuWIwHVnRHDKNaFe5kGI5ictq4Pjw9lQ3B4unQJZ/d2A6DXj6vvuxwMLACh@/rjvugB2PfJ9X9vJnPp5fPD69@ljTHUjyiDTMC6ojnZriU6otkoy1oxvb3VvPD9eXVsawaxlYGPH932fxw@vG68e7i4qRxJU3RJlpAaG52dHj58/X7k4vL5rtWHciQbj4/I0qrkCiDCPwoHYnF8s6nl664g7FvxS6J@nghHMawewxHTjT0vVhYvmdFRPtMCrmZWaK5H@miIAu4FkTr99PTxtmxrCsWoDQydETU93qxYu4QREwBrt0PSe4HTokkJrJmChL1XbBhHIYk9J39PHrBi4nJhftg@YRukJ7lRy6dz19AJ6v4SgKFM5lHrkMKkT7Rp7qI4OeLXlB8v5DufA4qK0qA8x1b0AQs4D/I3V0BLhx6vss460lD2FbkAgeTEi8grFfkpAfeEG5k2cKKIndw40/R8SH4/DAg2kM8NufxiGiNiBhmdau2/frNzi4ptDtBsVuYfx65Q1KZW493pHB08lOzNfOBiSNrrwVYlw1HXhD3SGF4Hr4LWl7z2m5Elw/ve2/dk9HF4x@TD9OPXz5Zh/HV4Mw5Lmkbuc3Nwvx/sM4ZkjbalOQMQruyQymYxA8f3RGLEhEY3bRpOWdwTmiHCirAkAUVGozS8mWZ1ikXKHpPRpJS0QtHTEDE@17gkt6@IfjM67EMEO1Jgys8AEZoyUY@35PS4bMTxoViSRrtqCsWLnidIJY6feyjJ5L9KetxZCeeE05OkJBypiEWiyWb7xkoDsmVUxZxACDGojcO7NgLA3LKbCW7vQHy8ii27Lu2Xyp1pb2CBFcQx@ez1GPUT23gg@6@pvEMDv9SGprZTQUBOywWBeUJ7YGEED4q@GgWEonWqY77oGBQknr7cTL90tU13dLRAsGekTKnFYsc1UglQaBzalsQ0RDbdBncCg98zRIqVlc/oORHEC0oAbk66IkkQ6WT7uj5/EbAU1smED4by0AzRSJZsD9eda/yQSpKIgR51ENSsV6U5bkuiXDUSuUBDOW@4D@QzNwOMSpSu29GnQ7WvixF6Zy1SWJmovkxqWIlAkrzzAuWNHCBIM31KO76AChERTDZMAzs6GEUd/Uis/ZMXtLbJcg8LfmucvCPO4nFQh/qMyAjIigQi2jPFPA/PerDrg@Kx3pxY8MSi1kkN/R2z029ISw0infd1Uu6D1RbbzVgwyzwPQhgg6HaYRCBAADsI1Af6Bocm7DLZBELE5L0mZpba2oWZudtr2R0ZQ78WiqJoYRvrQpJMfwKAZzPA/NZApLDJHTHN1E8YjmjvMWF4/ouNIzztqZ5XZEoBhf/9En7T9It4X1bn8EVRhUgR8s0T/K0nJD8RwI5pBDpM0@T1We4f3PTT28onmTJ9F9zfBI8syKEPng8t4k7QGTEmBMjQeM5ymch2g6q51BMZK71VpCpzCXuEitCrIoy5IgfYiJN9qZ8UpJTjU3lhIulpd9eQq2Kmd4p6QeT0rQO/j6YaLBuwFqEdRPWzWkd@trLKp20jmdYfW4h@m73PHFbKiUFCNBuu5gYWWuELKsUc7peSAA6WALMp@vYL1Hoon7O8lzon@Gb6LDcQGtUKeBdQxL03FE86ILJ9TwUTV3EIstlACXFAQ74TJ1YCFyorYNbbHDYrXvLUUA15AKmLzN4YT5Pvh0gPXLj8SjAppNwKSEBy3Eyrhp@Rzdx9r2B3zDRZN@dHAIc7yEDbCqEMCMQ6ZWi/sfVW0bzUPzAHM8kW3bipCJftu8k5A3kdtYC@0kLLMCAEGdFp4CGni@vLruFy4747A4SDsh0JfxgK0B/HQHFoz2EiiNwGWzKRykCbJ4RR9GBAVct3iFQ37iArI7skTeMZSooNj7Xdb7SCvSuEUyi6nO1v52zY476lH9lvCuPlUwg2npvS8y/8etaZ/xleUDgYN9cOfr16Uhp83RytXaCTFH5p/MP7ILPLiSgKUk0LXU9uVhBGrNG2g6YZu7B7NDYq26/5geNOrbSJdpPSAssMA6@6hUdyY4DMQ5w7ngimu6W3fUgZ9S1VV1@R2Zwq7ECO2RnWT86vIEBvQ618eylVrS8MWTZ9LIBBuVj9gF@V87DZIJ4@TBgzfJ9@bjsP@HM7iUgwcjlu8HnuM/uuYqgJvSa5p70RRPiZ8zYsUxL9n25WTY5/0rbhrbbpQfHpdpOvbaN886SjQcynLOf1nlfs7Nyo/yp/JHPziStXNdJK4yxPrmf3REVDQn44hOwVeNOMufV3iRO2d7hNyPXusNi14AyW2tvbXexbH6StZrWSC8nKNjk2U5yz6xBY2tIuYXNNEGCp1PsBWNXLND2CXZjr7aDiPvbbzhXYCXDE/eEAf8oPxLW0ABZoDPFOftU/Liqo71i/HN2tW6AaOXww1oCPIBbbsvvuaq1YHoDsv1WqpAGJ9yCLd5j8pabXaEWnBpxc5t832paV75fdcBohRVuRvCACwN/ms@DTDhWHTJaGdUJbCmqgQmgkpoXMWLWnPn4lGhADsoQYGwAiRX5J@y38n3CEXKZp9im@E2FVhJgKfC3vfuVi9P/cHF/9eKXpVAsuZrJlYq/RIxXLNHHKrlu@UFyfIczfR9chiir5w56ZhUl7ZKIJ@6gqKx5TJWoJtbdEtQihqkDct0mS1IPOU8cJxUSevSJmWpDyOsXFT4gaelZ/mJjai5RIMeANaBoiLZnHGjNenPNd6pxrVEsPqOInew@rQe/pNHClOFhQvTVKtN4ydXJJ3cUbiwj5n7fP7jX/bqv33O@yhW64b@kufkizU2gualoYmv/9rZ1eHYiC5XrSlAJK5pVcWCjwT/DmFY6hmHacFR41XjXujppXclv2RMppy5SMifp05v04CewBi7J5199j/VoE82Gqrt2mlJdpYIlxIUZ6G/QXiKztE0P/LF8jj9d@59v7daFmqZhdIS5C/@@o90RMxiVzWws@1NV6SLpsEqxw3MwhHVMHEv4gsKbBlu4VMOTZhP1B6gxVoFwgJMKAEffAZ/EdGpEa9XWEHBEieA8JEPPKbuxN3DLQ3s4Lj9EX4RjxS5fVbP2z2rGlucTLahVM3VACVbpzHY6C1SmY@qFp2eWVjVrb2o7W69rO/AggYcPWEUNsMnAaiXPuP9uZ3y8JXbCheLbLxuOaIZwLzsFXN9dXMpCIRvusDZ4MIl5OFTgw4jbba8rl38J6XQ2Q1r2IB1bF5vbhpRmKmtE6PKZfw/PvntCOwEMJOmx3c4Z3UQ3HMvSiTxDgkjoEy36Zv4F"" rel=""nofollow noreferrer"">Try it online!</a></p>
<p><a href=""https://tio.run/##nRhrV9pI9Ht/xTiLMAOEJIitMo6uot1lV6mrbrctsJ6YhBINCZKgUKB/vXvvJEGw7tnH6SkzuXPnvl@jY0X9bz@Q4cQdeJVqZeAFlWEYeRMvGrz6gZhV16za24aza25Vq2@c7Z2d3druds01b8wb23Xt1@Ybt7dlvorcmGjuWIwHVnRHDKNaFe5kGI5ictq4Pjw9lQ3B4unQJZ/d2A6DXj6vvuxwMLACh@/rjvugB2PfJ9X9vJnPp5fPD69@ljTHUjyiDTMC6ojnZriU6otkoy1oxvb3VvPD9eXVsawaxlYGPH932fxw@vG68e7i4qRxJU3RJlpAaG52dHj58/X7k4vL5rtWHciQbj4/I0qrkCiDCPwoHYnF8s6nl664g7FvxS6J@nghHMawewxHTjT0vVhYvmdFRPtMCrmZWaK5H@miIAu4FkTr99PTxtmxrCsWoDQydETU93qxYu4QREwBrt0PSe4HTokkJrJmChL1XbBhHIYk9J39PHrBi4nJhftg@YRukJ7lRy6dz19AJ6v4SgKFM5lHrkMKkT7Rp7qI4OeLXlB8v5DufA4qK0qA8x1b0AQs4D/I3V0BLhx6vss460lD2FbkAgeTEi8grFfkpAfeEG5k2cKKIndw40/R8SH4/DAg2kM8NufxiGiNiBhmdau2/frNzi4ptDtBsVuYfx65Q1KZW493pHB08lOzNfOBiSNrrwVYlw1HXhD3SGF4Hr4LWl7z2m5Elw/ve2/dk9HF4x@TD9OPXz5Zh/HV4Mw5Lmkbuc3Nwvx/sM4ZkjbalOQMQruyQymYxA8f3RGLEhEY3bRpOWdwTmiHCirAkAUVGozS8mWZ1ikXKHpPRpJS0QtHTEDE@17gkt6@IfjM67EMEO1Jgys8AEZoyUY@35PS4bMTxoViSRrtqCsWLnidIJY6feyjJ5L9KetxZCeeE05OkJBypiEWiyWb7xkoDsmVUxZxACDGojcO7NgLA3LKbCW7vQHy8ii27Lu2Xyp1pb2CBFcQx@ez1GPUT23gg@6@pvEMDv9SGprZTQUBOywWBeUJ7YGEED4q@GgWEonWqY77oGBQknr7cTL90tU13dLRAsGekTKnFYsc1UglQaBzalsQ0RDbdBncCg98zRIqVlc/oORHEC0oAbk66IkkQ6WT7uj5/EbAU1smED4by0AzRSJZsD9eda/yQSpKIgR51ENSsV6U5bkuiXDUSuUBDOW@4D@QzNwOMSpSu29GnQ7WvixF6Zy1SWJmovkxqWIlAkrzzAuWNHCBIM31KO76AChERTDZMAzs6GEUd/Uis/ZMXtLbJcg8LfmucvCPO4nFQh/qMyAjIigQi2jPFPA/PerDrg@Kx3pxY8MSi1kkN/R2z029ISw0infd1Uu6D1RbbzVgwyzwPQhgg6HaYRCBAADsI1Af6Bocm7DLZBELE5L0mZpba2oWZudtr2R0ZQ78WiqJoYRvrQpJMfwKAZzPA/NZApLDJHTHN1E8YjmjvMWF4/ouNIzztqZ5XZEoBhf/9En7T9It4X1bn8EVRhUgR8s0T/K0nJD8RwI5pBDpM0@T1We4f3PTT28onmTJ9F9zfBI8syKEPng8t4k7QGTEmBMjQeM5ymch2g6q51BMZK71VpCpzCXuEitCrIoy5IgfYiJN9qZ8UpJTjU3lhIulpd9eQq2Kmd4p6QeT0rQO/j6YaLBuwFqEdRPWzWkd@trLKp20jmdYfW4h@m73PHFbKiUFCNBuu5gYWWuELKsUc7peSAA6WALMp@vYL1Hoon7O8lzon@Gb6LDcQGtUKeBdQxL03FE86ILJ9TwUTV3EIstlACXFAQ74TJ1YCFyorYNbbHDYrXvLUUA15AKmLzN4YT5Pvh0gPXLj8SjAppNwKSEBy3Eyrhp@Rzdx9r2B3zDRZN@dHAIc7yEDbCqEMCMQ6ZWi/sfVW0bzUPzAHM8kW3bipCJftu8k5A3kdtYC@0kLLMCAEGdFp4CGni@vLruFy4747A4SDsh0JfxgK0B/HQHFoz2EiiNwGWzKRykCbJ4RR9GBAVct3iFQ37iArI7skTeMZSooNj7Xdb7SCvSuEUyi6nO1v52zY476lH9lvCuPlUwg2npvS8y/8etaZ/xleUDgYN9cOfr16Uhp83RytXaCTFH5p/MP7ILPLiSgKUk0LXU9uVhBGrNG2g6YZu7B7NDYq26/5geNOrbSJdpPSAssMA6@6hUdyY4DMQ5w7ngimu6W3fUgZ9S1VV1@R2Zwq7ECO2RnWT86vIEBvQ618eylVrS8MWTZ9LIBBuVj9gF@V87DZIJ4@TBgzfJ9@bjsP@HM7iUgwcjlu8HnuM/uuYqgJvSa5p70RRPiZ8zYsUxL9n25WTY5/0rbhrbbpQfHpdpOvbaN886SjQcynLOf1nlfs7Nyo/yp/JHPziStXNdJK4yxPrmf3REVDQn44hOwVeNOMufV3iRO2d7hNyPXusNi14AyW2tvbXexbH6StZrWSC8nKNjk2U5yz6xBY2tIuYXNNEGCp1PsBWNXLND2CXZjr7aDiPvbbzhXYCXDE/eEAf8oPxLW0ABZoDPFOftU/Liqo71i/HN2tW6AaOXww1oCPIBbbsvvuaq1YHoDsv1WqpAGJ9yCLd5j8pabXaEWnBpxc5t832paV75fdcBohRVuRvCACwN/ms@DTDhWHTJaGdUJbCmqgQmgkpoXMWLWnPn4lGhADsoQYGwAiRX5J@y38n3CEXKZp9im@E2FVhJgKfC3vfuVi9P/cHF/9eKXpVAsuZrJlYq/RIxXLNHHKrlu@UFyfIczfR9chiir5w56ZhUl7ZKIJ@6gqKx5TJWoJtbdEtQihqkDct0mS1IPOU8cJxUSevSJmWpDyOsXFT4gaelZ/mJjai5RIMeANaBoiLZnHGjNenPNd6pxrVEsPqOInew@rQe/pNHClOFhQvTVKtN4ydXJJ3cUbiwj5n7fP7jX/bqv33O@yhW64b@kufkizU2gualoYmv/9rZ1eHYiC5Xrit0xDLMyNYyKBv@CilOxtEoIm@tK4VXjXevqpHUlv2VPpJy6SMmcpE9v0oOfwBq4JJ9/9T3Wo000G6ru2mlKdZUKlhAXZqC/QXuJzNI2PfDH8jn@dO1/vrVbF2qahtER5i78@452R8xgVDazsexPVaWLpMMqxQ7PwRDWMXEs4QsKbxps4VINT5pN1B@gxlgFwgFOKgAcfQd8EtOpEa1VW0PAESWC85AMPafsxt7ALQ/t4bj8EH0RjhW7fFXN2j@rGVueT7SgVs3UASVYpTPb6SxQmY6pF56eWVrVrL2p7Wy9ru3AgwQePmAVNcAmA6uVPOP@u53x8ZbYCReKb79sOKIZwr3sFHB9d3EpC4VsuMPa4MEk5uFQgQ8jbre9rlz@JaTT2Qxp2YN0bF1sbhtSmqmsEaHLZ/49PPvuCe0EMJCkx3Y7Z3QT3XAsSyfyDAkioU@06Jv5Fw"" rel=""nofollow noreferrer"">!enilno ti yrT</a></p>
<h2>With comments</h2>
<h3>Original</h3>
<pre><code>XX.z
.a._.nXX.z # push getint; putint pop
.a.o.-XX.z # DOTo and DOT- works like EOF for insufficient items
.aa.dXX.z # push ascii code of a; exit
.a.n.-.-.00y.\001c._.XX.z # deadcode
  ## NOTE this is syntaxically valid
.a
</code></pre>
<h3>Reversed</h3>
<pre><code>XX.z
.a._.cXX.z # push getint; dup
.a\001.yXX.z # push 1; while pop&gt;pop; do
  .a00.-.-XX.z # (*essentially*) push abs(0-pop)
    # NOTE actually: push 48; push 48; 
    #     push abs(pop-pop); push abs(pop-pop)
    # NOTE NULL char not supported for filename
  .a.n.dXX.z # putint pop; exit
.a.aXX.z # done
.a-.o.nXX.z # push hyphen; putchar pop; putint pop
.a._XX.z # this is why it aborts when only an integer is given
.a..c.sXX.z # push dot
.a
</code></pre>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 34 bytes + Content: 0 bytes = 34 bytes, clean.</h1>
<ul>
<li>Filename (escaped some): <code>._d..s.s.n.o.-a.d.n.-.-.00y.\001c._.</code>
<ul>
<li>Reversed: <code>._.c\001.y00.-.-.n.d.a-.o.n.s.s..d_.</code></li>
</ul>
</li>
<li>Content: empty</li>
</ul>
<p>This version deals with exiting; reversed version exits well against non-negative input, too.</p>
<p><a href=""https://tio.run/##nRhtV9pI93t/xTALZAbIG2JrGUZX0XbZVeqq27UC9cQklGhIgASFAv3r3TuTBMH2nOfZPT1lJnPfX@beOzpWNPj@C9p7Y@xYb42acVez39b27N3XdtWpmXv2G9Myqn3H2rP7tV3bfPULGs3coadVtaEXaKMw8mZeNHwVuTFS3SmbDq3oARlGtcrc2SicxOi0eXt4esqbjMTzkYu@uLEdBv1iUX7Z4XBoBQ7d1x33UQ@mvo@q@0WzWEyJzw@vfuM4T1I8pI4yBhJE8wuxlOurZKOucCb2r3br@vby6phXDWMnOzz/cNm6Pv102/xwcXHSvOIm6yA1QDi/ODq8/O3248nFZetDuw5sUK9YXCBpVYiklUx8lI/Yak1z8zMSdzj1rdhF0UAQhKMYdk/hxIlGvhczy/esCKlfkJJfmGWc/xWvFK6IVWHtv05Pm2fHvC5FgNFCoMOigdePpXAHCcT0wLUHIcr/QjHiyBSiiTyJBi74MA5DFPrOflFEwYuRSZn7aPkI51Df8iMXL5c/QUeb@FIDiTNbRq6DlEif6XOdRfDzVVek3K@ot1yCyZIT4PwgFiwBD/iP/O1bBiEceb5LKOlzg9lW5IIEEyMvQKRfoqgP0WBuZNnMiiJ3eOfPReBDiPlhgNTHeGou4wlSmxEyzOpObff1m723SOl0g1JPWX6ZuCOkLa2nB6QcnbxvtRc@CHF47TUD75LRxAviPlJG5@GHoO21bu1mdPn4sf/OPZlcPP09u55/@npjHcZXwzPnuKzm8oWCsvwPovMGx80ORnkD4R7vYgwu8cMnd0KiRAWCCzau5A1KEe5ihhk4UpGpQTCuXFZwHVMmVO/ziGPM@uGEMMh43wtc1N83GF14fZIdRA1uUIkHh5HwZLNY7HPu0MUJoUyKRM1O1GMrF6KOBJaEPg1EJJL9KelTIY69ZJxABCMZTIOtVmsxPwqQEhKSUxJROBAYq/40sGMvDNApsaXudg70pVFs2Q8dv1zucXsDCUgEjk8Xibuwn7rAB9N9VaXpMcIo5aCavUQNcMJqpcgwqI8ohNyRmYezfEhMTg3cB@uCMtc7T7P5156u6pYuzA8aRioZaxY6qiEtQcBLbFuQzpDYeJ3ZEg8CTRIuVk8/wOhX0CwoA7s6GClYhtIg3dGLxVxAU0cmJ3Qx5YFqskSzYH@6GVsZgFSVRAn0pIdIs36qy0tbEuWwleoDGDJ2wb9gmcUcEpSl16cQdbui8GX3Ey9JByVuRqofo6ooQ8BpmUXB4oZYIEPzEDPYDeBAiUrgslEY2NHjJO7pJWI1TFrWO2W4dmryXaUQH3cWs5U@0hfAhkVQHVZRw2TwPwUNYDcAw2O9lMtZbLWIeE7v9N00GswSTvFue3pZ94Fr@50KYogFsQcFbHBUJwwiUAAOB@JQH@oqgE3YZbqwlQk39IWZO1tmKovzjlc2ejxvsBEX@7LIydUo9w2yN7PC1wWaWu3xEXp3iaLpXRRPSN6o7FB23lFVr8evQViDtHlSDUYVq/LuktJiEVRdAD7BeQwnyOq0e5WEF2WO67vQaxIObNVu7AB@JGSlLNebVI8o5YU6n1GvDByv17ye1WjvV6GdCCeAC6BT6J18oQcJLESX4Afsg/jMuPhmc56ciKSeNeZ0VuZzlcz5DMoDz@7vPa@y@wagMTpKPGB17nts0yWQYUTvlvWDWXleh@AczFRYc7CWYC3AWpjXoQP9YPRJ@3iRyDBAhsfuy@WkTAAGyIAEzvoX3AatlNf1dc2W5/pnH4FXdF30NuGWkn5OipTpX@Ab6bDcQRuTGevdQs723Uk87IEn9SIUOJ3FLLt6cJTcZQDQhYRY4nAlt47YimYkOmt/3bZl81TEbSMGVZbL5NsB1hM3nk4C0SASKWXBwHKcTKoqvqO7OPvOiW@YPrLvbl4cON5jdlCQCGHGINK1kv731TuCi1CrwCsvNFt3zaSAXnYeOKQ5XMWsXQ2SdqVAM4@zGqEIfy/XpOvK7pIjungolxmw6XH4ESkjwnYEHI8a4pQdQeRgUzlKEWDzgrlQHQRQ2Y4dBOWIMriEkT3xRjFPFRVNynWdb1iDPjOBqVF@bvaic3JMhT2VPwjt8WOpE6i23YcS9@f@2Opiv68BCAD75gboj2eQtOYZcrUFEUJlhVjDr8kFXVxwQJOaqGoaenSxgTQlzbR6E9VsQJ9vNqq7r@lBsy463xrtveAFHpgG33RNF2ynAZsGYkZ4Zpru1s3wIG/U1U1b/hLCgKq5cXZIzrL2cXgHw3QdWsvZZudIYDnM1j1kTTsi2cyRA9fSKbmG3w14mPT9nwMD0qqMK8cV/xlnMeaABIOS7wZf4gEZU5lLLWgSrQb3WQsyaUrIMU8L7bjSqpiUfsMdQ33bwwfH5dpevbYrppS1GA90OCfvt2XfkrNKs3JT@UQXZxxrt3XUDmNRq9wv7gSzJgd8dgNi5ZSSTGe1N0l4dvfo3cS1HkRlbH7Dn2udnd1eHtPFDa/V1GZKnKCI7kz2EjqzBh2pyfmO6IIJEjx4Yi@YumwlopBgNxu1PYG4v/uGUnksdXiWngign/gnRJoqIDMRVnZObkqfNm20N5x/Tq62HRBtAK@3rsIjhOW@8pHK4guuN@De33OZ3BCEe/DFR3GNK60ek4uY9cTmPvm@V9Ue/7gZgMmGKLGZwLMrDPx5sQg6iXnokGBtUkewxcIMcRXk9aYlkTFbwXx6vnLADgoSYOSAxYb@M/JnZZxIhFtNU2yT/SlTK0mw9PDPxniDcP4vCPc3Cb@ulSIJaaZXqv4aMd7wxEDUy23PDxPwg5jEBxAygbIJd0RkNlHSjinw2AOUl62IyWLVEhW4DFWJiKtTIvfyN6mLlCZh4xJFxPNZlGxHQtLvMnlAz/KL2ysaVGuNAjcMBAOKKtAaxoHaqre2Iicb2BbH0guOoqON02rwe5orRLodVPblytNsydfRjTsJc@t8Ge/7B2Pdr/v6mNJNqdAV/0@ehZ/yLADPguQpWvz3d@3DsxOuaLeOpkXwL9BCTbU0BzYq/DOMudY1DNPWbjUFFYuv6mhNodkCos0NQ6IGQGSpQB5IRpoDFK@aH9pXJ@0rrijf09aI85IBXqbPbNR/tYak2M8w@9VLqicbqTZU8Z8Q/QBaO60PgVq/rTco/tvDuX2BxLsOxmhlGYk/1qgPyAwmFTMb3z7L4l1CXaKVujQPU1rXFHMLXWF4o4gez@V0pdpI/jVpKopDOBSjDBxOfjh8VtOpIbVd20IQM0wE8BCNPKfixt7QrYzs0bTyGH1ljhW7dNPM2v82M7Y8H6lBrZqZA0YQrbvY666EMV1TV56fTWrVrL2p7e28ru3BAwMeMuAVOegmg62VPMv@vZ/FYyzxk1iweMtl0xPOEMa8q4j1w8Ul5Fc2/YmS4cGo5ompg8Ejh9odeC2s/6zR7RZCXPHgnsIcKkewdAgfI9wNIDxAmwwIyXCQPDThrXFR2DU4N1PLIoSzfEJjIEqpVynY7uSNdOT/UQS8/qMBUqPv5j8"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221399","<h1><s>Pxem</s> <a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/hakatashi/esolang-box#pxem"" rel=""nofollow noreferrer"">esolang-box notation</a>), <s>162</s> <s>113</s> 109 bytes.</h1>
<p>Eventually as in <a href=""https://codegolf.meta.stackexchange.com/a/23467/100411"">meta discussion</a> I had to change the language. The following program equals to filename with same name and empty content in original notation.</p>
<pre><code>Be!?BzBc!!B+BzXXFBaBcFBzBsXXFBBaBsBtBvBmBvBcAcB-BaBsBp&quot;.e!?.z.c!!.+.zXXF.a.cF.z.sXXF..a.s.t.v.m.v.cAc.-.a.s.p
</code></pre>
<p><a href=""https://tio.run/##lRhrd9q48nt/hfDykLCNbAJ5IEQ2kKRLm9Jsku1NC26OY0xwYszDJiEh7l/fO5LNI@2ec@9@wJJG89ZoZsRDOPz7N1S57e@4xl5133WrdsUo39p7Zds92HP7ZWPPMQ9ujUHV3N0ZvAvdCOnunM1HdviADKNcZu5iMp5F6Kx1c3R2xlsMR88TF925kTMOBvm8XDnj0cgO@qRB@@4jDea@j8qNvJnPp8TnR1d/cCWLUzykT1YM5Nbr62TmBdEA5cJeL0BKVgAVkl2KUa3FyUSPlZUyf3Xa1zeXV8e8bBg7K@D558v29dnXm9bni4uT1hU3WRfpgtuyeXT5x82Xk4vL9udODdggK59fImnrGE3GobdgYqE2Wbym@fZPJO5o7tuRi8KhIBhPIpg9jWf9cOJ7EbN9zw6RfocK2aWpKtnflbjAC2IssM5fZ2etT8e8BiJwFwRgIbHPwqE3iKT0PhKYKcB1hmOU/Y0oiCMTWa@vOIPcR9tHSgYNbD90FULyeQEUiOGwPPb7jXyZMMlaAhevodtHhZAu6DNlIXxeaEEyfFkxlLQQAytiMMh/5AcHDM5p4vkuJnjADebYoQtsTQV5AcKDIkEDcC5zQ9thdjgSBzuGMz0KkP4Yzc3XaIb0VogKXUM/sAow9oKiVXi9m7kTVHq1nx5QoXnyvt1Ztro7OxaD76787olvRUIqVfE9gO9gPMPMq5d3madyU814KvY4r5JiWU72SXEHJj@UUrd6YIFXLrs@b3U9dbdqqWI82LOseAlQVbV41mDeAMNCL1ucV3bz@awhjGqRpa/zMjvDhCWhqOScXqBoataI45PO8RJ24sE8cCJvHCBYLIGPT5Ypsq@wp6FwmE9SCFLQZVfXfSvhh67juCAcU@ge6d@kU2z9BZwivKE/ojE4UXpfEasmL5S6T4vnFws90TEq2QUBbfGCY0dwUEBtNHCgcpogUZ3aNNVFKdmoWUEpufLagtvhRciMswZYj3BCYlv0UEG/g5KBCrS1a8L0cZH2qTArExBJY7A5D3QztSxozKXRcG99L3Dr3EglouZGyE86xYlKdirJlJ4EHsGGVElMUlYcYghR9lM2gBhTVo4KwVHCu4m36uWEEQvcRRSHRTBvMg6c8HEWWbSI7bpJVNpVM9mcnqzLhCwlLp3QpQ2xHXIzDusmg1@yMYTJEMyIaNGOlyHP0O7ATX3GbGGfd2NRlfrAr3OqgwBsNwwCoh2wuTsOQhANwKEA0hHVYduE2UqL2ExsWVmws22BUlieQ8waMlInXMxV3bTiSeYHxFiquU8FkojgCTq9ROH8NoxmOGtoO4SdQ8x5Fr@OzTrucJmW8ESztdNLkS9AxSWgYyWrAATZ3Y6lJawI67u@C5ktYRB36juAHgpJCcM150RRsSU5oe53ZKnA73rNaa1Dp1GGHCUsB7sh49BuNmfRfF7ILcIHLIPjWHCxZs88gYgLuqg/k4XKn3X8zBdwI7m4YCIR3MMdva8DGiOTxHq7ew8Xm207BLyJaU@lhwv1uQZncrjQYczAWIQxB2PuuQZJ8WebRXAmQgwQ4rHkKsOukAC3V6ZTM6Tfs9QdTaJnWlhlWIjvUjFL6TrHpfAEjbKI0e8@Ao9RKjKxcFmRnuM8YfQO1ojCcAuFIZTh691AAA/cWTQCZ0FCEvTh6lollxHAZJnA4ZYlkz6FUiNLyyCtGlB@RYYviKuFDVJ4fU3WfWA6c6P5LIDLVkj5Qx7o99fSdBreRutVhkLdW696Wdr3HtfLHB2NN4SlIv3P1SlW8gpACq8/6YPXPqRJBbjsPnCIdriHMlQVRRtqSk3QsmxIs2BbgUDkbMjWOdjFTbJ8UFUGLCwOHxE74viawK1ZF1DWVFWoBw9aM0WAyYoxaCx4E8LCmcPTehTOoDnBYX8r1Z/jYyK01D5iYvFjKU1VN/snUAoSX2Y@bpeID2s4AnjD3Ox83OwIZpuNqzcbQqC4@uvta3xBlhccsKQSup6eIbrY4MxxK02tWDfrrXy@VS9Xd8lhq6YoG6z3ghNcs3nwg5aoYDoP2DzgirJhmU7SbN8wDrNGTd@y4i8hCWhaG9AR/rQqQkc1RfskczsyZXZPwJl1ml8TTcDoJKYz4Eoyx9fw3WyPk0r7j3sBbmtT7VjzNyjLKQcc5nPfDe6iIZ4SGRJtaFfade6zNgTEHONjnibNqdbWTEJ@KLJVUQ6P1cp@rVIl8UaKBxqc4/dvJN/gT1pL@6Z9JctPXCnd1FBnHIm84965M4W1OKCzbyBUNi9M6lfZS86juk9uZ679IPJc64fyvdLdqVpZhSy/8UpFb6XEEiUGFLyfkJkVqCktzndEBUtwoH2OvGDuxsLxErdVr@wLtEZ1jxABTRTYiE64k6/8K8ItHZCZOEd2jr8Vv27Z52x5/RxfvbE93Nq73o74RziOe@0LkTkUXG6Q@j2XQQy@vwcnfBGXUGtbTA6iHROT@2R9r@sW/7Ll99mWHDGZQZ8@DvznfB70Ed3HEVZKsxqCqSIsEDEvry8pijDZPsKnzcUCbpBOACEDHDYYC/ynNk3kwcUlKbLJ/pThlARVCvyzPt3QPf8LusaUbQhf1irhhHSlVaL7Gi/a8sJQJLo3Lh8luw@ihR3CSQmMre2@OJFtjLTeCTT2AAlkfVKNey4TZlvkTRUSKRxPEcpeMUl3JDkoLjfhBDciZM0QEj7IUAHt1LeXVJSR9hoDbhLIAwxdYNWNQ71da28flawzb/gV3/ITlWeaXvkPaWhg6WhowXw58jQ4sjVkAPo6OqYN/3BK/ZpPp2/CQ5Sv/5NlboulZJcDdrkpcBO19@/TztGnEygmbuaw@dJ0Mpmm2ny5vj5t2k3nFCChmMMibEbNx@YIfs6R09QlZKKUgKz0UgKykloSZCW75JwCRJCVYBGWotJjaQQ/ICvpEjIpvGt97lyddK54oZAqAKr81EFLuCLbElGwczl6B232ivBX/HRH2fTiax7p0xANNjsr7PWe8@5nqicH6Q5Ugne/Ev26ldBsg9ZnNYDoWGu7xeTfvj/hNdS5EM1i1oAuTvx7oD8gM5hp5qp3@14qoh4uFXskC61azxTtDImFR8I@l42W7iD5d8dcpJ3xSPQ3AJz9Atzo1q8gvVN5gwD3fhLC/hhNvL7mRt7I1SbOZK49hi@sb0cu2bat8j9si2zPR3pQKa@sAP1xqbfc78XCjp5Jmeyi9LJZ2avs7@xW9lVoiDKiI1J7PWjYbh2w8F96UzzLhE/CvniYQT@1fq1NeU8@XT9fXPLVo18kHQ96NE@0JvCoV4nThedCmBwqVnq93FjRPGjPMvI5GqZ9@BRdXMJzzUh7iaSRSBqKuHORqxqcm@mzMkTKKkTQFGgEaZzuOd2sYa0eotu8RYc/RHr4938B"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# represents programs from first .m
# every dot has to be replaced with B, for example,
# because dots are syntaxically special
# append &quot; to it
.aXX(long)&quot;.z
# essentially double entire stack
.a.eXX.z
# loop begin
.a!?.zXX.z
  # move every character to bottom
  # HOWEVER B is replaced with DOT
  # when exiting from loop, the stack will be:
  # &quot;(original data)&quot;(modified data)
  #
  # push dummy F if B is not top
  .a.c!!.+.zXXF.aXX.z
  # replace B with dot, and push F if F is not top
  .a.cF.z.sXXF..aXX.z
  # remove dummy
  .a.sXX.z
  # move to bottom
  .a.t.v.m.vXX.z
# get out if &quot;
.a.cAc.-.aXX.z
# finally; discard top
.a.s.p
</code></pre>
<h2>Previous version</h2>
<ul>
<li>113 bytes: <code>Bm!?BzBcBoBc!!B+BzXXFBaBcFBzBsXXFBBaBsBtBvBmBvBcAcB-BaBp&quot;.m!?.z.c.o.c!!.+.zXXF.a.cF.z.sXXF..a.s.t.v.m.v.cAc.-.a.p</code>
<ul>
<li><a href=""https://tio.run/##lRhrd9q48nt/hfDysPBDNoE8ECIbSNKlTWk2yfamBTfHMSY4MTZgk5AQ96/vHcnmkXbPuXc/YEmjeWs0M@IhGv39G6reDnZcY6@277o1u2pUbu29iu0e7LmDirHnmAe3xrBm7u4M30VujDR3TudjO3pAhlGpUHcxCWcxOmvfHJ2dsTaV4@eJi@7c2AmDYbEoVk44HtvBADfJwH0kwdz3UaVZNIvFjPj86OoPJuXlDA9pkxUDsfX6Opl5QTxEhajfD5CU50AJ55d8VOpJOtESaaXMX93O9c3l1TGrGMbOCnj@@bJzffb1pv354uKkfcVM2kMa57ZsHV3@cfPl5OKy87lbBzbIKhaXSNgaokkYeQvKF0qLJmuab/9E4o7nvh27KBpxgnASw@wpnA2iie/F1PY9O0LaHSrll6Yi5X@XkhIr8bFEu3@dnbU/HbM6iJB7IEDmEgc0GnnDWEgfII6ZAVxnFKL8b1hCDJnIen2Vc8h9tH0k5dDQ9iNXwrhY5ECOGI0qoT9oFiuYCtYCuHiN3AEqRWRBngmN4PNCSoLhy4qhoIUYWBGDQf4jOzigcE4Tz3dlLA@ZQR07coGtKSEvQPKwjNEQnEvdyHaoHY35wYZwpkcB0h7jufkaz5DWjlCpZ2gHVgnGflC2Sq93M3eC9Ff76QGVWifvO91lu7ezY1H47orvHv9WBaRa498D@A7DmUy9RmWXegozlZynyB5jNVyuiMk@Lu/A5Iek92oHFnjlsuezds9TdmuWwseDPctKlgBVFIvlDeoNZVhoFYux6m6xmDe4UW289DVWoWcypmkoSgWnH0iqkjeS5KR7vISdZDgPnNgLAwSLJfDx8TJD9iX6NOIO83EGQRK67Gmab6X80HWSlLhjSr0j7Ztwiq29gFO4N7RHFIIThfclvmqxkt57Wjy/WOiJhEi3SxzaZiXHjuGggNpoyoHCSIpENGKTTBdJt1GrijJy6bUNt8OLkZnkDbAeySmJbZFDCf0OSgYK0NavMdXCMhkQblYuwILGoHMWaGZmWdCcC6Ph3vpe4DaYkUlErY2Qn3RKUpXsTJIpPAk8gg2plJokrTgkEKL0p2wAMSatHBWBo7h3U281KikjGriLOInKYN4kDJzocRZbpCzbDRMrpKfk8gUtXVcwXgpcMiFLG2I7YmYSNUwKv3RjBJMRmBGTsp0sI5YjvaGb@Yza3D7vxiIK8YFf91QDAbLdNDCIdsDmXhhEIBqAIw4kY6LBtgmzlRaJmdqysmBn2wKptDyHmDVEpE4YnyuaaSWT3A@IsUxzn3AkHsETdHqJovltFM/kvKHuYHoOMedZ7DoxG3KXibQkT1RbPb3k@QJUXAK6LOUlgCC717XUlBWmA9d3IbOlDJJuYwfQIy4pZbjmnCrKtwQn1PuOLAX4Xa85rXXoNiuQo7jlYDdkHNLLFyxSLHK5ZfiAZXAcC8bX9JmlEH5BF41nvFDYsyY/swXcSMYvGE8E93BH7xuARvEktd7u3cPFptsOAW/KpK@Qw4XyXIczOVxoMOZgLMNYgLHwXIek@LPNPDhTIQYI8Wh6lWGXS4DbK9KpGZHveeKOJ/EzKa0yLMS3Xs4Tss5xGTxFIzSm5LuPwGOE8EzMXVYm53IRU3IHa0RguIXCEInw9W4ggIfuLB6DsyAhcfpoda3SywhgvEzhcMvSyYBAqRGlZZhVDSi/PMOX@NWSDVx6fU3XA2A6c@P5LIDLVsr4Qx4YDNbSNBLdxutVjkDdW6/6eTLwHtfLAhmHG0K9TP5zdSpLRQkgpdef9JHXPiRpBbjsPTCIdriHIlQlSR2pUp3T0nxE8mBbCUPkbMjWOdiVW3j5oCgUWFgMPjx2@PG1gFurwaG0pShQDx7UVoYAkxVj0JjzxphGM4dl9SiaQXMiR4OtVH8uH2OupfpRxhY7FtIUZbN/AqUg9WXu43aJ@LCGI4A3zc3Ox80OZ7bZuHqzwQXyq7/evpYv8PKCAZZQQtOyM0QXG5y53M5Sq6yZjXax2G5Uarv4sF2XpA3We84Jrtk8@EF0wpnOAzoPmCRtWGaTLNs3jcO8Ude2rPiLSwKa9gZ0JH9aFaGjuqR@ErkdmSK7p@DcOs2viSZgdBrTOXAlnsvX8N1sh2ml/ce9QO6oU/VY9TcoyykDHOoz3w3u4pE8xSIkOtCudBrMpx0IiLksH7MsaU7Vjmpi/EMSrYp0eKxU9@vVGk42UjzQ4Fx@/0byjfxJbavf1K94@YlJ@k0ddcOY5x33zp1JtM0AnX4DoaJ5oUK/6l56HrV9fDtz7Qee59o/pO/V3k7Nykt4@Y1Vq1o7IxYoCaDI@ymZWYWa0mZsh1ewFAfa59gL5m7CHS9w243qPkdr1vYw5tBUgY3olDv@yr4iua0BMuXnSM/lb@WvW/Y5W14/l6/e2B5t7V1vR/wjHMe9@gWLHAouN3DjnokgBt/fgxO@8EuodiwqBt6O8cl9ur7XNIt92fL7bEsOn8ygTw8D/7lYBH1493EkS/qsjmAqcQt4zIvri8s8TLaP8GlzsYAbpBNAyAGHDcZC/lOdpvLg4uIM2aR/inBKgyoD/tmYbuie/wVdc0o3hC9rleSUdKVVqvsaL97ywognujcuH6e7D7yFHcFJcYyt7QE/kW2MrN5xNPoACWR9Us17JhJmh@dNBRIpHE8Zyl45TXc4PSgmNuEENyJEzeASPohQAe2Ut5eUl5HOGgNuEsgDDI1jNYxDrVPvbB@VqDNv@JXf8uOVZ5pd@Q9ZaMjC0dCC@WJkWXDk68gA9HV0TJv@4ZT4dZ9M34QHL1//J8vCFkvBrgDsClPgxmvv36fdo08nUEzGucPWS8tphS0nl2sprZfr69OW3XJOARrxOSyiVtx6bI3h5xw5LQ0gE0kHQv1Fd/RQB0Jd0TmhbuvOKUA5oQ6LSI/1R30MPyDUNYBMSu/an7tXJ90rViplSoA6P3XRAi6J1oQX7UKB3EGrvSL8FT/bkTb9@JpH9jxEw83OCnu957z7merJQZoD1eDdr0S/bqU026D1eQ0hQtbabjH5t29QeBF1L3jDmDegk@P/IGgPyAxmqrnq377rZdSX9XIf56Fd65u8pcEJ90g0YKLZ0hwk/vKY89QTjnmPA8DZL8CNboMq0rrVNwhw9ycR7Ido4g1UN/bGrjpxJnP1MXqhAzt28bZt1f9hW2x7PtKCamVlBegv6/3lfj/hdvRNQkUnpVXM6l51f2e3uq9AU5TjXZHS70PTduuAhf/Sm/xpxn0SDfjjDHqq9Yttyvri@fr54pKtHv488XjQp3m8PYGHvYKdHjwZovRQZanfL4SS6kGLlhNP0ijrxafo4hKebEbWT6TNRNpUJN2LQs1gzMyelhGSViGCpkDDSZNsz@nlDWv1GN3mzbv8EdKiv/8L"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></li>
</ul>
</li>
<li>162 bytes: <code>XXx\è\ô\Ú\î\Ú\Þ\Ú\Þ\Ú@\V\Þ``\Z\Â\Æ\Æ\Þ\è\ì\Ú\ì``\Z\è¢\Â\ì\æ\ì°\î\Æ\Æ\ô\È\Â\H\Þ°\ÂQ.t.z.m.w.m.o.m.o.m .+.o00.-.a.c.c.o.t.v.m.v00.-.tQ.a.v.s.vX.w.c.c.z.d.a.$.oX.a</code>
<ul>
<li><a href=""https://tio.run/##nRhrVyK58vv8ipBFSIB@Ab6I0VV0dtlVxlF31hlgPW3TDK1tN9INosD89bmVpJuH4727e48Hk1Qq9U5Vpbt21P/@E9py3e3tTbe33du2KxXHrpZve7t213Sd3q6zWam4t7u97Vu7@y5yY6S5IzZ6sKN7ZJrlMnMng3AYo9P6zeHpKa8zEj8PXPTVjZ0w6OVycuWEDw920KX7RtcdG8HI91F5P2flcsnh88OrXznOkgQPaYOUgNyi2akYirW5mmhznLL9o9m4vrm8OuZl06ykwPMPl43r08839Q8XFyf1K26xFtIChLPTo8PLX28@nVxcNj40a0AGdXK5KZJahWgQRt6EiUXxiM0XZ768dcR9GPl27KKoLw6EgxhmT@GwGw18L2a279kR0r6ifHZqFXH2ZzzP87wY86z5x@lp/eyY1yQLUFow7LKo7/ViybyLBGICcJ1@iLI/UYw4sgRrIiFR3wUbxmGIQr@7nxNe8GJkUeaObR/hDOrZfuTi2ewNdLSKLyWQOJNZ5HZRPjImxrPBIvj3YuQl3xfUmc1AZUkJcH5gC5qABfwx391l4MKB57uEkh43mWNHLnCwMPICRHoFinrgDeZGtsPsKHIfbv1n4fgQfH4YIG0cj6xZPERaPUKmVa5UN7e2d3ZRvtUOCp387OvQHSB9Zj/do/zRyS@N5tQHJl1e3WJgXTIYekHcQ/nBefghaHqNG6ceXY4/9d67J8OLpz8n18@fX77Yh/HVw1n3uKhlshsb@dn/wTprclxvYZQ1Ee7wNsZgEj98cockUiIQvOHgUtakFOE2ZpiBIfMyNAjGpcsSrmHKhOg9HnGMWS8cEgYR73uBi3r7JqNTr0dSQLTHTSrxABgJS9ZzuR7nXTo9IZRJlqjeijps7oLXkcCSu0994Qk1PyU9Ktix14TVjiAknWmy@XzB5kcGkoM6ckoiCgCBMe@NAif2wgCdEkfK7mRAXhrFtnPf8ovFDndWkOCIwPHpVJkL@4kJfFDd1zSagBFGCQXN6igxwAjzeV66QRujEGJHRh5O40GpnCi4D9oFRW60nibPLx1DM2xDqB/smQlnrNvoqIp0hYBn2LEhnCGw8SKyJR44migqdsc4wOhnkCwoArkaKClIhlIho2vkcpmAJoZUEDod8UCzmJIs2B@t@lY6IBFFCYGejBDp9puyvNZFCYftRB7AkL4L/gXJ1OcQoCy5PhtRuy0SX3o/8Yy0kDIz0vwYlUUaAkqz1As2N8UAEZoFn8GsD4B8VACTDcLAicbDuGMUiL1n0aLRKsK109S6TME/7iRmc2NgTIEMiyA7zKM9i8Ev2erDrA@Kx0Yhk7HZfBrxjNHquYk3mC2M4t10jKLhA9Xmew3YEBt8DwI4YKhWGEQgAAD7Amg8GBpsWzBLZWFzC27oKzUra2rmp@ctr2h2eBb8WiyyAYe1VoYbMfgG4ZvLAfOpAvEBkpE7uo3iIcmapQplXdd3oVqctzTN6zClGBz8y0etv1CnKM47xhSOECwBWVzCOZTDJUXybwlkBYXImHoaL7/C/S8n/eSE5IkWTP8xx6XgqRUh9MHj2Q0xA0SCzBkyFRrNYjoNhe0gdQ7YhGeb7xl65lnlLrYixKooAyrwQ3GRJnvPdFLkzxp55hPKFpZ@fwmJKiZGu2gcTIrPNfD3wUSDMQNjAcYNGDeea1DU3lbppHk8FbnnDqLvbs9jd8WiSj@AdtcRFyOti3DL9ELWMBa1QMINMAhY0TBEzRSyF4xzkqPM@AprZMBwC@VR3gTvBu5Czx3GDx2wvJGDxGmwmKVXGkAqR8AGncodWwDnctoVU1HkRMXuLdoBWZTz4hYTk@ZnM7XuAumhG4@GgSg8iktRELC73ZSrJtbRbZyuM2INXU26bmcFoOuNU8CGRAhTApGhF4w/r94TnIMcCFZ5JdmiGqvEfNm653B94IqnZbCvymAemoQ4zT15Ye/Z4uiiYrjkiE7v4d4BmQ6Hf6IgCLcdAcWjPQFlR@A5mJSOEgSYvCIuRAcGVJb5LoI0Rxlc7sgZeoOYJ4KK4ue63W9Yh/o1hG5ULldr3Dk5pkKf0u@EdvixlAlEW69vyvyZ39eq42@LDQQb@9bK1u/LLanNcudqbUcwFcov96/JBZ1ecECTkmha4np0sYI0IvWkKhDN2oP@ob5X3tyiB/WaqKgLtF8ELbDAKPhm6IYgOwrYKBC9x5JoMlsU2YOsWdNWdflDMINT9RXYITlLy9LhLTTpNUiRZ6sVSe1lMFvUpsXZAUl7mQyYlo7INfxf2Q9VP/H2ZkAapcfScclf4kwfOSBBA@a7wde4Tx6pjKUGFJ/GHvdZAyJpRMgxT3L4Y6lRsij9hlumttvBB8fF6k6tuim6nwUbD2Q4J7@s874hZ6V66UvpM52ecazf1FAzjEXCcr@6Q8zqHPDZF2Arux/V9VW3lXs2d@jt0LXvRfarQ96ttiqbHZFHv/BqVasnhxWKqPpkR52zqlDp6pxXRHVVSPCQir1g5LK58ILCru9VdwTi/uY2pRIsZVhyVwzoZ/4ZkboGyEy4lZ2TL4XPqzo6K8Y/J1frBohWNq/XrsIY3HJX@kRl8gXTm3Dv77gMbnDCHdjik7jGpUaHyUH0kGJyp9Z3mtbhn1YdMFxhJSZDeM6Fgf@cy4FMos86JFgf1hBMsVBDXAV5vWlBRMyaM5@WVw7IQUICjAyQWJF/Qj6WHhVHuNU0wbbYRxlaKsAS4Me9x5WDz//i4P7qwZeFUEQdTeVKxF8gxiuW6It8uW75B7V9Lzr8PrhMoKzud4VnVlGSsinw2D2klzWPyWTVEBm4CFmJiKtTIHfyv8qLlCq3cYki/LlkJcuR4PSbDB6Qs/jq9ooC1VigwA0DxoCiCbQ980Br1BprnpMFbI1i4RVFUdEek2zwWxIrRJodRPblyJNoydbQF3cYZhbx8rjvHzwafs03Hild5QpV8R/S3HiT5gbQ3JA0RYn//r55eHbC89fXk7ZVqbYrm6Yat6pqrJQT@Nb6uvI/1qaiYZW3lntVU/0EPD1jpuPW@pjSSmXZfC1L9W16gF@uvqKdnq1uLdblLXNdp9f8U90tc0HLNBXMSmEg44KOWf6ox/qL/qA/wS9UP6QX9dA0dU23dQf@QkAZw9ZYwuKPAB7rkT6@hkNi/0Xv6jbwKetZPbzW7fy7@ofm1Unzin9Pmgqclc7Cs@TDB@q9W99pBxjq2xKYEFgecN69JvXkIM15@9APW4sY7EHcLz6BrJz4/75vNC/kIwY69vwsEt/UtHtkBcOSlXbDf8laWEBtohfaNAtNb9sSbSCdY3hKipaJy2ZVc5D86DcSuTZ8EJ0hAIc/AJdidqtIa1bXEERLGMF@iAZet@TG3oNbGjiDUWkcvbCuHbt0Vc3q36sZ256PtKBaTtUBJYjenu6050KZtmXkl69brWxVt6s7EIE78A6E9yZYRb4b1DvBVq/nf29n8WZWdhIDFk/utBnFKcIjb@fF@OHikufzaTMtMrAHna8nmjjxHqVOy@vwxdendnsjxCUP0h609bKjTd40jwhDPMIz20z6LdVrqe8BbN682Ng0ObcSzSKE03hCj3AoOT1Ptp1W1uwoS/zIYg5x00da9P0/"" rel=""nofollow noreferrer"">Try it online!</a></li>
</ul>
</li>
</ul>
","","user100411"
"221403","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/GH-TpaeFawzen/pxem.posixism/blob/6ee775ef7f7a33ca42bf9ad0ecf9c533eb9f7bad/pxemi.2.min.posixism"" rel=""nofollow noreferrer"">pxemi.2.min.posixism</a>), Filename: 14 bytes + Content: 0 bytes = 14 bytes.</h1>
<ul>
<li>Filename (has trailing LF!): <code>.a B4 .[wxyz]</code></li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##nRhrW9rI@nt/xTAbyAwQExCrMoyuot1lV6mrbrcVqE9MQonGBEhQKNC/3vPOJIFgPc9ePkjm8t7vo22Gg@8/obeOs7u74/R3@7vm9rZl1qp3/X3TNhyrv2/tbG87d/v93TvTfhM6EdKcCZs8muEDMoxqlTnTYTCO0Fnz9ujsjDcZiWZDB31xIivw@4WC3FnB46Pp2/RAt50n3Z94HqoeFCqFQoJ8cXT9K8cKSeCQNkwJyCuqzMWnVF/GC22JU7Z/tlsfb6@uT3jVMLbTw4v3V62PZ59um@8vL0@b17zCOkjzEVbmx0dXv95@OL28ar1v14EM6hUKcyS1CtAwCN0pE5vSMVuucG5eQ3EeJ54ZOSgcCIRgGMHqORjb4dBzI2Z6rhki7QtSlXmlhJWf8VLlqviqrP3n2Vnz/ITXJQtQWjC0WThw@5FkbiMBmBw41iBAyk8UI44qgjWRJ@HAARtGQYACzz4oCC@4EapQ5jyZHsI51De90MGLxSvgKAsvJZAw00Xo2EgN9ak@01kIP191VfL9inqLBagsKQHMD2xBE7CA98T39xm4cOh6DqGkzw1mmaEDHCoYuT4i/SJFffAGc0LTYmYYOo933kw4PgCfH/lIe4omlUU0RlozREalul3bebu7t4/UTtcv9tTFl7EzRFsL8/kBqcenv7Tacw@Y2Lz2loF1yXDs@lEfqcOL4L3fdlu3VjO8evrQf@ecji@f/5p@nH36emMeRdeP5/ZJScsp@by6@A@sFYPjZgcjxUC4x7sYg0m84NkZkzAWgeC8hcuKQSnCXcwwA0OqMjQIxuWrMq5jyoTofR5yjFk/GBMGEe@5voP6Bwajc7dP0oOwwQ0q4eAwFJZsFgp9zm06PyWUSZao2Ql7bOmA15GAkrfPA@GJeH1G@lSwYy8JxzeCkHSmwZbLFZsfGUgOMcoZCSkcCIhlf@JbkRv46IxYUnYrB/LSMDKth45XKvW4lQECFAHj0XlsLuwlJvBAdU/TaHKMMEooaJVeLAYYYblUpRu0JxRA7MjIw2k8xConCh6Adn6J653n6exrT9d0Uxfq@w0j4Yy3THRcQ1sxAF5gy4RwhsDGq8iWcOBoElMxe/ohRj@DZH4JyNVBSUEykArptl4o5HyaGDI@ofMJ97UKiyXzDyZZ30oHJKLEQqBnPUBb5quyvNQlFg6biTwAIX3n/wuSqc8hQFmSPvmw2xWFL81PvCAdFJsZaV6EqqIMAaVF6gWTG@IDEaqAz2A1gAM1LILJhoFvhU/jqKcXidmo0JLeKUHaafG@SsE/zjRiS32oz4EMC6E6LMNGhcFfcjWA1QAUj/RiLmey5TzkOb3TdxJvMFMYxb3t6SXdA6rtdxqwISb4HgSwwFCdwA9BADgciEP9UdfgugKrVBa2rECGvlBze0NNdX7RcUtGjyvg11KJDTnstSpkxPAbhG@hAMzn8REfIhm5k7swGhPFKG9TZjueA93ioqNpbo/FigHiZw91PqNeSeBb@hxQCJYHCi7jAirgckzybwkogkKoz12NV1/A/h9ML8GQPNGK6T/muBY8tSKEPnhcyYsVABJkLJARg1EF03kgbAelc8imXGm/Y2jGldhdLCNEVpQhFfCBSKRpY0anJT7TyIxPKVtZ@t0VFKqI6N2Sfjgtzerg78OpBt8cfIvwzcM3P6tDU3tdpdP2yVzUnnuIvvuGy@5Lpbj8ANh9TyRG2hchy7aKiq6veoE818EgYEVdFz1TyF7UL0iBMv0L7JEOnztojzIT3FvIhb4zjh57YHm9AIVTZxFLUxqO4hoBF3Qub0xxuJRLWyxFkxMdu78aB2RTVkUWE4Oqi0W8t4H02IkmY180nphLSRAwbTvlqol9eBel@5zYw1ST7ruKOLDdp/QgLwGClECobxX1v67fEVyAGghWeSHZqhvHhfmq88AhfSDF0zY4iNugCkNClNYeVdh7sUJddQyHHNP5A@QdkOlx@BENQbjtGCgeN8QpOwbPwaJ8nADA4gVxITowoLLN2wjKHGWQ3KE1docRTwQVzc9x7G94C/rXGKZRuc32uAtyQoU@5d8J7fETKROIttnfYvPnft/ojr@tLhBcHFQyV7@vr6Q265vrjRvBVCi/vv9ILun8kgOYlETTEtejywzQhDSTrkC0SgPmh2ajuvOWHjbroqOuwH4RtMACE/@bvqULshOfTXwxe6yJJqtVkz1UjLqW1eVPwQywmpmzI3KetqWjOxjS61Aiz7MdKb7LYbbqTSvcIUlnmRyYlk7IR/jN3AfxPPH6pU9a5VH5pOytYeYjDkAwgHmO/yUakBGVsdSC5tNqcI@1IJImhJzwpIaPyq1yhdJvuGNo@z18eFKq7dVrO2L6WbFxQYYL8ssm71tyXm6Wb8qf6Pyc463bOmoHkShYzhdnjFmTAzy7AbZy@omnvtpu7J6dPXo3dswHUf2aUHdrne2dnqijN7xW05oJcgwiuj7Zi/EqNeh0Tc63RXeNgeAhFbn@xGFL4YUYutmo7QnAg51dSuWxlGHNPWZAP/FPiDQ1AGbCreyC3BQ/ZXW0Msa/INebBggzlx83UuEJ3HJf/kBl8QXTG5D391wGNzjhHmzxQaRxudVj8iNmSLG4j/f3mtbjH7IOGGdYicUYnnOB780KBZBJzFlHBG@N6wiWWKghUkGmNy2KiNlw5vM65YAcFCSAyAGJjPxT8kd5FHOErKYJdIX9IUMrDrDk8I/GKIM4@xeIB1nEryuhSIyaypWIvwKMMpYYiHq5afnH@PpBTPgDcJkAyd7bwjNZkKRtCjj2AOVlw2OyWLVEBS5BVSIidYrkXv7GdZHS2G1cggh/rlnJdiQ4/SaDB@Qsvche0aBaKxDIMGAMIJoAaxiHWqve2vCcbGAbFIsvKIqONkqqwW9JrBBpdhDZk1@eRItSRzfOOMit4mV04B2OdK/u6SNKs1yhK/5DmvlXaeaBZl7SFC3@@7v20fkpVzdeJ2/UN8337evT9jX/njQ0rEhAvEge3aj/ZvOm62OorevDhMAawXrzktSzhTTrdaQfrlb698Hmq@d3BuO/va3bl3KAhmlRXYTi/znaA6r443IlncQ@yzpcRF2yVexSBQaubkWMIHSJ4Rkj2jWXg5JmIfkPp4nI8@BRTCVwOP7hcC2mXUNau7YBIMaREO4DNHTtshO5j055aA0n5afwK7PNyKFZNWt/r2Zkuh7S/Fo1VQeUIFvd@V53KZTpVnR1/bLSqpXabm1v@21tD94g8NYBq8iZNZ5Rzfjl9u/tLN5rsZ3EB4vnXjoI4RRgxLuq@L6/vOKqmg5yIvtdmLpcMUCItxC1Om6Pr/7z0e3mA1x2IeVgpJTTVDJPjxCGeIQnnpH0@rjPx29Rtmxf5ncMziuJZiHCaTyhESAl2Mvk2uooRi@2xI8slhA3A6SF3/8H"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"221412","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 29 bytes (Filename) + 0 bytes (Content) = 29 bytes, syntaxically not valid.</h1>
<ul>
<li>Filename (escaped some): <code>.w.o.i.c\001.+.a.d.p.a.+.\001c.i.w.</code>
<ul>
<li>Reversed: <code>.w.i.c\001.+.a.p.d.a.+.\001c.i.o.w.</code></li>
</ul>
</li>
<li>Content: empty</li>
</ul>
<h2>How it works</h2>
<h3>Original</h3>
<p><a href=""https://codegolf.stackexchange.com/questions/62230/simple-cat-program/221388#221388"">As in this</a>, except with <code>.d</code>: exiting/returning command. Since pxemi.2.min.posixism automatically removes deadcode, the code after that will be ignored, even <code>.a</code> comes before <code>.w</code> (which is syntax error).</p>
<h3>Reversed</h3>
<p>Since Pxem is stack-oriented, not outputting any characters until EOF would produce input reversed. Then <code>.p</code> outputs from top to bottom, which is in reverse order compared from original input.</p>
<h2>TIO links</h2>
<ul>
<li><a href=""https://tio.run/##nRjvW9pI83v/imUPyC4hJEFsLcvqKdoed0o99XpWoD4xCSUaEiBBoUD/9d7sJkGwfZ73vfsg2Z2Znd87M6tjRYPvv6C9N8aO9daoGXc1@21tz959bVedmrlnvzEto9p3rD27X9u1zVe/oNHMHXqVamXoBZVRGHkzLxq@itwYae6UTYdW9IAMo1pl7mwUTmJ02rw9PD3lTUbi@chFX9zYDoN@sSh3djgcWoFD93XHfdSDqe@j6n7RLBbTw@eHV79xnCcpHdJGGQOJovmF@Kj1VbLQVjgT@1e7dX17eXXMq4axkwHPP1y2rk8/3TY/XFycNK@4yTpICxDOL44OL3@7/Xhycdn60K4DG9QrFhdIWhUiaSUTG/WIrdZnbn52xB1OfSt2UTQQB8JRDKuncOJEI9@LmeV7VoS0L0jJL0wV53/FK4Ur4quw9l@np82zY16XIsBoIdBh0cDrx1K4gwRhCnDtQYjyv1CMODKFaCIh0cAFH8ZhiELf2S@KKHgxMilzHy0f4RzqW37k4uXyJ@Rok15qIGlmy8h1kBLpM32uswh@vuqKlPsV9ZZLMFlyApofxIIl4AH/kb99yyCEI893CSV9bjDbilyQYGLkBYj0SxT1IRrMjSybWVHkDu/8uQh8CDE/DJD2GE/NZTxBWjNChlndqe2@frP3FimdblDqKcsvE3eEKkvr6QEpRyfvW@2FD0IcXnvNwLtkNPGCuI@U0Xn4IWh7rVu7GV0@fuy/c08mF09/z67nn77eWIfx1fDMOVa1XL5QUJb/QXTe4LjZwShvINzjXYzBJX745E5IlKhAcMHG5bxBKcJdzDADRyoyNQjG5csyrmPKhOp9HnGMWT@cEAYZ73uBi/r7BqMLr08yQNTgBpV0AIyEJ5vFYp9zhy5OCGVSJGp2oh5buRB1JKgk9mkgIpGsT0mfCnHsJeMEIxjJYBpstVqL@VGAlJAcOSURBYCgWPWngR17YYBOiS11t3OgL41iy37o@Kra4/YGERwRND5dJO7CfuoCH0z3NY2mYIRRykEze4ka4ITVSpFh0B5RCLkjMw9n@ZCYnBq4D9YFKtc7T7P5156u6ZYuzA8aRioZVyx0VEOVhAAvsW1BOkNi43VmSzoINEm4WD39AKNfQbNABXZ1MFKwDKVBuqMXi7mApo5MIHQx5YFmskSzYH@6GVsZgFSVRAn0pIeoYv1Ul5e2JMphK9UHKGTsgn/BMos5JChLr08h6nZF4cvuJ16SDkrcjDQ/RlVRhoDTMouCxQ3xgQzNQ8xgNQCAEpXAZaMwsKPHSdzTS8RqmFTVOypcOy3ZVynEx53FbKWP9AWwYRFUh1XUMBn8pagBrAZgeKyXcjmLrRYRz@mdvptGg1nCKd5tT1d1H7i232kghlgQe1DABkd1wiACBQA4EEB9qGuANmGV6cJWJtzQF2bubJmpLM47nmr0eN5gIy7WqsjJ1Sj3DbI3s8LXBZlW7fEReneJouldFE9I3ijvUHbe0TSvx69BWIO0eVINRmWr/O6S0mIRVF0APcF5DBBkddq9csKLMsf1Xeg1CQe2ajd2gD4SslKW60WqR5TyQp3PqKcCx@s1r2c12vtVaCfCCeAC6BR6J1/oQQIL0SX4AfsgPjMu9mzOE4hI6lljTmcqn2tkzmdQHnh2f@95ld03gIzRUeIBq3PfY5sugQwjelfVD2bqvA7BOZhp8M3BtwTfAnwL8zp0oB@MPmkfLxIZBsjw2L2qJmUCKEAGJHDWv@A2VEp5XV/XbAnXP/sIvKLrorcJt5T0c1KkTP8Ce6TD5w7amMxY7xZytu9O4mEPPKkXocDpLGbZ1QNQcpcBQRcSYwngSi4dsRTNSHTW/rpty@apiNtGDKosl8neAdYTN55OAtEgEimqYGA5TiZVE/voLs72ObGH6SPbd/MC4HiPGaAgCcKMQaRXSvrfV@8ILkKtAq@80GzdNZMCetl54JDmcBWzdjVI2pUCzTzOaoQi/L1cH11Xdpcc0cWDqjJg0@PwI1JGhO0IOB41BJQdQeRgUT5KCWDxgrlQHQRQ2Y4dBOWIMriEkT3xRjFPFRVNynWdb7gCfWYCU6Pcbvaic3JMhT3lPwjt8WOpE6i23YcS9@f@2Opiv68RCBD75gbqj2eUtOYZc7WFEUJlhVjjr8kFXVxwIJOaaFoaenSxQTQlzbR6E81sQJ9vNqq7r@lBsy4635rsveAFHpgG3/SKLthOAzYNxIzwzDRdrZvhQd6oa5u2/CWEwanmBuyQnGXt4/AOhuk6tJazzc6R4HKYrXvI@uyIZDNHDlxLp@QafjfwYdL3f44MSKs8Lh@X/WeaxZgDEQxKvht8iQdkTGUutaBJtBrcZy3IpCkhxzwttONyq2xS@g13DO1tDx8cq7W9em1XTClrMR7ocE7eb8u@JWflZvmm/Ikuzjiu3NZRO4xFrXK/uBPMmhzo2Q2IlVNKMp3V3iTh2d2jdxPXehCVsfkNf651dnZ7eUwXN7xW05rp4YREdGeyl5wza9CRmpzviC6YEMGDJ/aCqctWIgoJdbNR2xOE@7tvKJVgqcOz9EQA/cQ/IdLUgJiJsLJzclP6tGmjveH8c3K17YBoA3m9dRUeISz35Y9UFl9wvQH3/p7L5IYg3IMvPoprXG71mPyIWU8s7pP9vab1@MfNAEw2RInFBJ5dYeDPi0XQScxDhwRXJnUESyzMEFdBXm9aEhmzFcyn5ysH7KAgAUUOWGzoPyN/lseJRLjVNKU22Z8ytZIES4F/NsYbB@f/4uD@5sGva6VIcjTTK1V/TRhveGIg6uW254cJ@kFM4gMImSDZxDsiMpskaccUdOwBystWxGSxaokKrEJVIuLqlMi9/E3qIqVJ2LgkEfF8FiXbkZD0u0we0FN9cXtFg2qtSeCGgWAg0QRZwzjQWvXWVuRkA9viWHrBUXS0cVoNfk9zhUi3g8q@/PI0W/J1dONOwtw6X8b7/sFY9@u@PqZ0Uyp0xf@TZ@GnPAvAsyB5ihb//V378OyEK5WnSljxKnbXMMyKWrEqTmUEv2pFAGzAPFWUV80P7auT9hVXlO9pn8N5eR4v0zcz6r9aY1LqZ5z96uWpJxtpNpTknxz6AbX2QB@8vn4ob5z4b6/g9gUSjzSYiZVlJP7zoj0gM5iUzWwW@ywrcQl1SaXUpXkYubqmGELoCsODQzRsLkclzUbyX0NTcdPDoZhLADj5AfisplNDWru2RSAGkgjwIRp5TtmNvaFbHtmjafkx@socK3bpppm1/21mbHk@0oJaNTMHjCCV7mKvuxLGdE1deX4DaVWz9qa2t/O6tgevBXiVgFfk1JpMqVbyxvr3fhYvq8RP4oPFwywbhXBGMOZdRXw/XFxCfmWjnLj/HsxdnhghGLxYqN2B0X/9P4putxDisgeXDoZKOU@lE/UY4W4A4YGzSbdPOn3yaoSHw0Vh1@DcTC2LEM7yCY3hUHp6laLtTt5I5/cfRcBTPhogLfp@/zD7Bw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></li>
<li><a href=""https://tio.run/##nRjvW9pI83v/imUPyC4hJEFsLcvqKdoed0o99XpWoD4xCSUaEiBBoUD/9d7sJkGwfZ73vfsg2Z2Znd87M6tjRYPvv6C9N8aO9daoGXc1@21tz959bVedmrlnvzEto9p3rD27X9u1zVe/oNHMHXqVamXoBZVRGHkzLxq@itwYae6UTYdW9IAMo1pl7mwUTmJ02rw9PD3lTUbi@chFX9zYDoN@sSh3djgcWoFD93XHfdSDqe@j6n7RLBbTw@eHV79xnCcpHdJGGQOJovmF@Kj1VbLQVjgT@1e7dX17eXXMq4axkwHPP1y2rk8/3TY/XFycNK@4yTpICxDOL44OL3@7/Xhycdn60K4DG9QrFhdIWhUiaSUTG/WIrdZnbn52xB1OfSt2UTQQB8JRDKuncOJEI9@LmeV7VoS0L0jJL0wV53/FK4Ur4quw9l@np82zY16XIsBoIdBh0cDrx1K4gwRhCnDtQYjyv1CMODKFaCIh0cAFH8ZhiELf2S@KKHgxMilzHy0f4RzqW37k4uXyJ@Rok15qIGlmy8h1kBLpM32uswh@vuqKlPsV9ZZLMFlyApofxIIl4AH/kb99yyCEI893CSV9bjDbilyQYGLkBYj0SxT1IRrMjSybWVHkDu/8uQh8CDE/DJD2GE/NZTxBWjNChlndqe2@frP3FimdblDqKcsvE3eEKkvr6QEpRyfvW@2FD0IcXnvNwLtkNPGCuI@U0Xn4IWh7rVu7GV0@fuy/c08mF09/z67nn77eWIfx1fDMOVa1XL5QUJb/QXTe4LjZwShvINzjXYzBJX745E5IlKhAcMHG5bxBKcJdzDADRyoyNQjG5csyrmPKhOp9HnGMWT@cEAYZ73uBi/r7BqMLr08yQNTgBpV0AIyEJ5vFYp9zhy5OCGVSJGp2oh5buRB1JKgk9mkgIpGsT0mfCnHsJeMEIxjJYBpstVqL@VGAlJAcOSURBYCgWPWngR17YYBOiS11t3OgL41iy37o@Kra4/YGERwRND5dJO7CfuoCH0z3NY2mYIRRykEze4ka4ITVSpFh0B5RCLkjMw9n@ZCYnBq4D9YFKtc7T7P5156u6ZYuzA8aRioZVyx0VEOVhAAvsW1BOkNi43VmSzoINEm4WD39AKNfQbNABXZ1MFKwDKVBuqMXi7mApo5MIHQx5YFmskSzYH@6GVsZgFSVRAn0pIeoYv1Ul5e2JMphK9UHKGTsgn/BMos5JChLr08h6nZF4cvuJ16SDkrcjDQ/RlVRhoDTMouCxQ3xgQzNQ8xgNQCAEpXAZaMwsKPHSdzTS8RqmFTVOypcOy3ZVynEx53FbKWP9AWwYRFUh1XUMBn8pagBrAZgeKyXcjmLrRYRz@mdvptGg1nCKd5tT1d1H7i232kghlgQe1DABkd1wiACBQA4EEB9qGuANmGV6cJWJtzQF2bubJmpLM47nmr0eN5gIy7WqsjJ1Sj3DbI3s8LXBZlW7fEReneJouldFE9I3ijvUHbe0TSvx69BWIO0eVINRmWr/O6S0mIRVF0APcF5DBBkddq9csKLMsf1Xeg1CQe2ajd2gD4SslKW60WqR5TyQp3PqKcCx@s1r2c12vtVaCfCCeAC6BR6J1/oQQIL0SX4AfsgPjMu9mzOE4hI6lljTmcqn2tkzmdQHnh2f@95ld03gIzRUeIBq3PfY5sugQwjelfVD2bqvA7BOZhp8M3BtwTfAnwL8zp0oB@MPmkfLxIZBsjw2L2qJmUCKEAGJHDWv@A2VEp5XV/XbAnXP/sIvKLrorcJt5T0c1KkTP8Ce6TD5w7amMxY7xZytu9O4mEPPKkXocDpLGbZ1QNQcpcBQRcSYwngSi4dsRTNSHTW/rpty@apiNtGDKosl8neAdYTN55OAtEgEimqYGA5TiZVE/voLs72ObGH6SPbd/MC4HiPGaAgCcKMQaRXSvrfV@8ILkKtAq@80GzdNZMCetl54JDmcBWzdjVI2pUCzTzOaoQi/L1cH11Xdpcc0cWDqjJg0@PwI1JGhO0IOB41BJQdQeRgUT5KCWDxgrlQHQRQ2Y4dBOWIMriEkT3xRjFPFRVNynWdb7gCfWYCU6Pcbvaic3JMhT3lPwjt8WOpE6i23YcS9@f@2Opiv68RCBD75gbqj2eUtOYZc7WFEUJlhVjjr8kFXVxwIJOaaFoaenSxQTQlzbR6E81sQJ9vNqq7r@lBsy4635rsveAFHpgG3/SKLthOAzYNxIzwzDRdrZvhQd6oa5u2/CWEwanmBuyQnGXt4/AOhuk6tJazzc6R4HKYrXvI@uyIZDNHDlxLp@QafjfwYdL3f44MSKs8Lh@X/WeaxZgDEQxKvht8iQdkTGUutaBJtBrcZy3IpCkhxzwttONyq2xS@g13DO1tDx8cq7W9em1XTClrMR7ocE7eb8u@JWflZvmm/Ikuzjiu3NZRO4xFrXK/uBPMmhzo2Q2IlVNKMp3V3iTh2d2jdxPXehCVsfkNf651dnZ7eUwXN7xW05rp4YREdGeyl5wza9CRmpzviC6YEMGDJ/aCqctWIgoJdbNR2xOE@7tvKJVgqcOz9EQA/cQ/IdLUgJiJsLJzclP6tGmjveH8c3K17YBoA3m9dRUeISz35Y9UFl9wvQH3/p7L5IYg3IMvPoprXG71mPyIWU8s7pP9vab1@MfNAEw2RInFBJ5dYeDPi0XQScxDhwRXJnUESyzMEFdBXm9aEhmzFcyn5ysH7KAgAUUOWGzoPyN/lseJRLjVNKU22Z8ytZIES4F/NsYbB@f/4uD@5sGva6VIcjTTK1V/TRhveGIg6uW254cJ@kFM4gMImSDZxDsiMpskaccUdOwBystWxGSxaokKrEJVIuLqlMi9/E3qIqVJ2LgkEfF8FiXbkZD0u0we0FN9cXtFg2qtSeCGgWAg0QRZwzjQWvXWVuRkA9viWHrBUXS0cVoNfk9zhUi3g8q@/PI0W/J1dONOwtw6X8b7/sFY9@u@PqZ0Uyp0xf@TZ@GnPAvAsyB5ihb//V378OyEK5Wnilexu4ZhVtSKVRlVHPhVKwJgAyYEvPKq@aF9ddK@4oryPe1zOC/P42X6Zkb9V2tMSv2Ms1@9PPVkI82GkvyTQz@g1h7og9fXD@WNE//tFdy@QOKRBjOxsozEf160B2QGk7KZzWKfZSUuoS6plLo0DyNX1xRDCF1heHCIhs3lqKTZSP5raCpuejgUcwkAJz8An9V0akhr17YIxEASAT5EI88pu7E3dMsjezQtP0ZfmWPFLt00s/a/zYwtz0daUKtm5oARpNJd7HVXwpiuqSvPbyCtatbe1PZ2Xtf24LUArxLwipxakynVSt5Y/97P4mWV@El8sHiYZaMQzgjGvKuI74eLS8ivbJQT99@DucsTIwSDFwu1OzD6r/9H0e0WQlz24NLBUCnnqXSiHiPcDSA8cDbp9kmnT16N8HC4KOwanJupZRHCWT6hMRxKT69StN3JG@n8/qMIeMpHA6RF3@8fZv8A"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">!enilno ti yrT</a></li>
</ul>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 39 bytes (Filename) + 0 bytes (Content) = 39 bytes, syntaxically safe.</h1>
<ul>
<li>Filename: <code>.w?.s.o.i.c\001.+.a?.d.p.s.?a.+.\001c.i.s.?w.</code>
<ul>
<li>Reversed: <code>.w?.s.i.c\001.+.a?.s.p.d.?a.+.\001c.i.o.s.?w.</code></li>
</ul>
</li>
</ul>
","","user100411"
"222441","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + <s>41</s> 36 bytes (filename).</h1>
<p>Inspired by @MD FX.</p>
<ul>
<li>Filename (escaped): <code>ayIfmmp!Xpsme?.z\001.-.t.v.m.v.c?.a.s.p</code></li>
<li>Content: empty</li>
</ul>
<h2>What it does</h2>
<ul>
<li>Push next characters</li>
<li>Decrement each of them</li>
<li>Output them finally</li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKBKjUvBazlGK1rqsgK5AgoIhcEhQNHC@eu@eSRAIvV3XtTQzv/2c/ZiHz/7Tr8@fi86B1d3vOp1cL7dbtPf1vb1uwdb3Cr2O1dNtPZcv6IUCLXzynQCpztSYDi3/Gel6Lmc4s/FoEqDzykP5/NysGDh4Gzvo0Qm6I6@XTvNZdzQcWp5NjjTbedG8qeui3FGaptOxcKN8/dUURBzzIXW8VMBJRAzZRy4tooG6EJZmf9Rrtw/fr6tmTtd3l2Dj2/fa7fnPh8q3q6vTyrVJjSYSxPBL@fvXh5vTq@@1b/WS/LYQkIneUDud5qsaofHI78@imfwlErn7HxLOcOpagYP8J84/GgcwfB1NbH/s9oN02nL7lo/URySJIZUF8URYSKbEvlI6Xf9xfl65qJolbgMze7bhP/V7gcHHiPHFgNN9GiHxM2GWKbOcAkO5kWsfpSH0L5aLhBTqWa7vCPP5Oo2r5tKzue/YSPK1mfamGT78edckrvAdtZkQ5wKepWgXEzyCJJQ9pL4EUzoPJkit@KjV1NWDNpKaLS/TluaPE2eMspFy7T6/J2phqWyIHaNuaC2Pzxtg7j6bbXmaZnTKxiKaNu@ZHkpzojbWjGAdLOrbGKVU1EYJcP9gG6MUpL0kY3Ebo3pB1PpJxt1t7AD4HpIYWO4msL39bYxSEPaT69vdxigFF1@SjHvbGNUhYr2k2/o2RnWImJP08WAbozQvapOk6dw2RilIvyYZ97cxmgN/ZknG4jZGc@DjW5LxYBujOfDnPZkE/TcYuGMlF13YxiiF2AZJy/ltjOrgzjAZ7/1tjOrgjp00XdzG8pB@OYmBi2oC2wW@VBIDr8UkBs7sMGwhzXHXircLm8RNyftVC89YU84MG/rvjEm3cLZFWrjlsb/ZTIuIWmu3lWtRDbh8LZuBbp1t9nfJNcRUqDVfZ2/vlt3WUmHd6LigcGG8QbNrSDO05n1MZSUuasjWNnSoHpJi8837E6UNdsED3IyG4ELuBDEXnmKeCEfZDJC4Z5F1WM@YuylqCkM74AKkOIRZKvRhVNbGRucS0IhNOQEFH4z2B6OtVZeMG2xLShyH0sQQw8jcCWKqYYvj3Ki8RIIyD62YqgOl5TWR@t7O2ExbMFlDYEk8Pu1osRonWcA25jmNFmdFUgvwtnT5oTLLfQsuE3tuHI@vEJlqGeIyi5PLI7uKWxSfs1gT/41ciTyJs/47QQktj461hGj9HnatjuOaptCiAgn5SnBzPPL6D13/pedMgqGcEnfUNuNuUUwM7THiYfXYCqnSWjBSA7doTLPWXfKnHSywhAgKkz6GsVASTgSFmyWL2OAm/5@Yq6LWmTjWM59A3spYcEejMfJGARpaQfep7z0KwCotlytjonUwJdw3lU/UeJbiMz2aiDD5ZznZ4RPGBs3IG1HqjSZxrMAjwyChZHx0qbSQCPn1n3r54tSUrLdabzgcp27H/tA5zr63dJ1m1WyQfckO4bd7nLWyfnYsfap8q1@f1q9NSfqEx5O@F/TgnOdKxJgkzF@7SO0SOMl/@ZOuKX05PavVQ8ia7DuOTfwJ3LAwHy56U68b9EceauAqCb83n5W/MWmbVQOGbVle0U8xCSdOMJ14KCUDz4ry14oC@BFdUf5eUZi6FeF6g8BMqnSNfIuvSHhlAhd3Q1WNmPlqxTPFFRLy9aPKCj3DV8rdh264Qbp9zznSj0W9pK459jUyIFKDV849L0sZCkgQyAaEImjb/A9mfuqZa7bL@GLp0cVcgCxD/NkttR@gNdNjWPrrU991cApCSkbrkYRJCOB8PsW3QFsRPFxTbpSq4hKWRS4Y3pjAY7im63iPwRO@IQartRpcdWuHpmuQKcZVE9biBxN8o9RkWaGE/CvwdQnHVTlfLOULZLEy0gfrDXy2YfgBXygV5U75ScILU8g@lFAdOsZCttPtD@HqCYt1Hp0JfMfTQDAqJogbd@AD84WVO7ib3z@spNOVw0KR8B40AKv8K9znm7uFtgjbx52Zz6uVWDhqU2DBxUiM5iEgFdPczZEwYoFXQdD3ps6CRZyxVg7zReA5KuwTBkXGV2YjzeSniX8SVFHzRYNlz2jgu8zPtbV2l9Fv4OuNIPhLwu16sl4gJwPlhoQ1U@cWByavYwj/gJWtMlDVtnnDEsVmtTYHIQ9tPh@010I/WZmGiGLenyTDamDN4Ouqaba9meFLhdtKQTuyCKdgdslL5Ma8PGS8sezNSujtj0JHvxd6/3CDSXE31A1XguVinqB3zQ3SEEjPUCwIHk0NzOhrxA62IKBRif/FKryBrWMQly0WidJtHBFjtWNkTKrmMtg61EmG5Qy@a0H9J6lvEHfMbbxYPMi4BCoGzAjZHTgzslCNQgndORO4QvVf@j6oEVihsKRYx4Mj93iw45bcnUGJjzU@hhwtoh0WPDP1NpQDvPMSe7Mw7xJBWjnXg0hscH3s3dvvrj88u8zovIouCXAHg/OLPX/VifdM590pjGwJSUjt5ZYHG9xpGjhN2PtvzR2HF3N0YIZQuLygn2XZkOXBIWabMCtaCHkU/kE8hQExfr8MtlzbcR14IkOeoRXi7QkaRJZrhyAu06gl@ElT4xplCn0SbfpyNG8vJIOdVOx/A3CL6iL@/4Mp65DRkL2GAZxsgasY2nmk1vMbDPM5HsPLvAzP/b6tOEF/6Cjj7niqvPjvhg1verKeg/yf374osPou3GzzawFmt@uwyG44/B4lza3XZ9CFLFPN0fx@vri7ly8iKbRkU9QXp/VqfGpYcB8QPv3f@Y@1xtFhHwESAAe@wEmSqMP1DH4E5EfpwcLOSFBEnUjzmTV5hBjUZijO3OwT@vVf"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>Previously</h2>
<p><a href=""https://tio.run/##nRjvW9pI83v/imUPYZcQkgC2yrJ6irbHnVJPvZ4VqE8aQomGBEhQKNB/vTe7myDYPs/73n2Q3czMzu@dmbVnR4Pvv6BK/3XF6n22Lcu17F6/su/s7Vp9q@JYTt9903cre/t2ubLff/ULGs3coVcql4ZeUBqFkTfzouGryI2R7k7ZdGhHD8g0y2XmzkbhJEZnjbujszPeYCSej1z0xY2dMOjncvLLCYdDO@jRA6PnPhrB1PdR@SBn5XLJ4Yuj6984zpKEDumjlIFE0exCLFptpTb6Cqdi/2o1b@6urk942TQrKfDi/VXz5uzjXeP95eVp45pbrI30AOHs4vjo6re7D6eXV833rRqwQd1cboGkVSGSVjLxoR2z1frM7c@OuMOpb8cuigbiQDiKYfcUTnrRyPdiZvueHSH9C8pnF5aGs7/iVZ7nxZpnrb/OzhrnJ7wmRYDRQmCPRQOvH0vhPSQIE4DrDEKU/YVixJElRBMJiQYu@DAOQxT6vYOciIIXI4sy99H2Ec6gvu1HLl4uf0KONumlBpJmtozcHspHxsyYGyyCn69GXsr9irrLJZgsOQHND2LBEvCA/8j39xmEcOT5LqGkz03m2JELEiyMvACRfoGiPkSDuZHtMDuK3OFnfy4CH0LMjwKkP8ZTaxlPkN6IkGmVK9Xd12/29lG@3QkK3fzyy8QdodLSfnpA@ePTd83WwgchPV59zcC7ZDTxgriP8qOL8H3Q8pp3TiO6evzQf@ueTi6f/p7dzD9@vbWP4uvhee9E0zPZnZ388j@IzpocN9oYZU2Eu7yDMbjED5/cCYmUCgTvOLiYNSlFuIMZZuDIvEwNgnHxqohrmDKhep9HHGPWDyeEQcb7XuCi/oHJ6MLrkxQQ1blJJR0AI@HJRi7X57xHF6eEMikSNdpRl61ciDoSVBL7NBCRUPsz0qdCHHvJWGEEIxlMk61WazE/CpAS1JEzElEACIpVfxo4sRcG6Iw4UncnA/rSKLadh7avaV3ubBDBEUHj04VyF/YTF/hguq/rNAEjjBIOutVVaoATVqu8DIP@iELIHZl5OM0HZXJi4AFYF2jcaD/N5l@7hm7YhjA/qJuJZFyy0XEVlRQBXmLHhnSGxMbrzJZ0EGiiuNhd4xCjX0GzQAN2NTBSsAylQUbPyOUyAU0cqSB0MeWBbjGlWXAw3YytDECiilICPRkhKtk/1eWlLUo5bCf6AIWMXfAvWKYxhwRlyfXZiTodUfjS@4mXpI2Um5Hux6gsyhBwWqZRsLkpFsjQLMQMdgMA5KMCuGwUBk70OIm7RoHYdYtqRluDa6er7zKF@LizmK2MkbEANiyC6rCK6haDvwQ1gN0ADI@NQiZjs9Ui4hmj3XeTaDBbOMW76xqa4QPX1lsdxBAbYg8KOOCodhhEoAAABwJoDA0d0BbsUl3YyoIb@sLMypaZ@cVF29PMLs@abMTFXhM5uRplvkH2plb4hiDTy10@Qm@vUDT9HMUTkjWLFcou2rrudfkNCKuTFlfVYFS0i2@vKM3lQNUF0BOcxQBBdrvVLSpelPVc34VeoziwVateAfpIyEpYrjeJHlHCC7U/oa4GHG/WvJ7VaB2UoZ0IJ4ALoFMY7exOFxJYiC7AD9gH8Zlx8c3mXEFEUs/qczrT@Fwncz6D8sDT@3vPy@y@DmSMjpQH7PY9XH626RTIMWJ0NONwps1rEJ7DmQ5rBtYCrDuw7sxr0IN@MPu0dbJQUkyQ4jFVJQAtRUAGpw0MrkOpkDWMddGWcOOTj8AthiGam/BLwbggOcqML/CNDFg@Qx@TKevdQdL23Uk87IIrjRxUOIPFLL17AFKXGRB0ITG2AK7ktie2ohuJ1tpf923ZPfPiuhGT5pdL9d0D1hM3nk4C0SGUFE0wsHu9VKouvqPPcfqdEd8wfqTfnawA9LzHFLAjCcKUQWSUCsbf128JzkGxAq@80GzdNlUFvWo/cMhzuItpvxqofpWHbh6nRSIv/L1cH12Xdpcc08WDpjFg0@XwI3JGRO0YOB7XBZQdaxqFTfE4IYDNC@ZCdRBAZT/uIahHlMEtjJyJN4p5oqjoUq7b@4ZL0GgmMDbKz81mdEFOqLCn@AehXX4idQLVthuRcn/mj6029vsagQBxYG2g/nhGSWueMddbGCFUlog1/oZc0sUlBzKpia4noUeXG0RT0kjKN9GtOjT6Rr28@5oeNmqi9a3J3gle4IFp8M0oGYLtNGDTQAwJz0yT3bobHmbNmr5py19CGJxqbMCOyHnaP45quHi@2TUUOPPcPtanRiQdNzLgVDolN/C7gQ9Vy/85MiDN4rh4UvSfaRZjDkQwI/lu8CUekDGVWdSE/tCsc581IYemhJzwpMaOi82iRek33Db1/S4@PNGqe7XqrhhQ1mI80OGCvNuWfUfOi43ibfEjXZxzXLqroVYYiyLlfnEnmDU40LNbECsHFDWYVd@owOzu0c8T134QRbHxDX@qtiu73Symi1tereqN5LAiEY2Z7KlzVhWaUYPzimiAigjeOrEXTF22Ev5X1I16dU8QHuy@oVSCpQ7P0pUA@pF/RKShAzETAWUX5LbwcdNGZ8P5F@R62wHRBvJm6xI8Qljuix@orLrgehNu/D2XaQ1BuAdffBAXuNjsMrmIMU9s7tX3va53@YfNAEw2RInNBF5cYeDPcznQSYxCRwSXJjUEWyzMEJdAXmxaEBmzFcyn58sG7KAUAUUGWGzoPyN/FsdKItxnmlBb7E@ZWirBEuCf9fHGwfm/OHiwefDrWimijqZ6JeqvCeMNTwxEpdz2/FChH8QQPoCQCZJNfE9EZpMkaZWCjj1AYdmKmCxTTVF7NahHRFydArmXv6oiUqrCxiWJiOezKNmIhKTfZfKAntqL2ytaU3NNAjcMBAOJLsjq5qHerDW3Iidb1xbHwguOopeNk2rwe5IrRLodVPblypNsydbQrTsJM@t8GR/4h2PDr/nGmNJNqdAP/0@eOz/luQM8dyRP0dy/v20dnZ/yvNMxTaukPahlrJZALR82vtCapuSIM@WS9i75HuVfNd63rk9b1zyf/560QJyVAvAyeU@j/qs1JqF@xjmvXp56cpDuQMn@yaEfUGsX9SEs60f0xon/9kJuXSLxgIN5Ob@MxH9l9AdkBZOilY5pn2SpLqAOKRU6NAvTWMcS8wldYXiMiF7O5RSlO0j@22gqSkE4FCMLACc/AJ/V7FWR3qpuEYhZJQJ8iEZer@jG3tAtjpzRtPgYfWU9O3bpppnV/21mbHs@0oNqOTUHjCClzmKvsxLGdCwj//w@0stW9U11r/K6ugcvCXixgFfkPKtGWFu9v/69n8WrS/lJLFg82tIpCacEY97Ji/X95RXkVzrliQLhwUjmiemCwWuGOm14Fqz/f9Hp7IS46MGthHlTjlrJuD1GuBNAeOCsmgbUKKBGAnhUXO7smpxbiWURwmk@oTEcSk6vErTTzprJZP@jCHjmRwOkR9//AQ"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">41 bytes</a></p>
","","user100411"
"222443","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 40 bytes + Content: 0 bytes = 40 bytes.</h1>
<ul>
<li>Filename (escaped): <code>._\001.-.c._.t.w\001.-._.c.m.-\001.x.d.a.t.c.aY.o</code></li>
<li>Content: empty</li>
</ul>
<h2>Usage</h2>
<p>Input is from STDIN; output from STDOUT.
First positive integer N for input represents number of items in list.
Then integers c1, c2, ..., cN represents each item of the list.
Each input has to be separated by one or more s.</p>
<p>An output of <code>Y</code> represents truthy, and no output falsey.</p>
<h3>Input example</h3>
<p>List <code>[1, 2, 3, 4, 3, 4, 5, 5, 5, 4]</code> is:</p>
<pre><code>10
1 2 3 4 3 4 5 5 5 4
</code></pre>
<h2>With comments</h2>
<pre><code>XX.z
.a._\001.-.cXX.z # push N; decrement it
.a._.tXX.z # push c1; heap&lt;-c1
.a.w\001.-XX.z # while N!=0; do N--
  .a._.c.m.-\001.xXX.z # push ci; if abs(ci-heap); then
    .a.dXX.z # exit
  .a.aXX.z # fi
  .a.tXX.z # heap=ci
.a.c.aXX.z # done
.aY.oXX.z # putchar o
.a
</code></pre>
<h2>Link</h2>
<p><a href=""https://tio.run/##nRj9V9rI9vf@FcMswgzkE7BVhtFVtLvsKnXV7VOBetIklGhIgASFAv3X@@5MEgTbc97bPaclM/feud9z7x0dKxp8/wVV@2@rpvPZMk3XtJx@dd/e2zX7ZtU27b77ru9W9/atSnW//@YXNJq5Q0@raEMv0EZh5M28aPgmcmOkulM2HVrRIzKMSoW5s1E4idFZ8/7o7Iw3GYnnIxd9cWM7DPqFgtzZ4XBoBQ490B33SQ@mvo8qBwWzUEgPXxxd/85xnqR0SB1lDCSK5hfiU66vkoW6wpnYv9utm/ur6xNeMYxqBrz4cNW6Obu9b364vDxtXnOTdZAaIJxfHB9d/X7/8fTyqvWhXQc2qFcoLJC0KkTSSiY25WO2Wp@5@9kRdzj1rdhF0UAcCEcxrJ7DiRONfC9mlu9ZEVK/oGJ@YZZx/le8KvKi@BZZ@@@zs@b5Ca9LEWC0EOiwaOD1YyncQYIwBbj2IET5XyhGHJlCNJGQaOCCD@MwRKHvHBREFLwYmZS5T5aPcA71LT9y8XL5E3K0SS81kDSzZeQ6qBjpM32uswh@vupFKfcr6i2XYLLkBDQ/iAVLwAP@E9/fZxDCkee7hJI@N5htRS5IMDHyAkT6JYr6EA3mRpbNrChyh5/9uQh8CDE/CpD6FE/NZTxBajNChlmp1nbfvtvbR8VONyj1issvE3eEtKX1/IiKx6e/tdoLH4Q4vPaWgXfJaOIFcR8VRxfhh6Dtte7tZnT19LH/3j2dXD7/Z3Yzv/16Zx3F18Nz56Ss5vI7O8XlvxCdNzhudjDKGwj3eBdjcIkfPrsTEiUqELxjYyVvUIpwFzPMwJFFmRoEY@VKwXVMmVC9zyOOMeuHE8Ig430vcFH/wGB04fVJBoga3KCSDoCR8GSzUOhz7tDFKaFMikTNTtRjKxeijgSVxD4PRCSS9RnpUyGOvWacYAQjGUyDrVZrMT8KkBKSI2ckogAQFKv@NLBjLwzQGbGl7nYO9KVRbNmPHb9c7nF7gwiOCBqfLhJ3YT91gQ@m@6pKUzDCKOWgmr1EDXDCalWUYVCfUAi5IzMPZ/mQmJwaeADWBWWud55n8689XdUtXZgfNIxUMtYsdFxDWkKAl9i2IJ0hsfE6syUdBJokXKyefojRr6BZUAZ2dTBSsAylQbqjFwq5gKaOTCB0MeWBarJEs@BguhlbGYBUlUQJ9KyHSLN@qstrWxLlsJXqAxQydsE/YJnFHBKUpddnJ@p2ReHL7idekg5K3IxUP0YVUYaA0zKLgsUN8YEMzUPMYDUAQDEqgctGYWBHT5O4p5eI1TBpWe@U4dqpyb5CIT7uLGYrfaQvgA2LoDqsoobJ4H@KGsBqAIbHeimXs9hqEfGc3um7aTSYJZzi3ff0su4D1/Z7FcQQC2IPCtjgqE4YRKAAAAcCqA91FdAmrDJd2MqEG/rKzOqWmcXFRccrGz2eN9iIi3VZ5ORqlPsG2ZtZ4euCTK30@Ai9v0LR9HMUT0jeUKqUXXRU1evxGxDWIG2eVIORYinvrygtFEDVBdATnMcAQVan3VMSXpQ5ru9Cr0k4sFW7UQX6SMhKWa4XqR5Rygt1PqFeGTjerHm9qNE@qEA7EU4AF0Cn0Dv5nR4ksBBdgh@wD@Iz42LP5jyBiKSeNeZ0VuZzlcz5DMoDz@7vA6@whwaQMTpKPGB1HuDys02nQI4RvVvWD2fleR3CczhT4ZuDbwm@O/DdmdehB/1g9mn7ZJFIMUCKx5IqAWgpAjI4a2BwHbRSXtfXRVvC9U8@Arfoumhuwi8l/YIUKNO/wB7p8PkMfUymrHcPSdt3J/GwB67UC1DhdBaz7O4BKLnMgKALibEEcCWXjliKbiRaa3/dt2X3LIrrRgxaXC6TvQOsJ248nQSiQyRSyoKB5TiZVFXso89xts@JPYwf2b6bFwDHe8oAO5IgzBhEulbS/3P9nuACFCvwyivN1m0zqaBXnUcOeQ53MetXg6RfFaGbx1mRKAp/L9dH16XdJcd08VguM2DT4/AjckZE7Rg4HjcElB2XyxQWynFKAItXzIXqIIDKfuwgqEeUwS2M7Ik3inmqqOhSrut8wxo0mgmMjXK72YwuyAkV9ih/EtrjJ1InUG27ESXuz/251cb@WCMQIA7MDdSfLyhpzQvmegsjhMoSscbfkEu6uORAJjVR1TT06HKDaEqaafkmqtmARt9sVHbf0sNmXbS@Ndlvghd4YBp80zVdsJ0GbBqIIeGFabpad8PDvFFXN235WwiDU80N2BE5z/rHUR0r55tdIwHnXtrH@tSIZONGDpxKp@QGfjfwYdLyf44MSEsZKyeK/0KzGHMgghnJd4Mv8YCMqcyiFvSHVoP7rAU5NCXkhKc1dqy0FJPSb7hjqPs9fHhSru3Va7tiQFmL8UCHC/Lbtux7cq40lTvlli7OOdbu66gdxqJIuV/cCWZNDvTsDsTKASUZzGrvksDs7tHPE9d6FEWx@Q1/qnWqu708pos7XqupzfRwQiIaM9lLzpk1aEZNzquiASZE8NaJvWDqspXwf0LdbNT2BOHB7jtKJVjq8CI9EUBv@S0iTRWImQgouyB3pdtNG@0N51@Q620HRBvIm61L8ARheVA@Ull1wfUG3PgHLtMagvAAvvgoLrDS6jH5EWOeWDwk@wdV7fGPmwGYbIgSiwm8uMLAnxcKoJMYhY4I1iZ1BEsszBCXQF5sWhIZsxXM55fLBuygFAFFDlhs6D8jfynjRCLcZ5pSm@wvmVpJgqXAvxrjjYPzf3DwYPPg17VSJDma6ZWqvyaMNzwxEJVy2/PDBP0ohvABhEyQbOIdEZlNkrRVCjr2CIVlK2KyTLVE7S1DPSLi6pTIg/xNKiKlSdi4JBHxfBElG5GQ9IdMHtCz/Or2itbUWpPADQPBQKIKsoZxqLbqra3Iyda1xbH0iqPoZeO0GvyR5gqRbgeVffnlabbk6@jOnYS5db6MD/zDse7XfX1M6aZU6If/J8@dn/LcAZ47kqdo7t/ft4/OT3lRu@8ahqmpmq3da7H2nO7uYT/UVLmbaY5mAc7WrFstLL5pfmhfn7avebH4Pe13OC@54WX6eEb9N2tMSv2Cs9@8PvVsI9WG@vyTQz@g1v7oQwzWL@aNE//uOdy@ROK1BsNxcRmJP8Goj8gMJoqZzWSfZF0uoS7RSl2ah9Gra4phhK4wvDxE4@ZyZFJtJP9GNBX3PhyK@QSAkx@AL2o6NaS2a1sEYjCJAB@ikecobuwNXWVkj6bKU/SVOVbs0k0za//bzNjyfKQGtUpmDhhBtO5ir7sSxnRNvfjyGFIrZu1dba/6trYHzwZ4noBX5PCazKtW8tj6534WT6zET@KDxQstG4lwRjDm3aL4fri8gvzKRjpRDTyYvzwxSjB4ulC7A2@A9R8rut2dECseXEEYLuVclc7WY4S7AYQHziatP@n7Sf@HF8Tlzq7BuZlaFiGc5RMaw6H09CpF2528kY7xP4qAN300QGr0ffdNdQ9V38l/e8j8Lw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"222444","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: 7 bytes + content: 0 bytes = 7 bytes, depends on implementation.</h1>
<ul>
<li>Filename (escaped): <code>\002.r.w.a</code></li>
<li>Content: empty.</li>
</ul>
<h2>How it works</h2>
<ul>
<li><code>\002.r</code>: pushes one of 0 or 1.</li>
<li><code>.w ... .a</code>: <code>while empty || pop!=0; do ... ;done</code></li>
</ul>
<p><a href=""https://tio.run/##nRhrW9pI93t/xTCLZAYISQBbZRhdRdtlV6mrbtcK1CfNpURDAiQoFOhf756ZJAi2z/O@ux8kM2fOnPtttM1o8P0XVHNf1wz7s2kYjmHabm3f2ts1XKNmGZbrvHGd2t6@Wa3tu69@QaOZM/Qq1crQCyqjMPJmXjR8FTkxUp0pmw7N6AHperXKnNkonMTorHV3dHbGW4zE85GDvjixFQZuoSB3VjgcmoFNDzTbedSCqe@j6kHBKBTSyxdH179xnCcpHlJHGQF5RPML8Sk1VslCXeGM7V@d9s3d1fUJr@p6LQNevL9q35x9vGu9v7w8bV1zg3WRGiCcXxwfXf129@H08qr9vtMAMqhfKCyQ1CpEUksmNqVjtlrfuf3ZFWc49c3YQdFAXAhHMayewokdjXwvZqbvmRFSvyAlvzBKOP8rXilcEV@Fdf46O2udn/CGZAFKC4Y2iwaeG0vmNhKIKcCxBiHK/0Ix4sgQrImERAMHbBiHIQp9@6AgvODFyKDMeTR9hHPINf3IwcvlT9DRJr6UQOLMlpFjIyXSZtpcYxH8fNUUyfcr6i@XoLKkBDg/sAVNwAL@I9/fZ@DCkec7hBKX68wyIwc4GBh5ASJukSIXvMGcyLSYGUXO8LM/F44PwedHAVIf46mxjCdIbUVIN6q1@u7rN3v7SOn2gmJfWX6ZOCNUWZpPD0g5Pn3X7ix8YGLz@msG1iWjiRfELlJGF@H7oOO176xWdPX4wX3rnE4un/6e3cw/fr01j@Lr4bl9UlJz@Z0dZfkfWOd1jltdjPI6wn3ewxhM4odPzoREiQgE71i4nNcpRbiHGWZgSEWGBsG4fFXGDUyZEN3lEceYueGEMIh43wsc5B7ojC48l2SAqMl1KvEAGAlLtgoFl3ObLk4JZZIlanWjPls54HUksOTp00B4IlmfEZcKduwl4eREEJLO1NlqtWbzIwPJIblyRiIKAIGxcqeBFXthgM6IJWW3ciAvjWLTeuj6pVKfWxtIcEXg@HSRmAv7qQl8UN1XVZqCEUYpBdXoJ2KAEVYrRbpBfUQhxI6MPJzFQ6JyquABaBeUuNZ9ms2/9jVVMzWhftDUU864YqLjOqokCHiJLRPCGQIbryNb4oGjSULF7GuHGP0KkgUlINcAJQXJUCqk2VqhkAtoasgEQhdTHqgGSyQLDqabvpUOSEVJhEBPWogq5k9lealLIhw2U3kAQ/ou@BckM59DgLI0fXaiXk8Uviw/8ZJ0UWJmpPoxqooyBJSWmRdMrosPRGgefAarAQCUqAgmG4WBFT1O4r5WJGbToCWtW4K0U5N9lYJ/nFnMVtpIWwAZFkF1WEVNg8FfejSA1QAUj7ViLmey1SLiOa3rOqk3mCmM4t31tZLmA9XOWxXYEBN8DwJYYKhuGEQgAAAHAqgNNRWODVhlsrCVARn6Qs3alprK4qLrlfQ@z@tsxMW6JGJyNcp9g@jNtPA1gaZW@3yE3l6haPo5iickr5drlF10VdXr8xtg1iQdnlSDUdksv72itFAAUReAT3AeAwSZ3U6/nNCizHZ8B3pNQoGtOs0a4EeCV0pyvUjliFJaqPsJ9UtA8WZN61mMzkEV2okwApgAOoXWze/0IYAF6yL8gH7gnxkXezbnCUQE9aw5p7MSn6tkzmdQHniWv/e8yu6bgMboKLGA2b2H5GebRoEYI1qvpB3OSvMGuOdwpsI3B98ifHfguzNvQA/6Qe3Tzski4aIDF48lVQKOJQuI4KyBQTpUinlNWxdtCdc@@QjMommiuQm7FLULUqBM@wJ7pMHnM/QxGbLeHQSt60ziYR9MqRWgwmksZlnuAShJZjigC3liCuBKLm2xFN1ItFZ33bdl91REuhGdKstlsreB9MSJp5NAdIiES0kQMG0746qKffQ5zvY5sYfxI9v38gJge48ZYEcihBmBSKsUtb@v3xJcgGIFVnkh2bptJhX0qvvAIc4hF7N@NUj6lQLdPM6KhCLsvVxfXZd2hxzTxUOpxIBMn8OPiBnhtWOgeNwUUHZcKlFYlI9TBFi8IC5EBwZU9mMbQT2iDLIwsibeKOapoKJLOY79DVeg0UxgbJTbzWZ0QU6o0Kf8B6F9fiJlAtG2G1Fi/twfW23s9/UBgoMDY@Poj@cjqc3zyfXWiWAqS8T6/IZc0sUlBzQpiaqmrkeXG0hT0krLN1GNJjT6VrO6@5oethqi9a3R3glaYIFp8E2raILsNGDTQAwJz0TT1bobHub1hrqpy1@CGdxqbcCOyHnWP44auHy@2TUScO65faxvjUg2buTAqHRKbuB34zxMWv7PDwPSLo/LJ2X/GWcx5oAEM5LvBF/iARlTGUVt6A/tJvdZG2JoSsgJT2vsuNwuG5R@w11d3e/jw5NSfa9R3xUDypqNBzJckHfbvO/IeblVvi1/pItzjit3DdQJY1GknC/OBLMWB3x2C2zlgJIMZvU3iWN29@jniWM@iKLY@oY/1bu13X4e08Utr9fVVno5QRGNmewl94w6NKMW5zXRABMkeOvEXjB12ErYP8FuNet7AvFg9w2lEixleOaeMKAf@UdEWiogM@FQdkFuix83dbQ2jH9BrrcNEG0c3mwlwSO45b78gcqqC6bXIePvuQxrcMI92OKDSOByu8/kR4x5YnGf7O9Vtc8/bDpgssFKLCbw4goDf14ogExiFDoiuDJpIFhioYZIApnYtCgiZsuZT8/JBuSgFAFGDkhsyD8jf5bHCUfIZ5piG@xPGVpJgKXAP5vjjYvzf3HxYPPi17VQJLmayZWKv0aMNywxEJVy2/LD5PhBDOEDcJlA2Ty3hWc2UdJWKfDYAxSWLY/JMtUWtbcE9YiI1CmSe/mbVERKE7dxiSL8@cxKNiLB6XcZPCBn6UX2itbUXqNAhgFjQFEFWlM/VNuN9pbnZOvaolh8QVH0snFaDX5PY4VIs4PIvvzyNFryDXTrTMLcOl7GB/7hWPMbvjamdJMr9MP/k@bOT2nuAM0dSVM09@9vO0fnp1zp6Xq1Mqk8VUzlVet95/q0c80V5XvayHBeouFl@ipG7qv1SYr9fGa9ennryUKqBYX3J5d@OFor6oJx10/hjRv/7Z3buUTiGQZTr7KMxP9W1AdkBJOykQ1bn2TBLaIeqRR7NA8zVc8QUwZdYXhSiI7M5SykWkj@82cqEjocisEDgJMfgM9i2nWkdupbCGLiiOA8RCPPLjuxN3TKI2s0LT9GX5ltxg7dVLP@v9WMTc9HalCvZuqAEqTSW@z1VkKZnqEpz68ctWrU39T3aq/re/AegHcHWEVOpckgaiavqH9vZ/F2SuwkPlg8vbJZB2cIY95TxPf95RXEVzariTT3YLDyxIzA4E1CrS4M9@v/QvR6OyEue5BbMDXKgSkdmscI9wJwD9xNenrS0JPGDk@Dy51dnXMj1SxCOIsnNIZL6e1Vemx183o6n//IAh7r0QCp0fd/AA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"222573","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 118 bytes + Content: 0 bytes = 118 bytes.</h1>
<ul>
<li>Filename: <code>@@€€.!.!.!.cX.w.i.c</code>`<code>.x .-XX.a.c@.x.c[.yA.-.t.m.w.!.m.-.c.t.a.t.c.m.$.%.z.m.+XX.aXX@.aXX.a.+.a.t.!.-.m.z.d.aY.o</code>
<ul>
<li>Escaped: <code>\100\100\200\200.!.!.!.cX.w.i.c\140.x\040.-XX.a.c@.x.c[.yA.-.t\001.m.w\002.!\001.m.-.c.t.a.t.c.m.$\002.%\001.z.m.+XX.aXX@.aXX.a\001.+.a.t\002.!\001.-.m.z.d.aY.o</code></li>
</ul>
</li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##nRhrV@LI8vv8iqaXRzeQF@CM0rSOorPLrjKuurMqMJ6YBImGBEhQEJi/PlvdSRCdOefe3eMx6VRV17urqrHNcPD9F1Ttv68a9q1pGI5h2v3qjrW9ZfSNqmVYfedD36lu75iV6k7/3S9oNHOGrlpRh66vjoLQnbnh8F3oREhxpmw6NMMHpOuVCnNmo2ASoePmzf7xMW8yEs1HDrpzIivw@/m8/LKC4dD0bbqr2c6j5k89D1V280Y@n2w@3b/4jeMsSeiQMkoZSBTNLsSrVF/FC2WFU7F/tVuXN@cXh7yi69UUePr5vHV5fHXT/Hx2dtS84AbrIMVHOLs42D//7ebL0dl563O7DmxQL59fIGlVgKSVTHyUDthqvef6Z1uc4dQzIweFA7EhGEWwegomdjjy3IiZnmuGSLlDhezCKOHsR7wq8IJ4F1j7r@Pj5skhr0sRYLQQaLNw4PYjKdxGgjABONYgQNlfKEYcGUI0kZBw4IAPoyBAgWfv5kUU3AgZlDmPpodwBvVNL3TwcvkTcrRJLzWQNLNl6NioEGozba6xEB7PWkHKfUa95RJMlpyA5gexYAl4wHvkOzsMQjhyPYdQ0uc6s8zQAQkGRq6PSL9IUR@iwZzQtJgZhs7w1puLwAcQ830fKY/R1FhGE6Q0Q6QblWpt6/2H7R1U6HT9Yq@wvJs4I6QuzacHVDg4@rXVXnggxOa19wy8S0YT14/6qDA6DT77bbd1YzXD88cv/U/O0eTs6e/Z5fzq@drcjy6GJ/ZhSclkc7nC8j@IzuocNzsYZXWEe7yLMbjEC56cCQljFQjOWbic1SlFuIsZZuDIgkwNgnH5vIzrmDKhep@HHGPWDyaEQcZ7ru@g/q7O6MLtkxQQNrhOJR0AQ@HJZj7f59ymiyNCmRSJmp2wx1YORB0JKol9GohIxOtj0qdCHHvLOMYIRjKYOlut1mJ@FCAlxFuOSUgBIChW/alvRW7go2NiSd2tDOhLw8i0HjpeqdTj1gYRbBE0Hl3E7sJe4gIPTPcUhSZghFHCQTF6sRrghNWqIMOgPKIAckdmHk7zITY5MXAXrPNLXOs8zebPPU3RTE2Y7zf0RDJWTXRQQ2pMgJfYMiGdIbHxOrMlHQSaxFzMnraH0UfQzC8BuzoYKVgG0iDN1vL5jE8TR8YQuphyXzFYrJm/O92MrQxAokqsBHrSAqSaP9XlrS2xcthM9AEKGTv/X7BMYw4JypLjkwu7XVH40vOJl6SDYjcjxYtQRZQh4LRMo2ByXbwgQ7MQM1gNAFAIi@CyUeBb4eMk6mlFYjYMWtI6JTh2SvxdoRAfZxaxlTbSFsCGhVAdVmHDYPCfoAawGoDhkVbMZEy2WoQ8o3X6ThINZgqnuDc9raR5wLX9SQExxITYgwIWOKoT@CEoAMCBAGpDTQG0AatUF7Yy4IS@MbP6yszC4rTjlvQez@psxMW6JHJyNcp8g@xNrfA0QaZUenyEPp2jcHobRhOS1ctVyk47iuL2@CUIa5A2j6vBqGyWP51Tms@DqgugJziLAYLMTrtXjnlRZjueA70m5sBW7UYV6EMhK2G5XiR6hAkv1PmKeiXgeLnm9aJGe7cC7UQ4AVwAnULrZHM9SGAhuggPsA/iM@Pim815DBFJPWvM6azE5wqZ8xmUB56e33teYfcNIGN0FHvA7NzD4WebToEcI1q3pO3NSvM6hGdvpsA7A@8ivHPwzs3r0IN@MPuofbiIpeggxWVxlQC0FAEZnDYwOA5qMatp66It4dpXD4FbNE00N@GXonZK8pRpd/CNNHjdQh@TKeveQNL2nUk07IErtTxUOI1FLD17AIoPMyDoQmJMAVzJpS2WohuJ1tpf923ZPQviuBGdFpbL@NsG1hMnmk580SFiKSXBwLTtVKoivsPbKP3OiG8YP9LvblYAbPcxBeQkQZAyCDW1qP198YngPBQr8MobzdZtM66g550HDnkOZzHtV4O4XxWgm0dpkSgIfy/XW9el3SEHdPFQKjFg0@PwEDkjonYAHA8aAsoOSiUKi/JBQgCLN8yF6iCAyn5sI6hHlMEpDK2JO4p4oqjoUo5jf8MqNJoJjI3yc7MZnZJDKuwp/0Fojx9KnUC1140odn/mj1dt7Pc1AgFi19hA/fGCkta8YC5eYYRQWSLW@EtyRhdnHMikJoqShB6dbRBNSTMp30QxGtDom43K1nu616yL1rcm@1XwAg9M/W@aqgm2U59NfTEkvDBNVutuuJfV68qmLX8JYbCruQHbJydp/9iv4/LJZteIwZmX9rHeNSLpuJEBp9IpuYTnBj6IW/7PkT5plcflw7L3QrMYcyCCGclz/LtoQMZUZlEL@kOrwT3WghyaEnLIkxo7LrfKBqXfcEdXdnp477BU267XtsSAshbjgg6n5NfXsm/ISblZvi5f0cUJx@pNHbWDSBQp586ZYNbkQM@uQawcUOLBrPYhDszWNr2dOOaDKIrNb/hrrVPd6mUxXVzzWk1pJptjEtGYyXa8z6hBM2pyXhUNMCaCu07k@lOHrYT/Y@pmo7YtCHe3PlAqwVKHF@mxAHrFrxBpKkDMREDZKbkuXm3aaG04/5RcvHZAuIG8fHUIHiEs9@UvVFZdcL0OJ/6ey7SGINyDL76IA1xu9Zh8iTFPLO7j73tF6fEvmwGYbIgSiwncuALfm@fzoJMYhfYJVid1BEsszBCHQB5sWhQZ8yqYTy@HDdhBKQKKDLDY0H9G/iyPY4lwnmlCbbA/ZWrFCZYA/2yMNzbO/8XG3c2Nz2ulSLw11StRf00YbXhiICrla88PY/SDGMIHEDJBsom3RWQ2SZJWKejYAxSWVxGTZaolam8J6hERR6dI7uUzroiUxmHjkkTE80WUbERC0u8yeUDP0pvTK1pTa00CJwwEA4kiyBr6ntKqt15FTrauVxyLbziKXjZOqsHvSa4Q6XZQ2ZNvnmRLto6unUmQWefLeNfbG2te3dPGlG5KhX74f/LM/ZRnDnjmJE/R3L9/au@fHPFC19B1@V@J/9WM/LMu1SfVVa2uUdPVWVeHp3J5qZqq9VGdqVZHne@rihp1dd1Qh@oTvCtqJvlSVEuNgDSC91DNSlwuJ5HPACgJPpeXH8VDNSW4JKg3eChA9qzaqnmlBoV3zc/ti6P2BS8Uvif9FWel9niZXNZR/90ak1C/4Kx3b3c9WUixoB/8ZNOPqHjPJmgdkj6kwfrSvsHkv93I22dIXBhhPi8sQ/ErkPKADH9SNtKx8KtsDUXUJWqxS7Mw/XUNMQ/RFYbLj5gduJzaFAvJn6mmovQEQzEiAXDyA/BFTbuGlHbtFYGYjULAB2jk2mUncodOeWSNpuXH8JnZZuTQTTNr/9vMyHQ9pPi1SmoOGEHU7mK7uxLGdA2t8HIfUypG7UNtu/q@tg03F7ghgVfk/ByPzGZ83/v3fha3vNhP4oXFJTGdynBKMObdgnh/PjuHlEunSlGQXBgBXTHNMLg9UasD15D17yXdbi7AZReqAMy3crRLxvsxwl0fwgN74@kjHj3iEQQuMWe5LZ1zI7EsRDjNJzSGTcnuVYK2Olk9uUn8KGIFeTNASvj9YuCg8dS1HtDtJHiCPA1m6H46HIHfg0dngiLAe@bzHNnBXaj@Aw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input from stdin</li>
<li><code>Y</code> to stdout for truthy, no output for falsey</li>
</ul>
<h2>With comments</h2>
<pre><code>XX.z
# push 2^26; dup; push non-zero value;
## NOTE 2^26 is initialized table
# while empty||pop!=0; do
.a\100\100\200\200.!.!.!.cX.wXX.z
  # push getchar
  .a.iXX.z
  ## NOTE capitalizing here
  .a.c\140.x\040.-XX.aXX.z
  # if isalpha top; then
  .a.c@.x.c[.yXX.z
      # let c is difference between 'A' and the character
      .aA.-.tXX.z
      # let m is 1; what digit to see
      ## NOTE m==2^c
      .a\001.m.w\002.!\001.m.-.c.t.aXX.z
      ## NOTE actual updating table
      # if tbl&amp;m!=1; then tbl&amp;=m; fi
      ## NOTE no logical operators
      .a.t.c.m.$\002.%%\001.z.m.+XX.aXX.z
      # push rando character and get out
      .aXX@.aXX.z
  .aXX.aXX.z
  # get out if EOF (-1)
.a\001.+.aXX.z
# finally: if tbl==2^27-1; then putchar Y; fi
.a.t\002.!\001.-.m.z.d.aY.o
</code></pre>
","","user100411"
"222574","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 26 bytes (filename) + 0 bytes (content) = 26 bytes.</h1>
<ul>
<li>Filename (escaped): <code>\001._.c.w.t.m.!.m\001.-.c.a.s.n</code></li>
<li>Content: empty</li>
</ul>
<h2>Usage</h2>
<ul>
<li>Input decimal integer from STDIN</li>
<li>Output to STDOUT</li>
</ul>
<h2>How it works</h2>
<pre><code>XX.z
.a\001XX.z # push one
.a._.c.wXX.z # push getint; dup; while pop!=0; do
  .a.t.m.!XX.z # heap=pop; push heap; push pop*pop
  .a.m\001.-XX.z # push heap; push 1; push abs(pop-pop)
  .a.cXX.z # dup
.a.a.s.nXX.z # done; pop; printf &quot;%d&quot; pop
.a
</code></pre>
<p><a href=""https://tio.run/##nRjvW9pI83v/imUPyS4kJAFslWX1FG2PO6Weej0rUJ80hBINCZCgUKD/em92k2CwfZ73vfsg2Z2Znd87M2vfCofff0HVweuq2f9smaZjWv1Bdd/e2zUHZtU27YHzZuBU9/atSnV/8OoXNJ47I7dcKY9cvzwOQnfuhqNXoRMhzZmx2cgKH5BhVCrMmY@DaYTOmndHZ2e8yUi0GDvoixPZgT8oFOTODkYjy@/TA73vPOr@zPNQ5aBgFgrJ4Yuj6984zpOEDmnjlIFE0fxSfEr1dbzQ1jgV@1e7dXN3dX3CK4ZRTYEX769aN2cf75rvLy9Pm9fcZB2k@Qjnl8dHV7/dfTi9vGq9b9eBDeoVCkskrQqQtJKJTemYrTdnbn92xBnNPCtyUDgUB4JxBKunYNoPx54bMctzrRBpX5CSX5olnP8VrxWuiK/C2n@dnTXPT3hdigCjhcA@C4fuIJLC@0gQJgDHHgYo/wvFiCNTiCYSEg4d8GEUBCjw@gcFEQU3QiZlzqPlIZxDA8sLHbxa/YQcZemlBpJmvgqdPlJCfa4vdBbCz1ddkXK/ot5qBSZLTkDzg1iwBDzgPfL9fQYhHLueQygZcIPZVuiABBMj10dkUKRoANFgTmjZzApDZ/TZW4jABxDzIx9pj9HMXEVTpDVDZJiVam339Zu9faR0un6xp6y@TJ0xKq@spwekHJ@@a7WXHgjp89prBt4l46nrRwOkjC@C937bbd3ZzfDq8cPgrXM6vXz6e36z@Pj11jqKrkfn/ZOSlsvv7Cir/yA6b3Dc7GCUNxDu8S7G4BIveHKmJIxVIHjHxmreoBThLmaYgSMVmRoEY/VKxXVMmVB9wEOOMRsEU8Ig4z3Xd9DgwGB06Q5ICggb3KCSDoCh8GSzUBhw3qfLU0KZFImanbDH1g5EHQkqiX0aikjE6zMyoEIce8k4xghGMpgGW683Yn4UICXER85ISAEgKNaDmW9HbuCjM2JL3e0c6EvDyLIfOl6p1ON2hgiOCBqPLmN3YS9xgQeme5pGEzDCKOGgmb1YDXDCeq3IMGiPKIDckZmH03yITU4MPADr/BLXO0/zxdeerumWLsz3G0YiGZctdFxD5ZgAr7BtQTpDYuNNZks6CDSJuVg9/RCjX0EzvwTs6mCkYBlIg/S@XijkfJo4MobQ5Yz7mslizfyDWTa2MgCJKrES6EkPUNn6qS4vbYmVw1aiD1DI2Pn/gmUac0hQllyfnbDbFYUvvZ94RToodjPSvAhVRBkCTqs0ChY3xAcyNA8xg9UQAEpYBJeNA98OH6dRTy8Sq2HSkt4pwbXT4n2FQnycecTW@lhfAhsWQnVYhw2TwV@CGsJqCIZHejGXs9h6GfKc3hk4STSYJZzi3vX0ku4B1/ZbDcQQC2IPCtjgqE7gh6AAAIcCqI90DdAmrFJd2NqEG/rCzOqWmcryouOWjB7PG2zMxbokcnI9zn2D7E2t8HRBplV6fIzeXqFw9jmMpiRvqFXKLjqa5vb4DQhrkDaPq8FYtdS3V5QWCqDqEugJzmOAIKvT7qkxL8r6judAr4k5sHW7UQX6UMhKWG4WiR5hwgt1PqFeCTjebHg9q9E@qEA7EU4AF0Cn0Dv5nR4ksBBdhB@wD@Iz52LPFjyGiKSeNxZ0XuILjSz4HMoDT@/vPa@w@waQMTqOPWB17uHys6xTIMeI3i3ph/PSog7hOZxr8M3BtwjfHfjuLOrQg34w@7R9soylGCDFZXGVALQUARmcNjC4DuViXtc3RVvC9U8eArfoumhuwi9F/YIUKNO/wB7p8PkMfUymrHsHSTtwptGoB67UC1DhdBax9O4BKL7MgKBLibEEcC2XfbEU3Ui01sGmb8vuqYjrRgyqrFbxvg@sp040m/qiQ8RSSoKB1e@nUjWxDz9H6T4n9jB@pPtuXgD67mMK2JEEQcog1MtF/e/rtwQXoFiBV15otmmbcQW96jxwyHO4i2m/Gsb9SoFuHqVFQhH@Xm2Obkq7Q47p8qFUYsCmx@FH5IyI2jFwPG4IKDsulSgs1OOEABYvmAvVQQCV/biPoB5RBrcwtKfuOOKJoqJLOU7/Gy5Do5nC2Ci32WZ0QU6osEf9g9AeP5E6gWrbjSh2f@6PrTb2@waBAHFgZlB/PKOkNc@Y6y2MECpLxAZ/Qy7p8pIDmdRE05LQo8sM0Yw0k/JNNLMBjb7ZqOy@pofNumh9G7J3ghd4YOZ/08u6YDvz2cwXQ8Iz02S16YaHeaOuZW35SwiDU80M7Iicp/3jqI7V82zXiMG55/axOTUm6biRA6fSGbmB3ww@iFv@z5E@aakT9UT1nmmWEw5EMCN5jv8lGpIJlVnUgv7QanCPtSCHZoSc8KTGTtSWalL6DXcMbb@HD09Ktb16bVcMKBsxLuhwQd5ty74j52pTvVU/0uU5x@W7OmoHkShSzhdnilmTAz27BbFyQIkHs9qbODC7e/Tz1LEeRFFsfsOfap3qbi@P6fKW12paMzkck4jGTPbic2YNmlGT86pogDERvHUi1585bC38H1M3G7U9QXiw@4ZSCZY6PEuPBdCP/CMiTQ2ImQgouyC3xY9ZG@2M8y/I9bYDwgzyZusSPEJY7tUPVFZdcL0BN/6ey7SGINyDLz6IC6y2ekx@xJgnFvfx/l7TevxDNgDTjCixmMKLK/C9RaEAOolR6Ijg8rSOYImFGeISyItNiyJjtoL59HzZgB2UIqDIAYuM/nPypzqJJcJ9pgm1yf6UqRUnWAL8szHJHFz8i4MH2YNfN0qR@GiqV6L@hjDKeGIoKuW250cx@kEM4UMImSDJ4vsiMlmSpFUKOvYAhWUrYrJMtUTtLUE9IuLqFMm9/I0rIqVx2LgkEfF8FiUbkZD0u0we0LP04vaK1tTakMANA8FAogmyhnGoteqtrcjJ1rXFsfiCo@hlk6Qa/J7kCpFuB5U9@eVJtuTr6NaZBrlNvkwOvMOJ7tU9fUJpVir0w/@T585Pee4Azx3JUzT372/bR@enXOkahlm@K9vlp3JUHpVz5ZGEaACxymHZV14137evT9vXXFG@J@0N5@VhvEreymjwaoNJqJ9x9quXp55spNlQjn9y6EdUfCYL2nhkAFHYvJkzTP7bg7h9icR7DcZjZRWKf8JoD8j0p6qZTmWfZGUuoi4pF7s0D8NX1xTjCF1jeHuI1s3l0KTZSP6XaCZufjASEwoApz8An9Xs15DWrm0RiNEkBHyAxm5fdSJ35KhjezxTH8OvrG9FDs2aWfvfZkaW6yHNr1VSc8AIUu4u97prYUzX1JXn55BWMWtvanvV17U9eDjAAwW8IsfXeGK14ufWv/ezeGTFfhIfLN5o6VCEU4IJ7yri@/7yClIuHepEPXBhAnPFMMHg8ULtDrwCNv@u6HZ3Aqy6cAlhvJSTVTJdTxDu@hAeOBs3/7jzxxMAvCEud3YNzs3EshDhNJ/QBA4lp9cJ2u7kjWSQ/1EEvOrDIdLC72blHw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"222582","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 60 bytes + Content: 0 bytes = 60 bytes.</h1>
<ul>
<li>Filename (escaped): <code>.w.o.i.c\001.+.a.d!md!T!j!b!\\!V !k!V\177!lG!|Q!vr!|KK!TKK!T!V\001!|!T</code>
<ul>
<li>Actual: <code>.w.o.i.c.+.a.d!md!T!j!b!\!V !k!V!lG!|Q!vr!|KK!TKK!T!V!|!T</code></li>
</ul>
</li>
<li>Content: empty.</li>
</ul>
<h2>With comments</h2>
<p>See also: <a href=""https://codegolf.stackexchange.com/a/221388/100411"">Simple cat program</a></p>
<pre><code>XX.z
# pasted cat program
.a.w.o.i.c\001.+.aXX.z
# exit
.a.dXX.z
# these literals are ignored
.a!md!T!j!b!\\!V !k!V\177!lG!|Q!vr!|KK!TKK!T!V\001!|!T
</code></pre>
<p><a href=""https://tio.run/##nRjtVuJK8v88RaeHj24ghACOStN6FXUuM4qOOl4VGDcmQaIhARIUB5hzdl91H2S2upMgOnPO7t0fku6q6vruqmotI@j/fI8qvQ8V3bo1dN3WDatX2TQ31vSeXjF1s2ev9@zKxqZRrmz23r1Hw6k9cIrl4sDxikM/cKZOMHgX2CFS7QmbDIzgAZVK5TKzp0N/HKLDxs3O4SFvMBI@D210Z4em7/UyGbkz/cHA8Cy6pVn2o@ZNXBeVtzJ6JhMfPtk5/5PjFInpkDpMGEgUTc3EJ19bRAt1gROxX1vNy5uz8z1eLpUqCfDk@Kx5eXh10zg@Pd1vnHOdtZHqIZya7e6c/XlzsX961jxu1YAN6mYyMySt8pG0kolNfpctlmeuf3fEHkxcI7RR0BcH/GEIqyd/bAVD1wmZ4TpGgNQ7lE3N9DxO/YEXWZ4V3yxrfT08bBzt8ZoUAUYLgRYL@k4vlMItJAhjgG32fZR6TzHiSBeiiYQEfRt8GPo@8l1rKyOi4IRIp8x@NFyEFdQz3MDG8/lvyNEqvdRA0kzngW2hbKBNtWeNBfDzXctKud9Rdz4HkyUnoPlFLFgCHnAf@eYmgxAOHdcmlPR4iZlGYIMEHSPHQ6SXo6gH0WB2YJjMCAJ7cOs@i8D7EPMdD6mP4USfh2OkNgJU0suV6tqH9Y1NlG13vFw3O78b20NUnBtPDyi7u/@x2Zq5IMTi1Q8MvEuGY8cLeyg7PPGPvZbTvDEbwdnjRe/A3h@fPv01vXy@@n5t7ITngyNrL68qqXQ6O/8/RKdKHDfaGKVKCHd5B2Nwies/2WMSRCoQnDZxIVWiFOEOZpiBI7MyNQjGhbMCrmHKhOo9HnCMWc8fEwYZ7zqejXpbJUZnTo8kgKDOS1TSATAQnmxkMj3OLTrbJ5RJkajRDrpsYUPUkaCS2Ke@iES0PiQ9KsSxt4wjjGAkg1lii8VSzK8CpIToyCEJKAAExaI38czQ8T10SEypu6mAvjQIDfOh7ebzXW6uEMERQePSWeQu7MYucMF0V1VpDEYYxRxUvRupAU5YLLIyDOoj8iF3ZObhJB8ik2MDt8A6L8@19tP0@XtXUzVDE@Z79VIsGRcNtFtFxYgAz7FpQDpDYuNlZks6CDSJuBhdbRujP0AzLw/samCkYOlLgzRLy2QUj8aOjCB0NuGeqrNIM29rshpbGYBYlUgJ9KT5qGj8Vpe3tkTKYSPWByhk7Ly/wTKJOSQoi69POuh0ROFL7ieekzaK3IxUN0RlUYaA0zyJgsFL4gMZmoKYwaoPgGyQA5cNfc8MHsdhV8sRo67TvNbOw7VTo32ZQnzsacgW2lCbARsWQHVYBHWdwV@M6sOqD4aHWk5RDLaYBVzR2j07jgYzhFOcm66W11zg2jpQQQwxIPaggAmOavteAAoAsC@A2kBTAa3DKtGFLXS4oW/MrLwyMzs7aTv5UpenSmzIxTovcnIxVH5A9iZWuJogU8tdPkQHZyiY3AbhmKRKhQplJ21Vdbr8EoTVSYtH1WBYMAoHZ5RmMqDqDOgJTmGAIKPd6hYiXpRZtmtDr4k4sEWrXgH6QMiKWS4XsR5BzAu1v6FuHjheLnm9qNHaKkM7EU4AF0Cn0NqpdBcSWIjOwQ/YB/GZcrFnzzyCiKSe1p/pNM@fVfLMp1AeeHJ/73mZ3deBjNFh5AGjfQ@Xn606BXKMaJ28tj3NP9cgPNtTFb4KfHPwTcM3/VyDHvSL2futvVkkpQRSHBZVCUBLEZDBSQOD61DMpTRtWbQlXPvmInCLponmJvyS005IhjLtDvZIg88t9DGZss4NJG3PHoeDLrhSy0CF01jIkrsHoOgyA4LOJMYQwIVcWmIpupForb1l35bdMyuuGynR7Hwe7S1gPbbDydgTHSKSkhcMDMtKpKpiH9yGyV4Rexg/kn0nJQCW85gA0pLATxgEWjGn/XV@QHAGihV45Y1my7YZVdCz9gOHPIe7mPSrftSvstDNw6RIZIW/58ujy9Juk106e8jnGbDpcvgROSOitgscd@sCynbzeQqLwm5MAIs3zIXqIIDKfmwhqEeUwS0MzLEzDHmsqOhStm39wEVoNGMYG@V2tRmdkD0q7Cl8JrTL96ROoNrrRhS5X/n8qo19WiIQILb0FdTnF5S05gVz/gojhMoSscRfklM6O@VAJjVR1Tj06HSFaEIacfkmql6HRt@ol9c@0O1GTbS@JdlHwQs8MPF@aEVNsJ14bOKJIeGFabxadsPtVKmmrtryVQiDU40V2A45SvrHTg0Xjla7RgRWXtrH8tSQJOOGAk6lE3IJvyt4P2r5v0d6pFkYFfYK7gvNbMSBCGYk1/buwj4ZUZlFTegPzTp3WRNyaELIHo9r7KjQLOiU/sDtkrrZxdt7@epGrbomBpSlGAd0OCEfX8u@IUeFRuG6cEVnRxwXb2qo5YeiSNl39hizBgd6dg1i5YASDWbV9Sgwaxv0dmwbD6IoNn7gb9V2Za2bwnR2zatVtREfjkhEYyYb0Tm9Cs2owXlFNMCICN46oeNNbLYQ/o@oG/XqhiDcWlunVIKlDi/SIwH0il8h0lCBmImAshNynbtatdFccf4JOX/tgGAFefnqEjxCWO4LF1RWXXB9CW78PZdpDUG4B19ciAtcaHaZ/IgxTyzuo/29qnb5xWoAxiuixGIMLy7fc58zGdBJjEI7BBfHNQRLLMwQl0BebJoTGfMqmE8vlw3YQSkCCgVYrOg/JV8Ko0gi3GcaU@vsi0ytKMFi4Jf6aOXg8984uLV68PtSKRIdTfSK1V8Shiue6ItK@drzgwj9IIbwPoRMkKziLRGZVZK4VQo69gCF5VXEZJlqitqbh3pExNXJkXv5G1VESqOwcUki4vkiSjYiIemTTB7QM//m9orW1FySwA0DwUCiCrJ6aVtt1pqvIidb1yuOuTccRS8bxdXgU5wrRLodVHbll8fZkqqha3vsK8t8GW252yPNrbnaiNJVqdAP/0ee6d/yTAPPtOQpmvvPg9bO0T7PFp@KftEpmp1SSS/mi0bRUgaWcq7cK7dKp6NcIOVBuejo6@uK@1GZf1Eex8r882flXPwBAk4pc@U8@65x3Drfb53zbPZn3ARxSorA8/hFjXrvlpiY@gVnvnt76slEqglF@zeHfkVFZ1ZBS7/1IFbLl/UKk//v2dw6ReJVB0N0dh6If9WoD0j3xgU9md2@yfqdQx1SzHVoCka0ji6GFrrA8EIRDZ7L0Uo1kfxf0kTUB38g5hgAjn8BvqhpVZHaqr4iEANMAHgfDR2rYIfOwC4MzeGk8Bh8Z5YR2nTVzOp/NzM0HBepXrWcmANGkGJnttFZCGM6upZ9eTSpZb26Xt2ofKhuwPMCnjHgFTnkRnOtET3K/r6fxVMs8pP4YPGSS0YnnBCMeCcrvsenZ5ByyegnqoYDc5ojRg4GTxxqtuGtsPynRqeT9nHBgasKQ6icv@IZfIRwx4PwwNloRIjmg2hOgJfGaXqtxLkeWxYgnOQTGsGh@PQiRpvtVCke938VAW//oI/U4KeC36fSmSwUj3xBLWovLqmxf//zX@/e1fnW9h87u429/YOPfzY/fT48ah2ffDk9O/968dfl1bWkaXe6327@Ydyalt276zv3D@7A84ejcRBOHsWoP5svfvwH"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>]'rz.</h2>
<ul>
<li>Filename (escaped): <code>;&amp;;|;v;p\001;8;n;q.zq.a.w.o.i.c .x.c\177.yT.+^.%!.+XX.aXX.a.c\001.+.a</code>
<ul>
<li>Actual: <code>;&amp;;|;v;p;8;n;q.zq.a.w.o.i.c .x.c.yT.+^.%!.+XX.aXX.a.c.+.a</code></li>
</ul>
</li>
<li>Content: empty.</li>
</ul>
<h3>With comments</h3>
<pre><code>XX.z
# they are just literals but discarded later
.aXX;&amp;;|;v;p\001;8;n;q.z
# while size&lt;2||pop!=0; do push 'q'; done
.a.zq.aXX.z
# while empty||pop!=0; do
.a.wXX.z
  # if ! empty; then putchar pop; fi
  .a.oXX.z
  # push getchar; dup; push 32;
  # while size&lt;2||pop&lt;pop; do
  .a.i.c .xXX.z
    # dup; push 127; while size&lt;2||pop&gt;pop; do
    .a.c\177.yXX.z
      # push 84; push pop+pop;
      # push 94;
      # push ((x=pop)&lt;(y=pop))?y%x:x%y
      .aT.+^.%XX.z
      # push 33; push pop+pop;
      .a!.+XX.z
    # push X; push X; done (* idiom for BREAK statement *)
    .aXX.aXX.z
  # push X; push X; done
  .aXX.aXX.z
# dup; push 1; push pop+pop; done
.a.c\001.+.a
</code></pre>
<p><a href=""https://tio.run/##nRjtVuJK8v88RdPDRzchCQEclab1KupcZhQddeaqwLgxBImGBEhQFJhzdl91H2S2upMgOnPO7t0fku6q6vruqmq7ZtD/@R6Vex/KRvfGNAzbMLu98qa1sWb0jLJlWD17vWeXNzbNUnmz9@49Gk7tgaOVtIHjaUM/cKZOMHgX2CFS7QmbDMzgHhWLpRKzp0N/HKLD@vXO4SGvMxI@DW10a4eW7/WyWbmz/MHA9Lp0S@/aD7o3cV1U2soa2Wx8@GTn/E@O0ySmQ@owYSBRND0TH6W6iBbqAidivzYbF9dn53u8VCyWE@DJ8Vnj4vDyun58erpfP@cGayHVQzg92905@/P62/7pWeO4WQU2qJPNzpC0ykfSSiY2yi5bLM9c/e6IPZi4ZmijoC8O@MMQVo/@uBsMXSdkpuuYAVJvUS49MxSc/gMvcjwnvjnW/Hp4WD/a41UpAowWArss6Du9UArvIkEYA2yr76P0e4oRR4YQTSQk6Nvgw9D3ke92t7IiCk6IDMrsB9NFOIV6phvYeD7/DTlapZcaSJrpPLC7KBfoU/1JZwH8POs5KfcZdeZzMFlyAppfxIIl4AH3gW9uMgjh0HFtQkmPF5llBjZIMDByPER6eYp6EA1mB6bFzCCwBzfukwi8DzHf8ZD6EE6MeThGaj1ARaNUrqx9WN/YRLlW28t3cvPbsT1E2tx8vEe53f2PjebMBSFdXvnAwLtkOHa8sIdywxP/2Gs6jWurHpw9fOsd2Pvj08e/phdPl89X5k54Pjjq7ilqKp3J5Ob/h@h0keN6C6N0EeEOb2MMLnH9R3tMgkgFgjMWLqSLlCLcxgwzcGROpgbBuHBWwFVMmVC9xwOOMev5Y8Ig413Hs1Fvq8jozOmRBBDUeJFKOgAGwpP1bLbHeZfO9gllUiSqt4IOW9gQdSSoJPaxLyIRrQ9Jjwpx7C3jCCMYyWAW2WKxFPOrACkhOnJIAgoAQbHoTTwrdHwPHRJL6m6lQF8ahKZ133IVpcOtFSI4ImhcOovchd3YBS6Y7qoqjcEIo5iDanQiNcAJi0VOhkF9QD7kjsw8nORDZHJs4BZY5ylcbz1On547uqqbujDfqxVjyVgz0W4FaREBnmPLhHSGxMbLzJZ0EGgScTE7@jZGf4BmngLsqmCkYOlLg/Suns2mPBo7MoLQ2YR7qsEizbytyWpsZQBiVSIl0KPuI838rS5vbYmUw2asD1DI2Hl/g2USc0hQFl@fTNBui8KX3E88Jy0UuRmpbohKogwBp3kSBZMXxQcyNA0xg1UfALkgDy4b@p4VPIzDjp4nZs2git5S4Nqp0b5EIT72NGQLfajPgA0LoDosgprB4C9G9WHVB8NDPZ9KmWwxC3hKb/XsOBrMFE5xrju6orvAtXmgghhiQuxBAQsc1fK9ABQAYF8A9YGuAtqAVaILWxhwQ9@YWX5lZm520nKUYoeni2zIxVoRObkYpn5A9iZWuLogU0sdPkQHZyiY3AThmKSLhTJlJy1VdTr8AoTVSJNH1WBYMAsHZ5Rms6DqDOgJTmOAILPV7BQiXpR1bdeGXhNxYItmrQz0gZAVs1wuYj2CmBdqfUcdBTheLHm9qNHcKkE7EU4AF0Cn0FvpTAcSWIjOww/YB/GZcrFnTzyCiKSe1p7oVOFPKnniUygPPLm/d7zE7mpAxugw8oDZuoPLz1adAjlG9Laib0@VpyqEZ3uqwjcF3zx8M/DNPFWhB/1i9n5zbxZJKYIUh0VVAtBSBGRw0sDgOmj5tK4vi7aE699dBG7RddHchF/y@gnJUqbfwh7p8LmBPiZT1rmGpO3Z43DQAVfqWahwOgtZcvcAFF1mQNCZxJgCuJDLrliKbiRaa2/Zt2X3zInrRoo0N59H@y6wHtvhZOyJDhFJUQQDs9tNpKpiH9yEyT4l9jB@JPt2WgC6zkMCyEgCP2EQ6Fpe/@v8gOAsFCvwyhvNlm0zqqBnrXsOeQ53MelX/ahf5aCbh0mRyAl/z5dHl6XdJrt0dq8oDNh0OPyInBFR2wWOuzUBZbuKQmFR2I0JYPGGuVAdBFDZj7sI6hFlcAsDa@wMQx4rKrqUbXd/YA0azRjGRrldbUYnZI8KewqfCe3wPakTqPa6EUXuT31@1cY@LREIEFvGCurzC0pa84I5f4URQmWJWOIvyCmdnXIgk5qoahx6dLpCNCH1uHwT1ahBo6/XSmsf6Ha9Klrfkuyj4AUemHg/dE0XbCcem3hiSHhhGq@W3XA7Xayqq7Z8FcLgVH0FtkOOkv6xU8WFo9WuEYFTL@1jeWpIknEjBU6lE3IBvyt4P2r5v0d6pFEYFfYK7gvNbMSBCGYk1/Zuwz4ZUZlFDegPjRp3WQNyaELIHo9r7KjQKBiU/sCtorrZwdt7SmWjWlkTA8pSjAM6nJCPr2Vfk6NCvXBVuKSzI4616ypq@qEoUvatPcaszoGeXYFYOaBEg1llPQrM2ga9GdvmvSiK9R/4e6VVXuukMZ1d8UpFrceHIxLRmMlGdM6oQDOqc14WDTAigrdO6HgTmy2E/yPqeq2yIQi31tYplWCpw4v0SAC95JeI1FUgZiKg7IRc5S9XbbRWnH9Czl87IFhBXry6BA8QlrvCNyqrLri@CDf@jsu0hiDcgS@@iQtcaHSY/IgxTyzuov2dqnb4t9UAjFdEicUYXly@5z5ls6CTGIV2CNbGVQRLLMwQl0BebJoXGfMqmI8vlw3YQSkCihSwWNF/Sr4URpFEuM80pjbYF5laUYLFwC@10crBp79xcGv14PNSKRIdTfSK1V8Shiue6ItK@drzgwh9L4bwPoRMkKziuyIyqyRxqxR07B4Ky6uIyTLVELVXgXpExNXJkzv5G1VESqOwcUki4vkiSjYiIemTTB7QU3lze0VraixJ4IaBYCBRBVmtuK02qo1XkZOt6xXH/BuOopeN4mrwKc4VIt0OKrvyy@NsSVfRlT32U8t8GW252yPdrbr6iNJVqdAP/0eemd/yzADPjOQpmvvPg@bO0T7PsSybswc2bBeLBttgHhtpzyPN1B41X3M0C2lTzWob6@va07mmfNcymZSmXFxopvgDDJzSFM3MvasfN8/3m@c8l/sZN0GcliLwPH5Ro967JSamfsFZ796eerSQakHR/s2hX1HRmVXQ0m89iNXyZb3C5P97NjdPkXjVwRCdmwfiXzXqPTK8ccFIZrfvsn7nUZto@TZNw4jWNsTQQhcYXiiiwXM5WqkWkv9Lmoj64A/EHAPA8S/AFzW7FaQ2K68IxAATAN5HQ6dbsENnYBeG1nBSeAieWdcMbbpqZuW/mxmajotUr1JKzAEjiNaebbQXwpi2oedeHk1qyaisVzbKHyob8LyAZwx4RQ650VxrRo@yv@9n8RSL/CQ@WLzkktEJJwQj3s6J7/HpGaRcMvqJquHAnOaIkYPBE4daLXgrLP@p0W5nfFxw4KrCECrnr3gGHyHc9iA8cDYaEaL5IJoT4KVxmlkrcm7ElgUIJ/mERnAoPr2I0VYrXYzH/V9FwNs/6CM1@JnC79OZbA6Kh1JQNf3FJVX273/@6927Gt/a/mNnt763f/Dxz8anz4dHzeOTL6dn51@//XVxeSVpWu3O9@t/mDdW1@7d9p27e3fg@cPROAgnD2LUn80XP/4D"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">a!( v# |{yv{r.</a></p>
","","user100411"
"222675","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 131 bytes + Content: 61 bytes = 192 bytes.</h1>
<p>I escaped spaces too (<code>\040</code>).</p>
<ul>
<li>Filename (escaped): <code>c.z.e,.o\040.oq.e.s..o\n.o\001.-.c\001.y.sGo\040to\040the\040store\040and\040buy\040some\040more,\040.pc.\n.e.d.a.tTake\040one\040down\040and\040pass\040it\040around,\040.p.m.e..o\n.o\n.o.a</code></li>
<li>Content (escaped): <code>.cd.y.t\040on\040the\040wall.mXXq.a.s.c.n.t\040of\040beer.m\001.zXXs.a\040bottle.p</code></li>
</ul>
<h2>Actual source</h2>
<h3>Filename</h3>
<pre><code>c.z.e,.o .oq.e.s..o
.o.-.c.y.sGo to the store and buy some more, .pc.
.e.d.a.tTake one down and pass it around, .p.m.e..o
.o
.o.a
</code></pre>
<h3>Content</h3>
<pre><code>.cd.y.t on the wall.mXXq.a.s.c.n.t of beer.m.zXXs.a bottle.p
</code></pre>
<h2>With comments</h2>
<p>Inspired by <a href=""https://codegolf.stackexchange.com/a/194139/100411"">Dorian's answer in Whitespace</a> at first, then golfed well. Though both Whitespace and Pxem are stack-oriented programming language, their features are different, as in these:</p>
<ul>
<li>Whitespace has label and (conditional) go-to commands; Pxem has while-done loop.</li>
<li>Both of them have subroutine, but Pxem can have only one subroutine. Also that of Pxem works as a function rather than a subroutine.</li>
<li>Whitespace has commands that accesses to non-top items of its stack; Pxem can reverse items on stack.</li>
<li>And more, I think.</li>
</ul>
<h3>Overall of the program</h3>
<ul>
<li>Iteration from 99 to 1 on filename.</li>
<li>Content stands for a subroutine to output strings that are frequently recycled.
  - It depends on top of stack. If the item is more than 99, it outputs &quot; on the wall&quot; in addition to &quot;[0-9]+ bottles? of beer&quot;.</li>
</ul>
<h3>Filename</h3>
<pre><code>XX.z
# push 99;
# while size&lt;2||[ $(pop) -ne $(pop) ]; do
.ac.zXX.z
  # for i in $(reverse $(call $stack)); do
  #   push $i; done
  ## NOTE let it be &quot;call&quot; next time
  .a.eXX.z
  # push 44; putc $(pop); push 32; putc $(pop)
  ## NOTE DOTo is actually:
  ## if !empty; then : do above; fi
  .a,.o .oXX.z
  # push 113; call; pop
  ## NOTE 113&gt;=100
  .aq.e.sXX
  # push 46; putchar $(pop);
  # push 10; putchar $(pop)
  .a..o\n.oXX.z
  # push 1;
  # push $(( (x=$(pop)-$(pop))&lt;0?-x:x ))
  ## NOTE arithmetic operators actually:
  ## check if size&gt;=2 before;
  ## NOP if size&lt;2
  .a\001.-XX.z
  # dup; push 1;
  # while size&lt;2||[ $(pop) -gt $(pop) ]; do
  .a.c\001.yXX.z
    # pop;
    ## NOTE literal is pushed from backwards
    # for i in 32 44 --- 71; do push $i; done
    .a.sGo to the store and buy some more, XX.z
    # while !empty; do putchar $(pop); done
    .a.pXX.z
    # push 10; push 46; push 99;
    # call
    .ac.\n.eXX.z
    # exit
    .a.dXX.z
  # done
  .a.aXX.z
  # if !empty; do heap=$(pop); fi
  # for i in 32 44 --- 84; do push $i; done
  .a.tTake one down and pass it around, XX.z
  # while !empty; do putc $(pop); done
  .a.pXX.z
  # case ${heap:+y} in (y)
  #   push $heap;; esac;
  # call; push 46; putc $(pop);
  # push 10; putc $(pop)
  # push 10; putc $(pop)
  .a.m.e..o\n.o\n.oXX.z
# done
.a.a
</code></pre>
<h3>Content</h3>
<pre><code>XX.z
## NOTE subroutine stack is initialized
## to be same as that of its caller
## but its heap is initialized to be empty,
## which is not shared to its caller
## So, implicitly: stack=&quot;$*&quot;
## NOTE when returning to subroutine,
## heap is discarded but items on its
## stack is pushed to its caller, from
## bottom to top
# dup; push 100;
# while size&lt;2||[ $(pop) -gt $(pop) ]; do
.a.cd.yXX.z
  # heap=$(pop)
  .a.tXX.z
  # for i in 108 108 --- 32; do push $i; done;
  # push $heap;
  # push 113; push 88; push 88
  .a on the wall.mXXqXX.z
# done
.a.aXX.z
# pop; dup; printf %d $(pop)
.a.s.c.nXX.z
# heap=$(pop)
.a.tXX.z
# for i in 114 101 --- 32; do push $i; done;
# push $heap; push 1;
# while size&lt;2||[ $(pop) -ne $(pop) ]; do
.a of beer.m\001.zXX.z
  # push 115; push 88; push 88
  .aXXXXs.z
# done
.a.aXX.z
# for i in 101 --- 32; do push $i; done;
# while !empty; do putc $(pop); done
.a bottle.pXX.z
# (* implicitly *) return $stack (* to its caller *)
.a
</code></pre>
<p><a href=""https://tio.run/##nRhrW9pI93t/xTCLJAO5IlZkGF1F22Wr1KrbtQL1iUko0ZBAEhQE@te7Zybhou3zvO/uB5jbmXO/TRwr7v/4DRmVvZ1Kb9uuWk61uvvWMay9vd1qxdmrWHfO7m7VeVu1jL09581vaDhxB55W1gZeoA3D2Jt48eBN7CZIdcd0PLDiB2QY5TJ1J8MwStBp4/bw9JQ1qJxMhy765iZ2GPQKBbGyw8HAChyyrzvuox6MfR@V9wtmoZBdPj@8@oPhvJzBIXW4RCCOSH7Gh1JtkU7UBV6S/avVvL69vDpmZcPYXm6ef7xsXp9@uW18vLg4aVwxk7aRGiCcnx0dXv5x@/nk4rL5sVUDNKhbKMyQkCpEQkrKF6UjuljdufnVFXcw9q3ERXGfXwiHCcyewsiJh76XUMv3rBip35CUn5klnP8dLyQm8VGirb9OTxtnx6wmSIDQnKBD477XSwRxB3HAbMO1@yHK/0YwYshE3flcziH30fIRzqGe5ccuJoWCLKDivgt6TcIQhb6D9gtlmkM1ktIQAJN57DpIivWJPtVpDH/PuiQwPwvMKRYAyXCsUIB4/iPb26Ngn6HnuzKRe8ygthW7gNzEyAuQ3CsS1ANVUze2bGrFsTu486fcqiEY9DBA6mMyNudJhNRGjAyzvF3Zebtb3UNSuxMUu9L8W@QOkTa3nh6QdHTyvtmagcbkYeQFSQ9Jw/PwY9Dymrd2I758/Nx7555EF09/T66nX55vrMPkanDmHJfUXH5rS5r/B4p5g@FGG6O8gXCXdTAGLfjhkxvJccqCjLdsrOQNQhDuYIopqE4S5pYxVi4VXMOE@qAWh1Xe0sXssu2XSl2WN6jXk/19Vi4UYEstdxlzCgUgA0prkJmvsjI9lQkVVFCjnTe6dLE4aR3P@O6iNw7sxAsDBKsZx0RmKT/Yx/Spz63hk2wHYXTZVlW/myG7BkSSEE99RCGYQhgSL9Wb3oZA873A3TfILCgxvf00mT53dVW3dM54UDcygliz0FEFaSkAnmPbSpAJPsJj0YMpXQg4kExOsVhd/QCj34GroAToahgUBChDIYfu6IVCLiDirtAR7JDZmAWqmckV7I8FaMZhna1ZSZlAT3qINOuXvLyWJWUOWxk/ALFYcPn@BcqM1QUYnmZuuRV3OjxJLN0dz@U2StWMVD9BZZ4tANN8aQWLGXyIwRhgL5j1YUOKi6CyYRjY8WOUdPWibNVNUtLbJXBnNV2XCdjHnSR0oQ/1GaChMQTbIq6bFH7ZUR9mfRA80Yu5nAVOGLOc3u65mTWoxZXi3Xb1ku4D1tY7FcjIFtgeGLBBUe0wiIEB2OzzTX2gq3BswmzJC12Y4PmvxNx@IaY0O297JUP4/pDxeUk1wamHue/gtEspfJ2D8XgYoneXKB7fxUkk5w1lm9Bz8GKvy8B/zbrcYmmUDRVLeXdJIN8BqzOAl3Eeww6y2q2ukuIi1HF9F/JyioEuWvVtgI85rQzlapLxEWe4UPsr6pYA4/UK15qN1j6Er8yVACqAVKm381tdcGBOugh/IB/YZ8L4mk5ZusOdelKfkkmJTVV5yiYQ5IyHbS@M5HsI@/s6gFEyTDVgte8hYdBNpYCPyXqnpB9MStMamOdgosKYg7EI4xaMW9MaZPOfxObpI6ViABWPphkCjgUJ8OBlKYBw0Ip5XV8lQ7Gvf/URqEXXeZngeinq53KBUP0brJEOwx1UL@Gy3i04bc@NkkEXVKkXIGfpNKHL2IOtNJjhgMzEicU3F2Lq8CnP8rxI9bIaB10BL0QSDzfZINJ8nq4dQB25yTgKeOZNqZQ4AstxllRVvo7vkuU6x9dQqpfrTp5vON7jcmNLAIRLBLGuFfW/r97JuADJCrTyirNVOUoz6GX7gYGfQywu60A/rQMSFMdkmSQkru/56uoqo7vyEZk9lEoU0HQZ/HGf4VY7AoxHdb5Lj0olAhPlKAOAySvknHUgQESdcxDkI0IhCmM78oYJyxgFT4xd1/mONUziCFossdwsL@fyMeHyKB9k0mXHgidgbQ1wAvUnVX/uw4vC9OfqAMHBvrlx9GF9JKRZn1y9OOFERYpYnV/LF2R2wQBMcKKqmenRxQbQWG5k6VtWzXqjUGjUyztvyUEDSs0G2HuOCzQwDr7rms7RjgM6DhgArZFms1U1PMgbNXVTlr84MbjV2Ng7lM@W9eOwhpWzzaqRbufW5WN1awiyp0GRA6WSsXwN/xvnYVrpf30YyE1lpBwr/hpmNmIABL2H7wbfkr48IsKLmlAfmnXm0yb40FiWj1mWY0dKUzEJ@Y7bhrrXxQfHpUq1VtkBKmsyHvBwLr9/SftWPlMayo3yhczOGNZua6gVJjxJud/cCNMGA3h6A2Q5eUoFh5Xd1DA7VXIXudYDT4qN7/hrpb29081jMrthlYrayC6nILwwy9X0nlmBYtRgbJsXwBQI3gWJF4xduuD6T6Eb9UqVA@7v7BIitgUPa@opAfKFfUFyQwVgyg1Kz@Wb4pdNGe0N5Z/LVy8VEG8cXr8Igkcwy73ymYisC6o3IOLvmXBrMMI96OIzD2Cl2aVi4K0hn9yn63tV7bLPmwaINkjxSQSvkzDwp4UC8MRboUMZa1ENwRRzMXgQiMAmRe4xL4z5tA42QAepCCBygGKD/4n8SRmlFCGeSQZt0k/CtVIHyzY/1UcbF6f/4uL@5sXnFVNyenXJV8b@CjDZ0ESfZ8qXmh@kxw@8n@6DyTjI5rnDLbMJkpVKDkcfILG8sJhIU02ee0uQj2QeOkX5XvynGZGQ1GxMgHB7rkmJQsQp/SmcB/gsvYpeXpqaKxCIMCAMICoHqxsHarPWfGE5UbpeYCy@wshr2SjLBn9mviILtQPLvhhZ5i35GrpxozC38pfRvn8w0v2ar48I2aQK9fD/xLn1S5xbgHNL4OTF/ce71uHZCZNs7VlzFQ3663CkuVqsaWEngJ9hmJqq2WKcavH7EJ5eKOnD4zoJIxfxDwJ34ymKw4ELrEWugrShrcFVV3M0S0uurAcXhYGLnPApEOBD6McRZF0rCseBw@G1AUBn9OCnWdKbxsfW1Unrikma7QDdBHFfA6pPlu9rg@vrEeCONVsL@FEP3blupA0Ek8/X1zG8hu7CJPFdbSj9yGoxzgtJ8Tx7J6Pem9VJRm19Zr95fevJRqoNteMXl34@Enc6wQpk83BlyB44z@oJvYHuv72PWxeIPzGhq5fmMf/Ooj4gM4gUc9lMfhUFpYg6slbskDz0jB2Td1FkgeHJxDsOJno91UbiQ9CYJ6xwwBsr2Ix@2lyz6VSQ2qq8AOAdVQznIRp6juIm3sBVhvZwrDzGz9SxEpdsiln532ImlucjNaiUl@KAELLWmVU7Cy5Mx9Sl9StOLZuV3Up1@22lCu8deFeBVkTXnTbaVvpK/Pd65m/DVE98wPxpuezl8BJgxDoSHz9eXDJJWvaiPI150Dh6vAei8OYidhseL6uvF53OVogVD3IHdMWiIcweBSOEOwGYB@6mPUvasKSNCzx9LrZ2DMbMTLIY4aU/oRFcym4vsmM7/X7BNfEziQX4TR@p8Y9/AA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"222770","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 224 bytes</h1>
<pre><code>define(b,`$1 bottle`'ifelse($1,1,,s) of beer')define(w,`b($1) on the wall')define(f,`w($1), b($1).
ifelse($1,1,`Go to the store and buy some more, w(99).',`Take one down and pass it around, w(decr($1)).

f(decr($1))')')f(99)
</code></pre>
<p>If I learn GNU extensions, perhaps I would shorten this code.</p>
<p><a href=""https://tio.run/##TY1BCsMgEEX3OcUsAiYwBALd5AS9QA@g1pGGGqeoQXJ6q6G0ZVYz783/26UUQ3b1NGiU/QyaU3IkxWrJRRr6GWfEOAJb0ERBjB87o9SVVuAhPQiycu4LLcrcIMLpTN1/mrwyJD6fYuJAoLwBvR8QeSPY6gUhD8syTgLlTT2pVhAYzv40XypGWBOowLs3TTV0D62m9nT2t4k6tuWU8gY"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
","","user100411"
"222945","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 6 bytes + Content: 0 bytes = 6 bytes.</h1>
<ul>
<li>Filename: <code>six.px</code></li>
<li>Content is empty.</li>
</ul>
<p>Sorry for a boring post.</p>
<p><a href=""https://tio.run/##nRhrW9pI93t/xTAFMkMSkiBWZBhdRdulq9RVt2sF6pOSUKIhARIUCvSvd89MwkXb53nf3Q@SmTlnzv02OnbU//EameX93XJvp1uxnUpl741j2vv7e5Wys1@2vzh7exXnTcU29/edV6/RcOoOvGKpOPCC4jCMvKkXDV5Fbox0d8ImAzt6QKZZKjF3OgzHMTqr3x2dnfE6I/Fs6KKvbtwNg14@L3fdcDCwA4ceGI77aAQT30elg7yVz6eXL46uf@c4S1I8pA9XBCSIZufio1aXyUJf4hXbv5qNm7ur6xNeMs2d1eHFh6vGzdmnu/qHy8vT@jW3WAvpAcLZ@fHR1e93H08vrxofmlUggzr5/BxJrUIktWRiox6z5frO7a@uuIOJb8cuivriQjiMYfUUjp1o6Hsxs33PjpD@FSnZuaXi7G94qXBFfBXW/OvsrH5@wquSBSgtGDos6nu9WDJ3kEBMD9xuP0TZ1xQjjizUWSxIBrmPto9wBvVsP3IxzeeJxIr6Ltg1DkMU@g46yJdYBlVpwkMiTBeR6yAlMqbGzGAR/HwzFEn5m6ScUAGUlMaaBKjnP/L9fQb@GXq@SyjpcZN17cgF4hZGXoBIr0BRD0zN3MjuMjuK3MEXfya8GoJDjwKkP8YTaxGPkV6PkGmVdsq7b/Yq@0hptYNCR1l8HbtDVFzYTw9IOT5912jOwWJkOPaCuIeU4UX4IWh6jbtuPbp6/Nh7656OL5/@nt7MPn27tY/i68G5c6LqmWwupyz@A8esyXG9hVHWRLjD2xiDFfzwyR2TKBGB4FwXa1mTUoTbmGEGplOkuwnG2pWGq5gyH8zi8PIbtpxftXxV7fCsybwe8Q94KZ@HI73U4dzJ54ENGK1O577OS@yMUCa5oHora3bYcnnaPJmL02VvEnRjLwwQ7OaCEp0n8mAfs6e@8IZP0xOE0VVL1/1OSuwGCClSPf0RheAK6Ui8Mm9yGxLN9wL3wKTzQOVG62k6@9YxdMM2hOBBzUwZ4qKNjsuomCDgBe7aMbIgRkQuerBkS4kHmpGEit0xDjH6DaQKVCBXxWAgIBlKPQzHyOczAZV3pY3ghM4nPNCtVK/gYCJRUwlrfCNKIgR6MkJUtH8py0tdEuGwncoDGMul0O9fkExFXYLjWRqWuajdFkViFe54QVooMTPS/RiVRLUASouVF2xuik8EzgB/waoPB0pUAJMNw6AbPY7jjlEgds2iqtFSIZz1ZF@i4B93GrOlMTTmQIZFkGzLqGYx@EtBfVj1QfHYKGQyNgRhxDNGq@em3mC2MIp31zFUwweqzbc6sCE2@B4E6IKhWmEQgQBw2BeHxsDQAWzBaiULW1oQ@S/U3HmmpjK/aHmqKWN/yMVa1S0I6mHmOwTtSgvfEGgiH4bo7RWKJl@ieEyyprZD2QVEsdfhEL9WjTR5kmVDzdbeXlGodyDqHPAJzmI4QXar2dESWpQ5ru9CXU4osGWztgP4keCVklwvUjmilBZqfUYdFSjerGltxGgeQPoSYQQwAZRKo5XNdSCABesC/IB@4J8pF3s248mJCOppbUanKp/pZMankORcpG0vHJN7SPv7GqAxOkwsYLfuoWCwbaNAjBGjrRqHU3VWBfccTnX4ZuBbgG8OvrlZFar5T2qL8pFwMYGLx5IKAWDJAiJ41QogHYqFrGGsi6E8Nz77CMxiGKJNCLsUjAuSp8z4CntkwOcLdC8Zst4dBG3PHceDDpjSyEPNMljMVrkHR0kyA4DOJcQWh0u5dMRSVHnRpHppj4OpQDQiRaQbMamyWCR7B0iP3XgyDkTlTbiogoDtOCuuuthHX@LVPiP20KpX@3ZWHDje4@ogJxHCFYHIKBaMv6/fEpyHYgVWeSHZuh0lFfSq9cAhziEXV32gn/QBBZpjvCoSirD3Yn11XdFdckznD6rKgEyHw4@IGeG1Y6B4XBOn7FhVKSy04xQBFi@IC9GBAZV9zkFQjyiDLIy6Y28Y81RQiMTIdZ3vuIhpNIYRS26328sFOaFCH@0PQjv8RMoEom0QTqH/JObP/PGsMb1fAxAADqwt0B8bkNRmA7l@BhFMZYlYw2/IJZ1fckCTkuh66np0uYU0IfW0fBPdqtXz@XqttPuGHtah1WyhvRO0wAKT4LtRNATZScAmAQekDdF0te6Gh1mzqm/r8pdgBrfqW2dH5HzVP46qWDvf7hrJcWbTPta3hqB7khQZMCqdkBv43YKHSaf/NTAgDW2knWj@Bmc@4oAEs4fvBl/jPhlRGUUN6A@NGvdZA2JoQsgJT2vsSGtoFqXfccvU9zv48EQtV6rlXeCyYeOBDBfk3XPed@Rcq2u32ic6P@e4eFdFzTAWRcr96o4xq3PAZ7fAVrBnTEpY3kscs1uhX8au/SCKYv07/lxu7ex2spjOb3m5rNfTywmKaMykktyzytCM6pzviAaYIMG7IPaCicuWwv4Jdr1WrgjEg909SuWxlGHDPWFAP/FPiNR1QGbCoeyC3BY@bevY3TL@Bbl@boBoC3jzLAkewS332kcqqy6Y3oSMv@cyrMEJ92CLjyKBtUaHyY8YDcXiPtnf63qHf9x2wHiLlViM4XUSBv4snweZxCh0RHBxXEWwxEINkQQysWlBRMwzZz5tkg3IQSkCjAyQ2JJ/Sv7URglHyGeaYlvsTxlaSYClh3/WRlsXZ//i4sH2xW9roUhydSVXKv4aMd6yRF9UyueWHyTgBzFP98FlAmUb7gjPbKOkrVLgsQcoLM88JstUQ9ReFeoREalTIPfyN6mIlCZu4xJF@HPDSjYiwem9DB6QU32RvaI1NdYokGHAGFB0gVYzD/VGtfHMc7J1PaNYeEFR9LJRWg3ep7FCpNlBZF9@eRot2Sq6dcdhZh0vowP/cGT4Vd8YUbrNFfrh/0kz90uaOaCZkzRFc//xtnl0fsoVeF0Xh1PlVf1D8/q0eQ3190faxHBWouBF@sBEvVdrSIq9gXVfvbz11EV6F4ruLy79DJJ32sEaZRu4tkAPrL5@e26R@28Py@YlEm8zGIeVRST@QaE/ICsYa9ZqCvssK3EBtUmx0KZZGLbalhg/6BLDW0O0ai6HJL2L5H9QJiLTw4GYSOBw/NPhRkynjPRm@RmCGEUigIdo6DmaG3sDVxt2hxPtMfrGHDt26baa5f@tZmx7PtKDcmmlDihBiu15pb0UyrQtQ9k8f/SSVd4rV3belCvwUIAHCVhFjqvJhGonz6t/b2fxqErsJD5YvMlWQxBeIYx4WxHfD5dXXFFWQ5zIfw8mLk8MDwweK7Tbgql//exvt3Mh1jxIOhgn5SSVTtMjhNsBuAfuJs0@6fRJx4c3w2Vu1@TcSjWLEF7FExrBpfT2MgV3k4e/sMTPLOAVH/WRHv34Bw"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"223076","<h1><a href=""https://www.gnu.org/software/gawk/manual/gawk.html"" rel=""nofollow noreferrer"">AWK</a>, 422 bytes</h1>
<p>I think it took me over a week to solve this problem.</p>
<pre><code>function l(x){return length(x)}{P=9(d=$2);gsub(&quot;.&quot;,FS,P);N=l(L=n=$1);gsub(&quot;.&quot;,&quot;-&quot;,L);O(0,q=int($1/$2));Q=l(q);print P L RS d&quot;|&quot;n}function O(i,x){printf&quot;%&quot;l(d)+N-Q+1+i&quot;d\n&quot;,x}m=substr(q,1,1)*d{for(i=1;i&lt;=Q;){O(i,m);print P substr(L,1,N-Q+1);for(_=l(j=n)-l(n-=m*10**(Q-i));_--;)P=P FS;if(!n)exit;match(q,&quot;.0*&quot;);i+=R=RLENGTH;sub(&quot;.{&quot;R&quot;}&quot;,E,q);b=q+0?substr(n,1,M=l(m=substr(q,1,1)*d)):n;if(b&lt;m)b=substr(n,1,M+1);O(i-(i&gt;Q),b)}}
</code></pre>
<p><a href=""https://tio.run/##ZY9dT8IwFIb/Sm0w6dk6XPETy9Er1IsJ2/DShDDGoLoVN0Ykmfvts0OiJN41p885z/vOPt@bJtnqeanWmqRsB1WxKLeFeS/0slyZQV352Gcxdnogl5ttxGiX8ocJ90GOMGUeauyIoy/qUO6BHDOX56h0yTrizOyCDAydg/wozJD4xCPhhMT0i@r6N8CYKW4i7JGEntKUxWCPnMAWtqLxq6Z8V2doTJuyYDkXXIAVV8m6YAqFVAMMJFTtkezPc6A9Q@8vgWz5qQnzhhqclGkHM0u4lsUCR5mcU8eR4KNPHiZSJexEw2KnSpnNyvnKSGnXtShIZWOIoTccPb48yZ/uFQ1pTfmQm5YR5rZ7f3Br4342wn/RAW5164gGGUR4TLc5TRGHqbsAeAR13TSEiN75xeUVub7pu98"" rel=""nofollow noreferrer"" title=""AWK – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input is given from STDIN, as single line.</li>
<li>Two natural numbers are on same line.</li>
<li>Output is returned to STDOUT.</li>
<li>This program does never handle overflow; fails on huge values.</li>
<li>This program does not handle multiple lines of input correctly; only the first line is handled correctly.</li>
</ul>
<h2>Formatted</h2>
<pre><code>function l(x){
  return length(x)}
{
  P=9(d=$2);gsub(&quot;.&quot;,FS,P);
  N=l(L=n=$1);gsub(&quot;.&quot;,&quot;-&quot;,L);
  O(0,q=int($1/$2));
  Q=l(q);
  print P L RS d&quot;|&quot;n}
function O(i,x){
  printf&quot;%&quot;l(d)+N-Q+1+i&quot;d\n&quot;,x}
m=substr(q,1,1)*d{
  for(i=1;i&lt;=Q;){
    O(i,m);
    print P substr(L,1,N-Q+1);
    for(_=l(j=n)-l(n-=m*10**(Q-i));_--;)
      P=P FS;
    if(!n)
      exit;
    match(q,&quot;.0*&quot;);
    i+=R=RLENGTH;
    sub(&quot;.{&quot;R&quot;}&quot;,E,q);
    b=q+0?substr(n,1,M=l(m=substr(q,1,1)*d)):n;
    if(b&lt;m)
      b=substr(n,1,M+1);
    O(i-(i&gt;Q),b)}}
</code></pre>
","","user100411"
"223081","<h1><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a>, 12 bytes</h1>

<pre class=""lang-sh prettyprint-override""><code>yes|sed -n =
</code></pre>
<p>Or, alternatively:</p>
<pre class=""lang-sh prettyprint-override""><code>yes|sed =\;d
</code></pre>
<p><a href=""https://tio.run/##S0kszvj/vzK1uKY4NUVBN0/B9v9/AA"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"223086","<h1><a href=""https://esolangs.org/wiki/itflabtijtslwi"" rel=""nofollow noreferrer"">itflabtijtslwi</a>, <s>233</s> 204 bytes</h1>
<pre><code>/Z/\/\///Y/\\\\ZH/Y&gt;ZF/P.ZE/C.ZD/.BZB/\/.ZA/Y.Y./B/&lt;Y\HYYYZP1/GGE2GG./E1E3D\./F2.\D\DB/E1D\./F2.\./p.2.AAB/E3D\D/E1E2E3./F1./F3D/p.\2./F1D/&lt;.HDB/F\3./F1D/&lt;.H./&lt;.A\.H.AAA/F2ZP\2/P1Z&lt;HZ/P\3/P1Z&lt;H/&lt;Y\HYYY/P2
</code></pre>
<p><a href=""https://tio.run/##fU9ha8IwEP3ur7AQMBHJ0ZZ9WeukXWt0yOiYMJpFRbTTQjc74xBx3V/vTjs32GQJueTevXv3kifr7KIkk7brNsLbYNIfdgeeP@zfDO8HD/2GM1uucqcECQo3QAwKl@xBfCW7EHEZwjWXAXBf@kjg0oOYxxx8cGPVi@NYRiYIEVpCcAjN0A4Uh67FVaACH4FTyiHnFvc8xJASHKhWaGPNxGMHWFXWIQvA5T3s7Cr7O@UYPIW353koJiNlQWRKtychUnb1PNmByCr/frO2XaZZQk22T5@oNsZCUNq5fBzjZ0fvSnHW7DAhDEOz/fOuRnSbmA7GD40EyhkQExbaIfP2ItnMKHMqOQ0oou6IViFS5sD2RZFkuhpBK/VjFKMmM4z6al3HwlHxOCpfpy8bSkzm/LTBb2PsDPJllBLdInPWRokWsdh5x7@Qf50n@2yqN05RlK/bZL3Z1d7SVT79BA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>Original</h2>
<p>I am not familiar with the language well; I barely understand how the program works. This is a modification of cat program.</p>
<pre><code>/./&lt;\\\\&gt;\\\\\\//P1/GGC.2GG./C.1C.3./.\./P.2.\./.\./././C.1./.\./P.2.\./p.2.\.\.\.\././C.3./.\././C.1C.2C.3./P.1./P.3././p.\2./P.1././&lt;.\&gt;./././P.\3./P.1././&lt;.\&gt;./&lt;.\.\.\.\&gt;.\.\.\.\.\.\./P.2//P\2/P1//&lt;\&gt;///P\3/P1//&lt;\&gt;/&lt;\\\\&gt;\\\\\\/P2
</code></pre>
<p><a href=""https://tio.run/##fVBRa8IwEH73V1gImIjkaMpelrayORccMjom7GFREe200M2u6RCp3V/v0lQdOllC7rjv7r77LkmYxlclmnqu2@o/3k0Ho/vhze1o8DB6Hr4MWny@Wie8BAqu1MeX5gAENgjRo0wICj1q96hDgUoKAWWVMw9M6gRPjKuvSTuHWkPCDBBUTYFJ6QbJ9oiWQKVf8wZUOmeweyD2jxPkfrKWK1klWS/hQxU5x@hkrYCVf/@gsVlFcYhtkkdvWFkTITDuXr9OQMrxTkpK2l0ihGUpkr9vG0h5yObafitdgCkBZMNScbTwlmE2x4TXdAo0iXxCSvZ1yQJIXhRhrOoRuGY3VozbxLKa67SpE4bRjErS6CPDyCb8tw3OhZELyF4oRqqDFsTTFB3EyGXFZ8i/ysM8nqmMF0X5uQnTbNv4itbJ7Ac"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
","","user100411"
"223091","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 29 bytes + Content: 0 bytes = 29 bytes.</h1>
<p>Outputs fibonacci sequence, separated with space.</p>
<ul>
<li>Filename (escaped): <code>\001.rX\001.w.c.n.c.t.v.m.v.+ .oX.a</code>
<ul>
<li>Actual: <code>.rX.w.c.n.c.t.v.m.v.+ .oX.a</code></li>
</ul>
</li>
<li>Content: empty.</li>
</ul>
<p><a href=""https://tio.run/##nRhrW9pI93t/xTAFMkMSkiBWZBhdRdulq9RVt2sF6pOSUKIhARIUCvSvd89MwkXb53nf3Q9kbmfO/TY4dtT/8RqZ5f3dcm@nW7GdSmXvjWPa@/t7lbKzX7a/OHt7FedNxTb3951Xr9Fw6g68Yqk48ILiMIy8qRcNXkVujHR3wiYDO3pAplkqMXc6DMcxOqvfHZ2d8Toj8Wzooq9u3A2DXj4vV91wMLADhx4YjvtoBBPfR6WDvJXPp5cvjq5/5zhLUjikD1cI5BHNzsWgVpfJRF/iFdm/mo2bu6vrE14yzZ3V5sWHq8bN2ae7@ofLy9P6NbdYC@kBwtn58dHV73cfTy@vGh@aVUCDOvn8HEmpQiSlZGKhHrPl@s7tr664g4lvxy6K@uJCOIxh9hSOnWjoezGzfc@OkP4VKdm5peLsb3ipcEWMCmv@dXZWPz/hVUkChBYEHRb1vV4siTtIAKYbbrcfouxrihFHFuosFiSD3EfbRziDerYfuZjm80RCRX0X9BqHIQp9Bx3kSyyDqjShIQGmi8h1kBIZU2NmsAg@3wxFYv4mMSdYACTFsUYB4vmPfH@fgX2Gnu8SSnrcZF07cgG5hZEXINIrUNQDVTM3srvMjiJ38MWfCauGYNCjAOmP8cRaxGOk1yNkWqWd8u6bvco@UlrtoNBRFl/H7hAVF/bTA1KOT981mnPQGBmOvSDuIWV4EX4Iml7jrluPrh4/9t66p@PLp7@nN7NP327to/h6cO6cqHomm8spi/9AMWtyXG9hlDUR7vA2xqAFP3xyxyRKWCA418Va1qQU4TZmmIHqFGlugrF2peEqpswHtTi8/IYt51ctX1U7PGsyr0f8A17K52FLL3U4d/J5IANKq9O5r/MSOyOUSSqo3sqaHbZcnjZP5mJ32ZsE3dgLAwSrucBE5wk/2MfsqS@s4dN0B2F01dJ1v5MiuwFEihRPf0QhmEIaEq/Um9yGQPO9wD0w6TxQudF6ms6@dQzdsA3BeFAzU4K4aKPjMiomAHiBu3aMLPAREYseTNlSwoFkJMFid4xDjH4DrgIV0FUxKAhQhlIOwzHy@UxA5V2pI9ih8wkPdCuVKziYSNCUwxrfsJIwgZ6MEBXtX/LyUpaEOWyn/ADEcink@xcoU1aXYHiWumUuardFkli5O16QFkrUjHQ/RiWRLQDTYmUFm5tiiMAYYC@Y9WFDiQqgsmEYdKPHcdwxCsSuWVQ1Wiq4s56sSxTs405jtjSGxhzQsAiCbRnVLAa/9KgPsz4IHhuFTMYGJ4x4xmj13NQazBZK8e46hmr4gLX5VgcyxAbbAwNdUFQrDCJgADb7YtMYGDocWzBb8cKWFnj@CzF3nompzC9anmpK3x9yMVd1C5x6mPkOTruSwjcEmIiHIXp7haLJlygek6yp7VB2AV7sdTj4r1UjTZ5E2VCztbdXFPIdsDoHeIKzGHaQ3Wp2tAQXZY7ru5CXEwxs2aztAHwkaKUo15OUjyjFhVqfUUcFjDdrXBs2mgcQvkQoAVQAqdJoZXMdcGBBugAfkA/sM@VizWY82RFOPa3N6FTlM53M@BSCnIuw7YVjcg9hf18DMEaHiQbs1j0kDLatFPAxYrRV43CqzqpgnsOpDmMGxgKMORhzsypk85/EFukjoWICFY8lGQKOJQnw4FUpgHAoFrKGsU6Gct/47CNQi2GIMiH0UjAuSJ4y4yuskQHDF6he0mW9O3DanjuOBx1QpZGHnGWwmK1iD7aSYIYDOpcntthcyqkjpiLLiyLVS2scdAWiECki3IhJlcUiWTuAeuzGk3EgMm9CRRUIbMdZUdXFOvoSr9YZsYZSvVq3s2LD8R5XGzkJEK4QREaxYPx9/ZbgPCQr0MoLztblKMmgV60HDn4OsbiqA/2kDihQHONVklCEvhfrq@uM7pJjOn9QVQZoOhw@wmeE1Y4B43FN7LJjVaUw0Y5TAJi8QC5YBwJU1jkHQT6iDKIw6o69YcxTRsETI9d1vuMiptEYWiy53C4vF@SECnm0Pwjt8BPJE7C2ATiF@pOoP/PHs8L0fn2A4ODA2jr6Y3MkpdmcXD87EURlilif35BLOr/kACY50fXU9OhyC2hC6mn6JrpVq@fz9Vpp9w09rEOp2QJ7J3CBBibBd6NoCLSTgE0CDkAbpOlsXQ0Ps2ZV35blL0EMbtW39o7I@ap@HFWxdr5dNZLtzKZ8rG8NQfYkKDKgVDohN/DdOg@TSv/rw4A0tJF2ovkbmPmIAxD0Hr4bfI37ZESlFzWgPjRq3GcN8KEJISc8zbEjraFZlH7HLVPf7@DDE7VcqZZ3gcqGjAc8XJB3z2nfkXOtrt1qn@j8nOPiXRU1w1gkKferO8aszgGe3QJZQZ4xyWF5LzHMboV@Gbv2g0iK9e/4c7m1s9vJYjq/5eWyXk8vJyCiMJNKcs8qQzGqc74jCmACBO@C2AsmLlsK/SfQ9Vq5IgAPdvcolduShw31hAD9xD8hUtcBmAmDsgtyW/i0LWN3S/kX5Pq5AqKtw5tnQfAIZrnXPlKZdUH1JkT8PZduDUa4B118FAGsNTpMDqI1FJP7ZH2v6x3@cdsA4y1SYjKG10kY@LN8HngSrdARwcVxFcEUCzFEEMjApgXhMc@M@bQJNkAHqQggMoBii/8p@VMbJRQhnmkKbbE/pWslDpZu/lkbbV2c/YuLB9sXv62ZIsnVFV8p@2vAeEsTfZEpn2t@kBw/iH66DyYTINvnjrDMNkhaKgUce4DE8sxiMk01RO5VIR8REToFci@/SUakNDEblyDCnhtSshAJSu@l8wCf6ovoFaWpsQaBCAPCAKILsJp5qDeqjWeWk6XrGcbCC4yilo3SbPA@9RUi1Q4s@3Lkqbdkq@jWHYeZtb@MDvzDkeFXfWNE6TZVqIf/J87cL3HmAGdO4hTF/cfb5tH5KVfapmkVxzdyeCp2iwH84uJjcQA/FRXDm6KtvKp/aF6fNq@5ovxIKxzOyvt4kb4@Ue/V@iSF3px1X7289dRFehcy8i8u/Xwk77SDNcj24Vo9PTDJ@mG6he6/vTqbl0g83KBXVhaR@PdCf0BWMNasVYv2WabpAmqTYqFNs9CJtS3Rm9AlhoeIqONcdlB6F8m/VyYiDYQD0a7A5vinzQ2bThnpzfIzANGnRHAeoqHnaG7sDVxt2B1OtMfoG3Ps2KXbYpb/t5ix7flID8qllTggBCm255X2UgjTtgxl8zbSS1Z5r1zZeVOuwCsCXiugFdnLJu2rnby9/r2exYsr0ZMYsHiwrTokvAIY8bYixg@XV@B8qw5PJAcP2jFPdBYMXjK024Inwfo/gXY7F2LNg4iEXlO2WWmrPUK4HYB54G7SCSRtQNIOwIPiMrdrcm6lkkUIr/wJjeBSenuZHneTfwWEJn4mAU/8qI/06Mc/"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.z
# push 1; push $(($(pop)*$(rand)))
# NOTE rand pushes 0&lt;=x&lt;1
# NOTE null character cannot be used for filename
.a\001.rXX.z
# push 1; push 88; while [ $(pop) -ne 0 ]; do
.aX\001.wXX.z
  # Do I really need to explain more?
  # Just read the specification; I am going to bed
  # also a sequence .t.v.m.v is an idiom
  # to move top item to bottom
  .a.c.n.c.t.v.m.v.+ .oX.a
</code></pre>
","","user100411"
"223095","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 11 bytes, cheating.</h1>
<pre><code>syscmd(cat)
</code></pre>
<p><a href=""https://tio.run/##yzX5/7@4sjg5N0UjObFE8///XJPUiswSDU0A"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
","","user100411"
"223098","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 9 bytes + Content: 0 bytes = 9 bytes.</h1>
<ul>
<li>Filename: <code>O.ooo.o.O</code></li>
<li>Content: empty</li>
</ul>
","","user100411"
"223257","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Content: 0 bytes + Filename: 54 bytes.</h1>
<ul>
<li>Filename (escaped): <code>._.c\002.y.d.a.c\002\003.t.x.c.m.%\001.y.d.a.c.m\001.+.c.t.c.!\001.-.a.n</code></li>
<li>Content is empty.</li>
</ul>
<h2>Usage</h2>
<ul>
<li>Input is given from stdin, as a string of decimal integer.</li>
<li>Outputs the input number for truthy; no output for falsey.</li>
</ul>
<h2>How it works</h2>
<pre><code>._XX.z
# let input be n
# get out if &lt;2
.a.c\002.y.d.aXX.z
# let i be 2
# while i*i&lt;=n (or i*i-1&lt;n); do
.a.c\002\003.t.xXX.z
  # if n%i&lt;1; then exit; fi
  .a.c.m.%\001.y.d.aXX.z
  # i++
  .a.c.m\001.+.c.t.c.!\001.-XX.z
# done; print n
.a.a.n
</code></pre>
<p><a href=""https://tio.run/##jVhtU@LKEv6@v2LIRjJjEpJBUCRGZcHrco6y6rqWK6AVkqBgCBwSFA2cv763ZxIEwt6taxUy/XT3dE@/zAvPwdOvz59L7r5l79luJ9/N75ScPX131y46@m6x27G6uqPnC0W9WKTFT4EbItWdGJOBFTwjXc/nDXc6Go5DdFZ9qJydmVUDh28jFz26oT30u9ksp@zhYGD5DjnUHPdF8yeeh/KHWZrNJsoXleuvpiDiRA6po8UEnEXEiH3J5Xk8UOfCwuyPRv324ft1zczr@s4CvPj2vX579vOh@u3q6qR6bVKjiQQx@lL5/vXh5uTqe/1boyy/zQVkojfUzmb5qoZoNAx605iSv8Qqd/9Dwx1MPCt0UfDE5YejEIavw7ETjLxemM1aXs8KkPqIJDGisiAeC3PJlNi3lM02fpydVc9rZpnbwMyeYwRPvW5o8DFicgng2k9DJH4mzDJlljNgKD/0nMMshP7F8pCQQV3LC1xhNlvl8am59nQWuA6SAm2qvWlGAP/eNYlP@I7aTIlLgcxC1cYEDyEJFR@pL@GEzsIxUqsBajV1db@NpGbL325Ls8exO0K5eHLtvrAralG5Yogdo2FoLZ/TF2DuPpdr@ZpmdCrGPCab92weSvOiNtKMcBUs6ZsYpVTUhilwb38ToxS0/bRgaROjelHUemnBnU1sH@Qe0hhYtlPY7t4mRikoB@n17WxilIKLL2nB3U2M6hCxbtptfROjOkTMTfu4v4lRWhC1cdp0fhOjFLRf04J7mxjNgz/TtGBpE6N58PEtLbi/idE8@POeToL@GwzcsdKLLm5ilEJsw7TlwiZGdXBnkI733iZGdXDHSZsubWIFSL@cxsBFNYXtgFwmjYHXYhoDZ7YYNpdm2LaS7cIhSVPyftWiU9aUU8OB/jtl2i2ca5EWbvnsf267RUSttdPKt6gGUoGW24Zuna73d9kzxEykNV@nb@@W09YyUcPoeDDh3HiDZteQZmjN@4TLSlzUkKOtzaH6SErMN@@PlTbYBQ9wMx6CC/ljxFx4SmRiHOW2gcU9i63DekbcTVFTGNoBFyDFEVCZKIBRRRsZnUtAYzHlGCb4EHQ@BB2tthBcE1twkjiUx4YYxeaOEZsatjgujSoLJKzw0IqZBnBafhOp7@1th80WjlcQWBKPTzterMZZFoiNeE7jxVmx1hy8LV9@TJnjvoWXqT03icdXiEytAnGZJsnlkV3GLY7PaTIT/8SuxJ4kWf@dooQWR8dKQrReF3tWx/VMU2hRgUR8Jbg5Gvq9Bzt46brjcCBnxC21zaRbFBNDe4xlWD22Iqq05ox1gVs04VmrLgWTDhZYQgSFaR/BWCgLx4LCzZJ5YnBd/k/CNVHrjF3rmROQtwoWvOFwhPxhiAZWaD/1/EcBRKXFcmVMtA6mhPumckJNqAyn9JgQgfhnQWxxgolBM/JGlLrDcRIr8MgwSCQZH10qzSVCfv2nUTk/MaXcQ85uwXUq95ZzclY8hs9OLsxNc3ZukNvaApIu2LkBp2QYhfDJcEoFji99qn5rXJ80rk1J@oRH454fduEmwM2ICUuYvdpItQmc9b@CsW1KX05O640I8ioHruuQYAx3MMyH8@7Et8Pe0EcXuEai781n5W9M2mbNgGFblpf8E0yisRtOxj7KyCCz5Py15AB@SJecv5ccNt2Scb3GYCZVusK@xVckujJBiruhqkYifLWUmeAqifj6UXWJnuIr5e5jbrhjej3fPdSPRL2srjj2NTYgUoPX1j0vXBlKTBDIGoRiaNP8D2Z@4psrtiv4fOHR@UyAOoD4s3tsL0Qrpkew9NennufiDISUDFcjCUQE4Gw2wbfAWzJ8XFdulJriEZZFrhjdmCBjeKbn@o/hE74hBqvGOlyG6wemZ5AJxjUT1hKEY3yj1GVZoYT8K/B1CUc1uVAqF4pkvjTSA@sX@HTN8AM@V6rKnfKTROemkHsoowb0lIUc1@4N4HIKi3Uf3TF8jyahYFRNUDfuwAfmC2sIcLewd1DNZqsHxRLhXWoAVv1XuC80d4ptETaYO7NQUKuJctzIIIJLsRotQECqprmTJ1EsAu@GsOdP3DmLOBOtHhRKIHNY3CMMio0vzcYzk58m/klQVS2UDJY94wLfbf9cWau9iP4Fvl4LQrBg3K4m6wVy0lduSFQ3dW6xb/I6hvD3WdkqfVVtmzcsUYyqtzkIeWhzut9eCf14aRoiinl/km1WAysGX5dNs@nNFF8q3FYG2pFFOAPUJS@RG/PygMkmujdLpbc/Kh3@Xun9ww2mxd1Q11wJF4t5gt4111gDYD1DsSB4Vl1gxl9hdrAFAY1L/C9W4RfYOgJ12WKRKN8mETGWO8a2SdX8NrYOdLLNcgbfK0H9Jz1fP@mY22SxuL/tEagYMCPktuBUyUE1CmV0547hktV76QUwjcAKhSXFOuofekf9La/sbfXLfKzxMeRoHu@w4Jmpt6Ec4CWY2puFmU0EaelcFyKxJvWxd2@@zP7wMDPjEy2@RsAtDU449kBWx/4zndkTGDkSkpDazS@OPrj1XOAsYS/EFXdcXszxkRpB4fKCfpZlQ5b7B5htwqxoIeRx@PsJCQNi/H4ZbLmO67nwiIY8Qysk2xM0iCzXD0BdpnFL8JOmzmeUKfRJvOnLMd2eSwY7qdivB3DPshH/hWHCOmQ4YO9lAMcb4DKGTgGpjcKawGyGR/B2rwzRqOcobtgbuMrIHk2Ul@DdcODVT1ZzUPjz6xiFVs@Du29hJcDs/h2V2B2I37SkmfX6DHMhy1TztLBXKO3sFkpIiizZFPX5SaOWnBoW3BiET/93/pNZk@iwLwESAAe@wFmSqMMFDv4EFMTpwcLWUFBEnUizqTV@hBjUpyjJ3PQT@rWzv/df"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"223302","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 49 bytes</h1>
<pre><code>define(f,`ifelse($1,0,1,`eval($1*f(decr($1)))')')
</code></pre>
<p><a href=""https://tio.run/##yzX5/z8lNS0zL1UjTSchMy01pzhVQ8VQx0DHUCchtSwxB8jRStNISU0uArI0NTXVgfB/moaxJleahgWIMDQEk0ZgEixsaKL5HwA"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<pre><code>f(n)dnl where n is an integer.
</code></pre>
","","user100411"
"223647","<h1><a href=""https://www.gnu.org/software/gawk/manual/gawk.html"" rel=""nofollow noreferrer"">GAWK</a> <code>-M</code>, <s>138</s> 120 bytes.</h1>
<p>It was originally <a href=""http://rosettacode.org/wiki/Hamming_numbers#AWK"" rel=""nofollow noreferrer"">a post on rosetta code</a>.
Without <code>-M</code> it overflows when huge value is input.</p>
<pre><code>{a=2
b=3
c=5
for(s=h[0]=1;--$0;c-z||c=5*h[++k]){z=a&lt;b?a:b
s=s&quot; &quot;(z=h[++n]=z&lt;c?z:c)
a-z||a=2*h[++i]
b-z||b=3*h[++j]}}$0=s
</code></pre>
<p><a href=""https://tio.run/##HY1BCoMwEEX3c4oiLrQSiC3dqIMn6AlkFkmgaAVTOoVC1Kt3mrh8PN7/5juLrAYvYPEKDm/w8O@CcRw0Yd0qlevWqbBtUZ3HoapmKteAprO9aSwwcnbKioBJLYShc31oXAkmNXH2aCYCmzheHPykfc81skitf/71mfzCou5/"" rel=""nofollow noreferrer"" title=""AWK – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p>Given from stdin, as a line consists of a string of decimal natural number.</p>
<h2>Execution time</h2>
<p>Tested in my Termux. CPU is:</p>
<pre><code>Architecture:        aarch64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           2
Vendor ID:           ARM
Model:               4
Model name:          Cortex-A53
Stepping:            r0p4
CPU max MHz:         1768.0000
CPU min MHz:         449.0000
BogoMIPS:            52.00
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32
</code></pre>
<h3>With original code</h3>
<p>10^6th Hamming number is <code>519312780448388736089589843750000000000000000000000000000000000000000000000000000000</code>.</p>
<pre><code>$ time echo 1000000 | awk -Mf Textfile/ham.awk
# lots of output
real    2m36.842s
user    0m25.224s
sys     0m5.356s
</code></pre>
<h3>If <code>$0=s</code> is removed</h3>
<pre><code>$ time echo 1000000 | awk -Mf Textfile/ham.awk
real    0m25.404s
user    0m24.676s
sys     0m0.716s
</code></pre>
<h2>Note</h2>
<ul>
<li>Original 138 bytes of post outputs incorrectly: it outputs n+1 numbers, not n.</li>
</ul>
","","user100411"
"223653","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 58 bytes + Content: 0 bytes = 58 bytes.</h1>
<ul>
<li>Filename (escaped): <code>._\377\001.+.c.c.!.!.!.i.s._\377\001.+.c.!.!.+.i.s._\377\001.+.!.+.i.s._.+.n</code></li>
<li>Content: empty</li>
</ul>
<p>Problem is that my implementation of Pxem supports literal value up to 255; needed to make greatee values by myself.</p>
<h2>Usage</h2>
<p>Via stdin/stdout. Accepts only one input at once.</p>
<p><a href=""https://tio.run/##lRhrV9u48nt/heLNQ4rtyM4DQhSFhUC72YWUBdpLm7gckzjEYJyHHQgN7l/fO5IdJ9A9596eHCxpnprRzGjEfTD@5zdk39iGM6jXzd2b2nCnYtZhrJcrO2VnUDPM2l6tNhruGPXKu8AJke4s2OLBDu6RYZTLzFlOJ/MQnbSvD05OeJvh8HnqoFsnHEz8UT4vV4PJw4PtD0mLDp1H6i88D5VbeTOfT5jPDi7/4EoWJ3RIn64FSNTLy3Tu@uEI5YJ@30dKVgAVkl2JUW1E8USPlPVmPnU7V9cXl0e8bBiVNfDs40Xn6uTLdfvj@flx@5KbrId0IW11eHDxx/Xn4/OLzsduA8QgK59fIWnrBE0ngbtkYqEesijl@fpvLM7DwrNDBwVjwTCZhjB7msyHwdRzQ2Z7rh0g/RYVsitTVbK/K1GBF8RYYN1PJyft0yPeABW4Bwqw0DhkwdgdhVL7EAnKBOAMxhOU/Y0oiCMTWS8vOIOcR9tDSgaNbC9wFELyeQEUhMG4PPGGrXyZMClaApcvgTNEhYAu6TNlAXy@04IU@H0tUPI6w5QZDPIe@d4eg3Oaup6DCR5xgw3swAGxpoJcH@FRkaAROJc5gT1gdvAgDnYCZ3rgI/0xXJgv4Rzp7QAVeoa@ZxVg7PtFq/ByO3emqPRiP92jwuHxh0531e5VKhaD74787opvVUKqNfHdg@9oMsfMbZZ3mKtyU824KnY5r5FiWU7qpFiByQ@l1KvtWeCVi57H2z1X3alZqhj3di0rWgFUVS2eNZg7wrDQyxbn1Z18PmsIo9pk5em8zE4wYXEoKrlB31c0Q80aUXTcPVoBKhot/EHoTnwEixUI8sgqofYU9jQWHvNIAkEKuujpumfFAtFVFBWk7fojmoDLpK8VsTrkhVLvafn83UJPdIJKdkFA27wwsEM4FnCg0cK@ymlMRHVq00SxUrLRYRUl7MpLG3LBDZEZZQ2wFeGYxbbovoJ@hx35KvA2rgjTJ0U6pMKGjE8kj8EW3NfNxAy/tZAWQpZ6ru80uZFoRIcbJW/2FMVbshNNpnQbyPA3rEpskrKWEEFAsje5DxGlrB0VgKOEK2NvNcuxIOY7yzAKimDedOIPgsd5aNEitpsmUWlPzWRzerwuE7KStHRKVzZEcsDNKGiaDP5ixBgmYzAjpEU7WgU8Q3sjJ/EZs4V97rVFVeqBvO57HRRgu2UQUD0Am3sTPwDVABwLIH2gOqBNmK13EZmxLWsLKtsWKIXVGUSoIeNyysVc1U0rmmZ@QEAlO/eoIBLxOkXvL1CwuAnCOc4aWoWwMwgw1@JXkdnEXS6LEJ5qtvb@QlQH2OIKyLGSVQCC7F7X0mJRhA0dz4E6FguIus0KkAdCUywwlRxvVKCkJNT7hiwV5F2lktI9dFtlqEjCcrAb6gvtZXMWzeeF3iJ8wDI4jiUXa/bMY4hIx2XzmSxV/qzjZ76E/OMim0Ta30FG3jWBjJFpbL3du4M0ZtsOAW9i2lfp/lJ9bsCZ7C91GDMwFmHMwZh7bkAJfGuzCM5YiQFKXBbnLWCFBkhVWTzNgH7LUudhGj7TwrqeQnyXillK04qWwGMyykJGv3kIPEapqLvCZUV6hvOE0VtYIwrDDVwDgQxf9xoCeOTMwwdwFpQfwR@s0ypORgCTVQyHLIsnQwoXi7xIRskdAZetqOcFkVrYIIWXl3g9BKFzJ1zMfUi2QiIf6sBwmGrTaXATpqsMhVsuXfWzdOg@psscfZhsGEtF@p/L91jJKwApvLzZD059SON6f9G75xDtkIcyVBVFG2tKQ/CybECzYFuBQORs2NKC6@BDsrpXVQYiLA4fETvi@A5B2mFTQNmhqkL1v9cOEwKYrAXDjoVsQlgwH/Dk9gnm0IrgYLhV18/wERG71P7CxOJHUpuqbvDHUPdjX2b@2r4P/kzhCOAtc4P5a4MRwjaIy1cIoVCkfoq@wudkdc6BSm5C15MzROcbmgVuJ6UV62aznc@3m@XaDtlvNxRlQ/VBSII0W/g/aIkKoQufLXyuKBuRySSp9i1jP2s09C0rPglNwNPegA7w6foSOmgo2qms7ciU1T0GZ9IynzJNweg4pjPgSrLAV/DdoCfxtfqvOB93tJl2pHkbktWMAw3zuOf4t@EYz4gMiQ40J50m91gHAmKB8RFPiuZM62gmIT8U2Zgo@0dqtd6o1ki00eLCDs7wh1ear/Gp1ta@al/I6pQrpesG6k5CUXecW2eusDYHcvYVlMpWhcn9VXfj86jVyc3cse9FnWv/UL5Ve5WalVXI6iuvVvV2wixJIiDB9ZjNrMKd0ua8Im6wmAaa5dD1F04kHC9p281qXZC1aruECGi8gY3qWDr5wr8g3NaBmIlzZGf4a/HLln2DLa@f4ctXtgdbuKvtiH@E47jTPhNZQ8HlBmnecRnE4Ps7cMJnkYRax2JyEM2XmNzF6ztdt/jnLb/Pt/SIyRy68onvPefzsB/RfRxgpTRvIJgqwgIR8zJ9SVGEyfYRPm0SC6RBOQGCDEjYUCzx39os1geJSxJik/0twykOqgT4d3O24Xv@Bb7WjG0Yv6dbwjHrelfx3lO6cMsLY1HoXrn8Icbei4Z1DCclKLbQQ3Ei2xTJfSfI2D0UkPSkWndcFsyOqJsqFFI4niJce8W43JH4oLhEwgluVMg7Q2j4U4YK7E59naTiGumkFJBJoA8odEHVNPb1TqOzfVTynnklr/hanrh5ZknK/5mEBpaOhhbMkyNPgiPbQAaQp9Exa3n7M@o1PDp7FR7i@vo/Rea2REpxORCXm4E0cff@8757cHoMvft1v7K72zcMs6SWBvDLyJ9bCt5gBFT9CZ7CYPQL79ofu5fH3UteKCTyQdObBlnCFdl1iPs4l6O30EWvGX@mTzDKptVOZSTvPDTaYNbUKW7w7i3X0wDpAyj0735m@gmV@n0EJ51ubYvjV1@O8LLpnovGL2tARybe/fo9Mv25Zq77sG@lIurjUrFPstB29U3RmpBImB8MuWya9AGS/6hYiBIyeRC9CgDnPwE3extWkd6tviKAHJ7Ca/9ggqbuUHNC98HRpoPpQnsMvrOhHTpk27bq/7AttF0P6X61vLYC9o9L/VW9Hwk7@iZlsiPSy2Z1t1qv7FTrKjQ3GdHdqP0@NF83A7DwF70pnljCJ8FQPLKgN0pfXjPel8/Qj@cXfP1cFwXEhX7LFW0GPMdVMuhB6x/Eh4qVfj83UTQXWq2MfFoGSU89Q@cX8PQykr4gbgri5iDqnudqBudm8kQMkLIOETQDHsEaJbhBL2tY60fltmzRrY@RHvxj7pVL5k69ZJbM/wI"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"223695","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 15 bytes + Content: 0 bytes = 15 bytes.</h1>
<ul>
<li>Filename (escaped): <code>.w.i.c\001.+.a.s.p</code></li>
<li>Content: empty</li>
</ul>
<p><a href=""https://tio.run/##lRhrW@K4@ru/InS5JLQlLRdFQnAVnVl2lXHVmeMMdHwqFKnWcmlRHOz89T1v0lJwZp/nnPkgTd6897y3@BCM//kN2be24QzqdXPvtjbcrZh1@NbLld2yM6gZZm2/VhsNd416ZSdwQqQ7C7Z4tIMHZBjlMnOW08k8RKftm8PTU95mOHyZOujOCQcTf5TPy91g8vho@0PSokPnifoLz0PlVt7M5xPi88OrP7iSxQke0qdrBvLo9XU6d/1whHJBv@8jJSuACsmuxFdtRPFCj5S1Mh@7neuby6tjXjaMyhp4/uGyc336@ab94eLipH3FTdZDuuC2Ojq8/OPm08nFZedDtwFskJXPr5C0dYKmk8BdMrFRj1iU0nz5NxLnceHZoYOCsSCYTENYPU/mw2DquSGzPdcOkH6HCtmVqSrZ35WowAviW2Ddj6en7bNj3gARuAcCsJA4ZMHYHYVS@hAJzATgDMYTlP2NKIgjE1mvrziDnCfbQ0oGjWwvcBRC8nkBFIjBuDzxhq18mTDJWgKXr4EzRIWALukLZQH8fKMFyfDbmqGkdYYpMRjkPfH9fQb3NHU9BxM84gYb2IEDbE0FuT7CoyJBI3AucwJ7wOzgUVzsBO700Ef6U7gwX8M50tsBKvQMfd8qwLfvF63C693cmaLSq/38gApHJ@873VW7V6lYDH535e@e@K1KSLUmfvfhdzSZY@Y2y7vMVbmpZlwVu5zXSLEsF3VSrMDiu1Lq1fYt8Mplz@Ptnqvu1ixVfPf3LCtaAVRVLZ41mDvCsNHLFufV3Xw@awij2mTl6bzMTjFhcSgquUHfVzRDzRpRdNI9XsFRNFr4g9Cd@Ag2K2DkkVWC7SnseSw85pEEghR02dN1z4oZousoKkjb9Sc0AZdJXytid8QLpd7z8uWbhZ7pBJXsgoC2eWFgh3At4ECjhX2V0xiJ6tSmiWClZKOjKkrIldc25IIbIjPKGmArwjGJbdEDBf0OGvkq0DauCdMnRTqkwoaMTySNwRbc183EDL@1kBZClnqu7zS5kUhERxshP@gUxSrZiSRTug14@BtSJTZJWXOIICDZD7kPEaWsHRWAo4QrY281yzEj5jvLMAqKYN504g@Cp3lo0SK2myZRaU/NZHN6vC8TspK4dEpXNkRywM0oaJoM/uKDMSzGYEZIi3a0CniG9kZO4jNmC/vcG4uq1AN@3Xc6CMB2yyAgegA29yZ@AKIBOBZA@kh1ODZhtdYiMmNb1hZUti1QCqtziFBDxuWUi7Wqm1Y0zXyHgEo096hAEvE6Re8uUbC4DcI5zhpahbBzCDDX4teR2cRdLosQnmq29u5SVAdQcQXoWMkqAEF2r2tpMSvCho7nQB2LGUTdZgXQAyEpZphyjhUVR5IT6n1Flgr8rlNOqQ7dVhkqkrAc7Ib6QnvZnEXzeSG3CD9gGVzHkos9e@ExRKTjsvlClip/0fELX0L@cZFNIu3vISPvm4DGyDS23u7dQxqzbYeANzHtq/Rgqb404E4Oljp8M/AtwjcH39xLA0rgjzaL4IyFGCDEZXHewqmQAKkqi6cZ0K9Z6jxOwxdaWNdTiO9SMUtpWtESeIxGWcjoVw@BxygVdVe4rEjPcZ4wegd7ROFzC20gkOHr3kAAj5x5@AjOgvIj6IN1WsXJCGCyiuGQZfFiSKGxyEYySnoENFtRzwsitbBBCq@v8X4ITOdOuJj7kGyFhD/UgeEwlabT4DZMdxkKXS7d9bN06D6l2xx9nGwIS0X6n6t3WMkrACm8/qAPTn1I43p/2XvgEO2QhzJUFUUba0pD0LJsQLNgW4FA5GzI0oLr4COyelBVBiwsDj8idsT1HQG3o6aAsiNVher/oB0lCLBYMwaNBW9CWDAf8KT7BHMYRXAw3Krr5/iYCC21vzCx@LGUpqqb8xOo@7EvM39t94M/UzgCeMvcnPy1ORHMNgdXbw6EQJH66fE1viCrCw5YUgldT@4QXWxwFridlFasm812Pt9ulmu75KDdUJQN1nvBCdJs4X@nJSqYLny28LmibFgmi6Tat4yDrNHQt6z4KCQBTXsDOsRn6yZ02FC0M1nbkSmrewzOpGU@JZqC0XFMZ8CVZIGv4XdzPInb6r@e@bijzbRjzdugrGYccJjHPce/C8d4RmRIdGA46TS5xzoQEAuMj3lSNGdaRzMJ@a7IwUQ5OFar9Ua1RqKNFBc0OMfv30i@wWdaW/uifSarM66UbhqoOwlF3XHunLnC2hzQ2RcQKkcVJvWr7sX3UauT27ljP4g61/6ufK32KjUrq5DVF16t6u2EWKJEgILrMZlZhZ7S5rwiOliMA8Ny6PoLJxKOl7jtZrUu0Fq1PUIENFZgIzrmTj7zzwi3dUBm4h7ZOf5S/Lxl32DL6@f46o3twdbZ9XbEP8F13GufiKyh4HKDNO@5DGLw/T044ZNIQq1jMfkRw5dY3Mf7e123@Kctv8@35IjFHKbyie@95POgj5g@DrFSmjcQLBVhgYh5mb6kKMJk@wqfN4kF3KCcAEIGOGwwlvhvbRbLg8QlCbLJ/pbhFAdVAvy7OdvQvfwCXWvGNoTfUpVwTLrWKtY9xQu3vDAWhe6Nyx/j0wcxsI7hpgTG1vFQ3Mg2RtLvBBp7gAKS3lTrnsuC2RF1U4VCCtdThLZXjMsdiS@Ky0O4wY0I2TOEhD9lqIB26tskFW2kk2JAJoE8wNAFVtM40DuNzvZVyT7zhl/xLT/ReWZJyv@ZhAaWjoYRzJNfngRHtoEMQE@jY9byDmbUa3h09iY8RPv6P1nmtlhKdjlgl5sBN9F7/3nXPTw7gdn9ueSWBn3DMEtqyS4FpWlhp/2he3XSveKFQoIF@D@MuRKuyNlBdNVcjt7BLLwm/Bk/OVE2A3PKI3mtodHmZI2dng12fqR6HiB9AOV652ein45S743gvlLVtih@9f0H75PuhRjfsgbMVeL1rj8g059r5nqa@loqoj4uFfskC8NT3xQDBomE@cGQy9FHHyD574aFKASTRzFxAHD@E3Cj27CK9G71DQJk4hTe7IcTNHWHmhO6j442HUwX2lPwjQ3hrU@2bav@D9tC2/WQ7lfLaytAf1zqr@r9SNjRNymTc41eNqt71Xplt1pXYUTJiBlF7fdhhLodgIW/6E3xUBI@CYbiqQQTTvp@mvG@fEx@uLjk60e3KAMuTE2uGBbgUa2SQQ8G@CC@VKz0@7mJorkwMGXkAzFIJuMZuriEB5SRdPe4tcctPupe5GoG52by0AuQsg4RNAMaQRolZ4Ne1rDWT8Nt3mLmHiM9@MfYr@/t7tSqlbK5s3P0Xw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"223709","<h1><a href=""https://ja.wikipedia.org/wiki/CASL"" rel=""nofollow noreferrer"">CASL II</a>, <s>55</s> 43 bytes.</h1>
<p>CASL II is an assembly language for COMET II, the fictional architecture. It is designed for Japan Information-Technology Engineers Examination.</p>
<p><a href=""https://www.ipa.go.jp/english/humandev/reference.html"" rel=""nofollow noreferrer"">Here is the page that you can obtain official specification</a>, as <em>Information Technology Terms and Specifications of Programming Languages Used in Examination Questions</em>.</p>
<p>I've found a way to specify a literal instead of an address:</p>
<pre><code>A START
 OUT ='Hello, World!',=13
 RET
 END
</code></pre>
<h2>Previous version</h2>
<h3>55 bytes</h3>
<pre><code>Z START
 OUT A,B
 RET
A DC 'Hello, World!'
B DC 13
 END
</code></pre>
<h2>Links (they are in Japanese)</h2>
<ul>
<li><a href=""https://www.jitec.ipa.go.jp/1_20casl2/casl2dl_001.html"" rel=""nofollow noreferrer"">Official simulator</a></li>
<li><a href=""https://www.officedaytime.com/dcaslj/"" rel=""nofollow noreferrer"">One of unofficial online simulators</a></li>
</ul>
","","user100411"
"223789","<p><a href=""https://en.m.wikipedia.org/wiki/Regular_number"" rel=""nofollow noreferrer"">Hamming number</a> (also known as regular number) is a number that evenly divides powers of 60.
<a href=""https://codegolf.stackexchange.com/q/7/100411"">We already have a task to do something with it.</a>
This time we are going to do the opposite.</p>
<p>I define non-Hamming number as in: <span class=""math-container"">\$n\$</span> is non-Hamming number if and only if it satisfies following two conditions:</p>
<ul>
<li><span class=""math-container"">\$n\$</span> is positive integer, and</li>
<li><span class=""math-container"">\$n\$</span> does not divide powers of 60 evenly; i.e. <span class=""math-container"">\$60^m\mod n\neq0\$</span> for all positive integer <span class=""math-container"">\$m\$</span>.</li>
</ul>
<p>Make a program, a function, or a subroutine that does one of these:</p>
<ol>
<li>takes no input to print/return/generate a list of non-Hamming numbers infinitely, or</li>
<li>takes a positive integer <span class=""math-container"">\$n\$</span> as input to print/return/generate <span class=""math-container"">\$n\$</span>th non-Hamming number (can be either 0-indexed or 1-indexed), or</li>
<li>takes a positive integer <span class=""math-container"">\$n\$</span> as input to print/return/generate a list of first <span class=""math-container"">\$n\$</span> non-Hamming numbers.</li>
</ol>
<p>4.<s> takes a positive integer <span class=""math-container"">\$n\$</span> to print/return/generate non-Hamming number until <span class=""math-container"">\$n\$</span> (suggested by @Wasif, can be inclusive or not; i.e. non-Hamming numbers that are either <span class=""math-container"">\$&lt;n\$</span> or <span class=""math-container"">\$\leq n\$</span>).</s> abolished by @rak1507.</p>
<h1>Example</h1>
<p>This example shows how program/function/subroutine that does 3rd task should work:</p>
<ul>
<li>Input: <code>5</code></li>
<li>Output: <code>7, 11, 13, 14, 17</code></li>
</ul>
<h1>Rules</h1>
<ul>
<li><a href=""https://codegolf.meta.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods"">I/O method is done by your desired format.</a></li>
<li>If you are answering one of 2nd or 3rd task, you can assume that input is a non-negative integer.</li>
<li>No external resources.</li>
<li><a href=""https://codegolf.meta.stackexchange.com/questions/1061/loopholes-that-are-forbidden-by-default"">Standard loopholes apply.</a></li>
<li>If your program/function/subroutine fails to output huge non-Hamming numbers because of overflow (or similar boundary) but is theotically valid, it is acceptable.</li>
<li>Shortest code in bytes wins. However, if someone have won entire of this post, you can still try to win among languages and tasks.</li>
</ul>
<h1>P.S.</h1>
<p>It's actually <a href=""http://oeis.org/A279622"" rel=""nofollow noreferrer"">A279622</a>.</p>
","","user100411"
"224337","<h1><a href=""https://www.gnu.org/software/gawk/manual/gawk.html"" rel=""nofollow noreferrer"">AWK</a>, 92 bytes</h1>
<p>Previously 93 bytes that outputs intfinite list.</p>
<p>Given a line of an integer <span class=""math-container"">\$n\$</span>, outputs first <span class=""math-container"">\$n\$</span> nunbers.</p>
<p>Pretty naïve.</p>
<pre><code>{for(k=j=7;$0--;k=++j){for(;k%2-1;k/=2);for(;!(k%3);k/=3);for(;!(k%5);k/=5);if(k&gt;1)print j}}
</code></pre>
<p><a href=""https://tio.run/##SyzP/v@/Oi2/SCPbNsvW3FrFQFfXOttWWztLEyxqna1qpGtona1va6RpDRZQ1MhWNdYEiRgjiZiCRYBkZppGtp2hZkFRZl6JQlZt7f//hgYGAA"" rel=""nofollow noreferrer"" title=""AWK – Try It Online"">Try it online!</a></p>
","","user100411"
"225044","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Filename: 19 bytes + Content: 0 bytes = 19 bytes.</h1>
<p>Now the debut of lazypxem.min.posixism.</p>
<ul>
<li>Filename (escaped some): <code>._.c.w\001.-.c.c.a.s.p</code></li>
<li>Content is empty.</li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCclgVCRGpeC1nKNUrXVZAV2BBAVD4JCgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/79m2s@Pqhf3dbnt/197e3zcMo7PT3u/qutspAGp09@x24VPghkh1J@ZkYAfPSNcLBdOdjobjEJ1VHspnZ1bFxOHbyEWPbtgZ@t1sls86w8HA9h1yqDnui@ZPPA8VDrM0m02EL8rXXy1BxAkfUkcLBZxExIh95NI8HqhzYWH2R712@/D9umoVdH17AV58@167Pfv5UPl2dXVSubao2UCCGH0pf//6cHNy9b32rV6S3@YCstAbamWzfFVDNBoGvWk8k7/EInf/Q8IdTDw7dFHwxPmHoxCGr8OxE4y8XpjN2l7PDpD6iCQxorIgHgtzyZLYV8pm6z/OzirnVavEbWBmzzGDp143NPkYMb4EcDtPQyR@JswyZZYzYKgw9JzDLIT@xfaQkEFd2wtcYTZbpXHVXHo6C1wHSYE21d40M4A/75rEFb6jFhPiXMCzEO1ggoeQhLKP1JdwQmfhGKmVADUburrfQlKj6eda0uxx7I5QPlau3Ru7ohaVyqbYNuum1vT5/ALM3efzTV/TzHbZnMfTxj3TQ2lB1EaaGa6CRX0To5SK2jAF7u1vYpSCtJ9mLG5iVN8RtV6acXsT2we@hzQGljspbHdvE6MUhIP0@rY3MUrBxZc04@4mRnWIWDfttr6JUR0i5qZ93N/EKDVEbZw2XdjEKAXp1zTj3iZGC@DPNM1Y3MRoAXx8SzPub2K0AP68p5Og/wYDd@z0onc2MUohtmHasrGJUR3cGaTjvbeJUR3ccdKmi5uYAemX0xi4qKawbeDLpDHwWkxj4MwWw@bSDHfsZLtwSNKUvF@16JQ15dR0oP9OmXQT55ukiZs@@5vPNYmoNbebhSbVgCvQ8jno1ul6f5c8U8xEWuN1@vZuOy0tE9XNtgcK5@YbNLuGNFNr3CdUVuKihhxtTYfqIykx37g/VlpgFzzAjXgILhSOEXPhKeGJcZTPAYl7FluH9Yy4m6KmMLQNLkCKI5hlogBGZW1kti8BjdmUY1Dwweh8MDpadcG4xragJHEojU0xis0dI6YatjjOjcoLJCzz0IqZOlCafgOp762cw7SF4xUElsTj04oXq3GSDWwjntN4cXYsNQdvS5cfKvPct/Aytecm8fgKkamWIS7TJLk8ssu4xfE5TTTx39iV2JMk678TlNDi6FhJiNbrYs9uu55lCU0qkIivBDdGQ7/30Aleuu44HMgZcUttMe4mxcTUHmMeVo/NiCrNOSNd4CZNaPaqS8GkjQWWEEFh0kcwFkrCsaBws2SeGFzn/xNzVdTaY9d@5hPIWxkL3nA4Qv4wRAM77Dz1/EcBWKXFcmVMtDamhPGrfKzGkwyf6HwswvifZLzFx8ADfch7UOoOx0mYwBnTJJFkfjSoNJcI@fWfevn8xJLyD/lO/rWp6zSvwqiTt/NBfiR9qnyrX5/Ur61fwbhjSV9OTmv1CEIvB67rkGAM1yTMh/PuxO@EvaGPLnCVRN8bz8rfmLSsqgnDliwv6SeYRGM3nIx9lJGBZ0n5a0kB/JAuKX8vKUzdknC9RmAmVbpCvsVXJLqygIu7oapmwny15JngColG454fosoSPcVXyt2HbrgGej3fPdSPRL2krjj2NTYgUpOn/57XlgxVIAhkDUIxtGn@BzM/8a0V22V8vvDofCZAvuA6xK6avRCtmB7B0l@fep6LMxBSMlyNJEwiAGezCb4F2pLg45pyo1QVj7AscsHoxgIe07M8138Mn/ANMVnV1OC@WjuwPJNMMK5asJYgHOMbpSbLCiXkX4GvSziqykaxZOyQ@dJID6xf4NM1ww/4XKkod8pPEp1bQv6hhOpQ9jZy3E5vAPdHWKz76I7hO5qEglmxQNy8Ax@YL6xwwV1j76CSzVYOdoqEN5IJWOVf4d5obO@0RNgD7izDUCuJcNxrwIKLsRg1ICAVy9oukChmgat92PMn7pxFnLFWDowi8Bzu7BEGxcaXZmPN5KeFfxJUUY2iybJnXuC73M@VtXYW0b/A12tBCBaE29VkvUBO@soNiWqWzi32LV7HEP4@K1ulr6ot64Ylis1qLQ5CHlp83m@thH68NA0Rxbw/SY7VwIrB12XTbHozxZcKt5WBdmQRzsDskpfIjXV5wHgT2Zul0NsfhQ5/L/T@4QaT4m6oa66Ei8U8Qe9aa6QBkJ6hWBC8fC4wo68Q29iGgMYl/her8AtsH4G4bLNIlG6TiJjLHSNnUbWQw/aBTnIsZ/BdCeo/aX39pGNuk8Xifs4jUDFgRshvwcafh2oUSujOHcM9qPfSC0CNwAqFJcU@6h96R/0tr@Rt9Ut8rPEx5Gge77DgmaW3oBzgsYb5TtCFhxTfqoVZhwjS0rkuRGKNK9mxhdnm4@kPbycrPnTik15jZxB7wqpj/5nOOhMYORKSkNotLA4nuJdc4Cxhb7gVb1xey/GhF0Hd8np@lmVTlvsHmO3BrGYh4nH0@8kUBsT8/SrYah3Xc@GZC2mGTkh2J@gPWa4dgLhM447gB02Na5QptEm858vxvDWXTHZQsfc93IQ6iP8PYMIaZDhgL1oAxxvgMoSOgdS6scYwm@ERvK7L8GTvOYob9gauMuqMJspL8G468C4nqykw/vx@RaHd8@B2aqwEmN2QoyK7pfC7kDSzX59BF7IttUCNPaO4vWsUkRTZsiXq85N6NTk0bDjYhU//d/oTrUl02EeABMB5L3CSJOpwxYIfAQVxerCwNRQUUSfSbGqPHyEGtSlKMjdFn/mqmdVf9L8"" rel=""nofollow noreferrer"">Try it online!</a>
The footer has <code>|od -vtu1</code> to be commented; uncomment it to inspect the exact output.</p>
","","user100411"
"225045","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + 21 bytes (filename); requires to be executed on console.</h1>
<ul>
<li>Content is empty.</li>
<li>Filename (escaped): <code>\001.r.v.w.s\b2.p.d.a11.o</code></li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5kxCclgVCRGpei1nKNUrXVZAV2BBAVD4CRB0cD56r17JkEg9HbdrlUy89vP2Y95@Bw@/fr8ede2nW1XL@7tdNt7O/bW3p5hGJ3t9l5X191OEVCju2u3i59CN0KqOzbHAzt8RrpeLJruZDQMInRWfaicnVlVE0dvIxc9ulFn6HfzeT7rDAcD23fIgea4L5o/9jxUPMjTfD4Vvqhcf7UEEad8SB3NFXASEWP2kcuzZKDOhLnZH/Xa7cP362OrqOtbc/Di2/fa7dnPh@q3q6uT6rVFzQYSxPhL5fvXh5uTq@@1b/Wy/DYTkIXeUCuf56saotEw7E2SmfwlEbn7HxLuYOzZkYvCJ84/HEUwfB0GTjjyelE@b3s9O0TqI5LEmMqCeCTMJEtiXymfr/84O6ueH1tlbgMze44ZPvW6kcnHiPGlgNt5GiLxM2GWKbOcA0PFoecc5CH0L7aHhBzq2l7oCtPpMo2r5tKTaeg6SAq1ifammSH8vGsSV/iOWkyIcwHPXLSDCR5CEio@Ul@iMZ1GAVKrIWo2dHWvhaRG099sSdPHwB2hQqJcuzd2RC0uV0yxbdZNrenz@QWYuy8Umr6mme2KOUumjXumh9KiqI00M1oGS/o6RikVtWEG3N1bxygFaT/LWFrHqL4tar0s49Y6tgd8D1kMLHcy2M7uOkYpCIfZ9W2tY5SCiy9Zxp11jOoQsW7WbX0dozpEzM36uLeOUWqIWpA1XVzHKAXp1yzj7jpGi@DPJMtYWsdoEXx8yzLurWO0CP68Z5Og/wYDd@zsorfXMUohtlHWsrGOUR3cGWTjvbuOUR3ccbKmS@uYAemXsxi4qGawLeDLZTHwWsxi4MwGw2bSFHfsdLtwSNqUvF@1@JQ15cR0oP9OmXQTF5qkiZs@@y1sNomoNbeaxSbVgCvUCpvQrZPV/i57ppiLtcbr5O3ddlpaLq6bbQ8Uzsw3aHYNaabWuE@prMRFDTnaig7VR1JqvnF/pLTALniAG8kQXCgeIebCU8qT4KiwCSTuWWId1jPiboqawtA2uAApjmGWi0MYVbSR2b4ENGFTjkDBB6Pzwehox3PGFbY5JY1DOTDFODF3hJhq2OI4N6rMkajCQyvm6kBp@g2kvrc2HaYtCpYQWBKPTytZrMZJNrCNeE6TxdmJ1Ay8LV9@qCxw36LLzJ6bxuMrROa4AnGZpMnlkV3ELYnPaaqJ/09cSTxJs/47QQnNj46lhGi9LvbstutZltCkAon5SnBjNPR7D53wpesG0UDOiRtqi3E3KSam9pjwsHpsxlRpzhjpAjdpSrOXXQrHbSywhAgKkz6EsVAWjgSFmyWz1OAq/5@Yj0WtHbj2M59A3ipY8IbDEfKHERrYUeep5z8KwCrNlytjorUxJYxf5WM1meT4ROdjEcb/pOMNPgYe6EPeg1J3GKRhAmdMk8SS@dGg0kwi5Nd/6pXzE0tq6jotBIWXwmshbLaLhVHBKdiUFobSp88o4RFE/k1@hU/Vb/Xrk/q19SsMOpb05eS0Vo8hKXLoug4JA7hAYT6cdcd@J@oNfXSBj0n8vfGs/I1Jyzo2YdiS5QX9BJM4cKNx4KOcDDwLyl8LCuAHdEH5e0Fh6haE6xUCM6nSJfItviLxlQVc3A1VNVPmqwXPGFdJPAp6foSqC/QUXyl3H7rhguj1fPdAPxT1srrk2NfEgEhNXhj3vOpkqA9BICsQSqB18z@Y@bFvLdmu4PO5R@dTATIJFyV2Ce1FaMn0CJb@@tTzXJyDkJLhciRhEgM4nY7xLdAWBB/XlBvlWPEIyyIXjG8s4DE9y3P9x@gJ3xCT1VMNbrK1fcszyRjjYwvWEkYBvlFqsqxQQv4V@LqEw2PZKJWNbTJbGOmB9Qt8umL4AZ8rVeVO@Unic0soPJRRHRrCRo7b6Q3gZgmLdR/dAL6jcSSYVQvEzTvwgfnCShrcNXb3q/l8dX@7RHiLmYBV/xXujcbWdkuE3eHOMgy1mgonXQgsuJSIUQMCUrWsrSKJExa49Ec9f@zOWMQZa3XfKAHPwfYuYVBifGE20Ux@WvgnQVXVKJkse@YFvtv8ubTWzjz6F/h6JQjhnHC7nKwXyElfuSFxzdK5xb7F6xjC32dlq/RVtWXdsESxWa3FQchDi8/7raXQBwvTEFHM@5NsshpYMvi6aJp1byb4UuG2ctCOLMI5mF3yErmxLvcZbyp7sxB6@6PQwe@F3j/cYFLcDXXFlWi@mCfoXWuFNADSMxQLgjfRBWb0JWIb2xDQpMT/YhV@ge1DEJdtFonybRoRc7FjbFpULW5ie18nmyxn8F0K6j9Zff20Y27TxeL@pkegYsCMUNiAI6EA1SiU0Z0bwA2p99ILQY3ACoUlxT7sH3iH/Q2v7G30y3ys8THkaJbssOCZpbegHOAZh/lO0EXpxixMO0SQFs51IRIrXOmOLUzXn1V/eFVZyXGU3AE0djqxx60a@M902hnDyJGQhNRucX5swY3lAucJe90teePyWk6Owxjqltfzsyybstzfx2wPZjULEU@i30@nMCDm71fBVuu4ngsPYEgzdEK6O0F/yHJtH8RlmnQEP2hqXKNMoU2SPV9O5q2ZZLKDir384Y7UQfyvA2PWIMMBe@sCGKyBixA6BlLrxgrDdIpH8O6uwGO@5yhu1Bu4yqgzGisv4bvpwIudLKfA@PPLFkV2z4N7q7EUYHZ3jkvs/sJvSdLUfn0GXci21CI1do3S1o5RQlJsy5aoz07qx@mhYcORL3z6v9Ofak2jwz4CJADOe4GTJFGHyxf8E1CYpAcLG0NBEXUiTSd28AgxqE1QmrkJ@vTrvw"" rel=""nofollow noreferrer"">Try it online!</a></p>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5kxCclgVCRGpei1nKNUrXVZAV2BBAVD4CRB0cD56r17JkEg9HbdrlUy89vP2Y95@Bw@/fr8ede2nW1XL@7tdNt7O/bW3p5hGJ3t9l5X191OEVCju2u3i59CN0KqOzbHAzt8RrpeLJruZDQMInRWfaicnVlVE0dvIxc9ulFn6HfzeT7rDAcD23fIgea4L5o/9jxUPMjTfD4Vvqhcf7UEEad8SB3NFXASEWP2kcuzZKDOhLnZH/Xa7cP362OrqOtbc/Di2/fa7dnPh@q3q6uT6rVFzQYSxPhL5fvXh5uTq@@1b/Wy/DYTkIXeUCuf56saotEw7E2SmfwlEbn7HxLuYOzZkYvCJ84/HEUwfB0GTjjyelE@b3s9O0TqI5LEmMqCeCTMJEtiXymfr/84O6ueH1tlbgMze44ZPvW6kcnHiPGlgNt5GiLxM2GWKbOcA0PFoecc5CH0L7aHhBzq2l7oCtPpMo2r5tKTaeg6SAq1ifammSH8vGsSV/iOWkyIcwHPXLSDCR5CEio@Ul@iMZ1GAVKrIWo2dHWvhaRG099sSdPHwB2hQqJcuzd2RC0uV0yxbdZNrenz@QWYuy8Umr6mme2KOUumjXumh9KiqI00M1oGS/o6RikVtWEG3N1bxygFaT/LWFrHqL4tar0s49Y6tgd8D1kMLHcy2M7uOkYpCIfZ9W2tY5SCiy9Zxp11jOoQsW7WbX0dozpEzM36uLeOUWqIWpA1XVzHKAXp1yzj7jpGi@DPJMtYWsdoEXx8yzLurWO0CP68Z5Og/wYDd@zsorfXMUohtlHWsrGOUR3cGWTjvbuOUR3ccbKmS@uYAemXsxi4qGawLeDLZTHwWsxi4MwGw2bSFHfsdLtwSNqUvF@1@JQ15cR0oP9OmXQTF5qkiZs@@y1sNomoNbeaxSbVgCvUCpvQrZPV/i57ppiLtcbr5O3ddlpaLq6bbQ8Uzsw3aHYNaabWuE@prMRFDTnaig7VR1JqvnF/pLTALniAG8kQXCgeIebCU8qT4KiwCSTuWWId1jPiboqawtA2uAApjmGWi0MYVbSR2b4ENGFTjkDBB6Pzwehox3PGFbY5JY1DOTDFODF3hJhq2OI4N6rMkajCQyvm6kBp@g2kvrc2HaYtCpYQWBKPTytZrMZJNrCNeE6TxdmJ1Ay8LV9@qCxw36LLzJ6bxuMrROa4AnGZpMnlkV3ELYnPaaqJ/09cSTxJs/47QQnNj46lhGi9LvbstutZltCkAon5SnBjNPR7D53wpesG0UDOiRtqi3E3KSam9pjwsHpsxlRpzhjpAjdpSrOXXQrHbSywhAgKkz6EsVAWjgSFmyWz1OAq/5@Yj0WtHbj2M59A3ipY8IbDEfKHERrYUeep5z8KwCrNlytjorUxJYxf5WM1meT4ROdjEcb/pOMNPgYe6EPeg1J3GKRhAmdMk8SS@dGg0kwi5Nd/6pXzE0tq6jotBIWXwmshbLaLhVHBKdiUFobSp4RDEPk3@RU@Vb/Vr0/q19avMOhY0peT01o9hpTIoes6JAzg@oT5cNYd@52oN/TRBT4m8ffGs/I3Ji3r2IRhS5YX9BNM4sCNxoGPcjLwLCh/LSiAH9AF5e8FhalbEK5XCMykSpfIt/iKxFcWcHE3VNVMma8WPGNcJfEo6PkRqi7QU3yl3H3ohuuh1/PdA/1Q1MvqkmNfEwMiNXlZ3POak6E6BIGsQCiB1s3/YObHvrVku4LP5x6dTwXII1yT2BW0F6El0yNY@utTz3NxDkJKhsuRhEkM4HQ6xrdAWxB8XFNulGPFIyyLXDC@sYDH9CzP9R@jJ3xDTFZNNbjH1vYtzyRjjI8tWEsYBfhGqcmyQgn5V@DrEg6PZaNUNrbJbGGkB9Yv8OmK4Qd8rlSVO@Unic8tofBQRnVoBxs5bqc3gHslLNZ9dAP4jsaRYFYtEDfvwAfmCytocNfY3a/m89X97RLhDWYCVv1XuDcaW9stEfaGO8sw1GoqnPQgsOBSIkYNCEjVsraKJE5Y4Mof9fyxO2MRZ6zVfaMEPAfbu4RBifGF2UQz@WnhnwRVVaNksuyZF/hu8@fSWjvz6F/g65UghHPC7XKyXiAnfeWGxDVL5xb7Fq9jCH@fla3SV9WWdcMSxWa1FgchDy0@77eWQh8sTENEMe9PsslqYMng66Jp1r2Z4EuF28pBO7II52B2yUvkxrrcZ7yp7M1C6O2PQge/F3r/cINJcTfUFVei@WKeoHetFdIASM9QLAheRBeY0ZeIbWxDQJMS/4tV@AW2D0FctlkkyrdpRMzFjrFpUbW4ie19nWyynMF3Kaj/ZPX10465TReL@5segYoBM0JhAw6EAlSjUEZ3bgD3o95LLwQ1AisUlhT7sH/gHfY3vLK30S/zscbHkKNZssOCZ5begnKARxzmO0EXpRuzMO0QQVo414VIrHClO7YwXX9U/eFNZSWHUXID0NjZxJ62auA/02lnDCNHQhJSu8X5oQX3lQucJ@xtt@SNy2s5OQxjqFtez8@ybMpyfx@zPZjVLEQ8iX4/ncKAmL9fBVut43ouPH8hzdAJ6e4E/SHLtX0Ql2nSEfygqXGNMoU2SfZ8OZm3ZpLJDir27ocbUgfxvw2MWYMMB@ylC2CwBi5C6BhIrRsrDNMpHsGruwJP@Z6juFFv4CqjzmisvITvpgPvdbKcAuPP71oU2T0Pbq3GUoDZzTkusdsLvyNJU/v1GXQh21KL1Ng1Sls7RglJsS1boj47qR@nh4YNB77w6f9Of6o1jQ77CJAAOO8FTpJEHa5e8E9AYZIeLGwMBUXUiTSd2MEjxKA2QWnmJujTr/8C"" rel=""nofollow noreferrer"">Try it online!Try it online!</a></p>
<h2>How it works</h2>
<p>When single, it just outputs <code>1</code>; when doubled, it appends backspace character and <code>2</code>; this is how it looks like as if it were doubled. If this would violate the rules, I'm sorry.</p>
","","user100411"
"225051","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/hakatashi/esolang-box#pxem"" rel=""nofollow noreferrer"">esolang-box notation</a>), 8 bytes.</h1>
<p>In this docker environment Pxem program, officially given as a pair of filename and its content, is given as a file:</p>
<blockquote>
<p>The first line is the file name of the pxem code.</p>
<p>The rest is the content of the pxem code.</p>
</blockquote>
<p>Original is</p>
<pre><code>.f.+.n
.
</code></pre>
<p>which is translated to filename <code>.f.+.n</code> with content <code>.</code>.
It outputs 46, which is ASCII code for <code>.</code>.</p>
<p>When doubled:</p>
<pre><code>.f.+.n
..f.+.n
.
</code></pre>
<p>which is translated to filename <code>.f.+.n</code> with content <code>..f.+.n\n.</code>.
It outputs 92.</p>
<h2>How it works</h2>
<pre><code>.f pushes content in reverse order
.+ does push (pop+pop) if size&gt;=2; nop otherwise
.n does printf %d pop
</code></pre>
<p><a href=""https://tio.run/##jVhtV9rKFv7eXzGkkcyQhGQQFYlRKXgt5yhVa11WQFcIQcEQOElQNHD@eu@eSRAIvV23a7XMPPvZs/fsl8lMn4OnX58/25Zl79pOZ69X2C9Qy@o525Zd2rZ7RVrQqb1T0vec3UKv8ClwQqQ6E2MytIJnpOuFguFMxyM/RGfVh8rZmVk1cPg2dtCjE9ojr5fN8pk9Gg4tr0sOta7zonkT10WFwyzNZhPli8r1V1MQccJD6nixABcRMWI/cnkeD9S5sDD7o1G/ffh@XTMLur69AC@@fa/fnv18qH67ujqpXpvUaCJBjL5Uvn99uDm5@l7/1ijLb3MBmegNtbNZvqsRGo@C/jSeyV9ilbv/oeEMJ64VOih44vzROITh68jvBmO3H2azltu3AqQ@IkmMqCyIx8JcMiX2K2WzjR9nZ9XzmlnmNjCz1zWCp34vNPgYMV4COPbTCImfCbNMmeUMGCqM3O5hFkL/YrlIyKCe5QaOMJutyvjSXHs6C5wukgJtqr1pRgD/vGsSX/AdtZkSZwFnoWpjgkeQhIqH1JdwQmehj9RqgFpNXd1vI6nZ8nJtafboO2OUjxfX7ou7ohaVK4bYMRqG1vL4/ALM3efzLU/TjE7FmMfT5j1bh9KCqI01I1wFS/omRikVtVEK3NvfxCgFbS9NLG1iVN8RtX6auL2J7QPvIY2BZTuF7e5tYpSCcpDe3/YmRim4@JIm7m5iVIeI9dJu65sY1SFiTtrH/U2M0qKo@WnThU2MUtB@TRP3NjE4L0QotBSxtInRAvj4libub2K0AP68p5Og/wYDd6z0pnc2MUohtmHacnETozq4M0zHe28Tozq4002bLm1iRUi/nMbARTWFbQMvk8bAazGNgTNbDJtLM2xbyXHRJUlT8n7VolPWlFOjC/13yrRbON8iLdzy2L/5XIuIWmu7VWhRDViBls9Bt07X@7vsGmIm0pqv07d3q9vWMlHD6Liw4Nx4g2bXkGZozftEykpc1FBXW1tD9ZCUmG/eHyttsAse4GY8BBcKx4i58JRwYhzlcyDinsXWYT9j7qaoKQztgAuQ4ghmmSiAUUUbG51LQGOacgwLfBC7H8SuVlsQ12gLSRKHsm@IUWzuGLGl4YjjbFRZIGGFh1bMNEDS8ppIfW/numy10F9BYEs8Pu14sxoXWUAb85zGm7NirTl4W778WDLPfQsvU2duEo@vEJlaBeIyTZLLI7uMWxyf02Ql/jd2JfYkyfrvFCW0@HSsJETr97BrdRzXNIUWFUjEd4Kb45HXf7CDl57jh0M5I26pbcZuUUwM7THmsHpsRVRpzZnoArdoIrNWXQomHSywhAgK0z6CsVAWjgWFmyXzxOA6/0/kmqh1fMd65hPIWwUL7mg0Rt4oREMrtJ/63qMAVGmxXRkTrYMpYXyVj9V4kuETnY9FGP@TjLf4GDjQh7wHpd7IT8IEzhgGiSTjo0GluUTIr/80KucnppTv5eW8J32qfmtcnzSuAZA@fUaLmSAmI5HTW95iLvwKfNuUvpyc1hsRpEQOHKdLAh@uT5gP572JZ4f9kYcucI1E35vPyt@YtM2aAcO2LC/lJ5hEvhNOfA9lZOAsJX8tJYAf0qXk76WELbcUXK8JmEmVrohv8RWJrkxgcTdU1UjIV0vOBFdJNPb7XoiqS/QUXyl3H2vD9dDte86hfiTqZXXFsa@xAZEavCzuec3JUB2CQNYgFEOb5n8w8xPPXLFdwecLj85nAuQRrknsCtoP0YrpMWz99anvOjgDISWj1UjCJAJwNpvgW5AtBR6uKzdKTXEJyyJXjG5M4Biu6TreY/iEb4jBqqkO99j6gekaZIJxzYS9BKGPb5S6LCuUkH8Fvi/hqCYXS@XiDpkvjfTB@gU@XTP8gM@VqnKn/CTRuSnkH8qoAe1goa5j94dwr4TNOo@OD7/jSSgYVRPUjTvwgfnCChrcLe4dVLPZ6sFOifAGMwCr/ivcF5vbO20RzoY7s1hUq4ly3INAwaVYjRYhIFXT3C6QKKbAlT/sexNnziLOqNWDYgk4hzt7hEGx8aXZeGXy08Q/CaqqxZLBsmdc4Lvcz5W92ovoX@DrtSAEC8HtarJeICcD5YZEdVPnFgcmr2MI/4CVrTJQ1bZ5wxLFZvU2ByEPbT4ftFdC7y9NQ0Qx70@SYzWwYvB12TSb3kzxpcJtZaAdWYQzMLvkJXJjXh4wbqJ7s1R6@6PS4e@V3j/cYFrcDXXNlXCxmSfoXXNNNATRMxQLghfRBWbyFWEHWxDQuMT/YhV@ga0jUJctFonybRIRY3li5EyqFnLYOtBJjuUMfleC@k96vUHSMbfJZvEg5xKoGDAj5Lfgg5CHahTK6M7x4X7Uf@kHsIzACoUlxToaHLpHgy237G4Nynys8THkaB6fsOCZqbehHOARh/lJ0IMHFj@ThZlNBGnpXA8iscZanNizzUfVH95UZvwxim8AcMGCjxN726q@90xn9gRGXQlJSO0VFl8tuLBc4Cxhj7sVdxxezPHXMILC5QX9LMuGLA8OMDuEWdFCyOPwD5IpDIjx@22w7XYd14H3L@QZWiE5nqBBZLl@AOoyjVuCf2nqfEWZQp/Eh74cz9tzyWBfKvbwhyuSjfh/DkxYh4yG7KkLoL8BLmPYLSK1UVwjzGZ4DM/uCrzl@13FCftDRxnb44nyErwbXXiwk9UcFP/8sEWh1Xfh2lpcCTC7Okcldn3hlyRpZr0@w1rIMtUCLe4VS9u7xRKSIks2RX1@0qglXw0LvvjCp/87/8mqSXTYjwAJgA@@wEWSqMPdC/4IKIjTg4WtkaCIOpFmU8t/hBjUpyjJ3BR9@vVf"" rel=""nofollow noreferrer"">Try it online!</a></p>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKhKjUvBazlGq1rqsgK4QgoIhcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/25Zl79pOZ69X2C9Qy@o525Zd2rZ7RVrQqb1T0vec3UKv8ClwQqQ6E2MytIJnpOuFguFMxyM/RGfVh8rZmVk1cPg2dtCjE9ojr5fN8pk9Gg4tr0sOta7zonkT10WFwyzNZhPhi8r1V1MQccKH1PFCAScRMWIfuTyPB@pcWJj90ajfPny/rpkFXd9egBffvtdvz34@VL9dXZ1Ur01qNJEgRl8q378@3Jxcfa9/a5Tlt7mATPSG2tksX9UIjUdBfxrP5C@xyN3/kHCGE9cKHRQ8cf7ROITh68jvBmO3H2azltu3AqQ@IkmMqCyIx8JcMiX2lbLZxo@zs@p5zSxzG5jZ6xrBU78XGnyMGF8COPbTCImfCbNMmeUMGCqM3O5hFkL/YrlIyKCe5QaOMJut0rhqLj2dBU4XSYE21d40I4A/75rEFb6jNhPiXMCzELUxwSNIQsVD6ks4obPQR2o1QK2mru63kdRsebm2NHv0nTHKx8q1@@KuqEXliiF2jIahtTw@vwBz9/l8y9M0o1Mx5vG0ec/0UFoQtbFmhKtgSd/EKKWiNkqBe/ubGKUg7aUZS5sY1XdErZ9m3N7E9oHvIY2BZTuF7e5tYpSCcJBe3/YmRim4@JJm3N3EqA4R66Xd1jcxqkPEnLSP@5sYpUVR89OmC5sYpSD9mmbc28RgvxCh0FKMpU2MFsDHtzTj/iZGC@DPezoJ@m8wcMdKL3pnE6MUYhumLRc3MaqDO8N0vPc2MaqDO9206dImVoT0y2kMXFRT2DbwZdIYeC2mMXBmi2FzaYZtK9kuuiRpSt6vWnTKmnJqdKH/Tpl0C@dbpIVbHvubz7WIqLW2W4UW1YAr0PI56Nbpen@XXUPMRFrzdfr2bnXbWiZqGB0XFM6NN2h2DWmG1rxPqKzERQ11tTUdqoekxHzz/lhpg13wADfjIbhQOEbMhaeEJ8ZRPgck7llsHdYz5m6KmsLQDrgAKY5glokCGFW0sdG5BDRmU45BwQdj94Oxq9UWjGtsC0oSh7JviFFs7hgx1bDFcW5UWSBhhYdWzDSA0vKaSH1v57pMW@ivILAkHp92vFiNkyxgG/OcxouzYqk5eFu@/FCZ576Fl6k9N4nHV4hMrQJxmSbJ5ZFdxi2Oz2miif/GrsSeJFn/naCEFkfHSkK0fg@7VsdxTVNoUYFEfCW4OR55/Qc7eOk5fjiUM@KW2mbcLYqJoT3GPKweWxFVWnNGusAtmtCsVZeCSQcLLCGCwqSPYCyUhWNB4WbJPDG4zv8n5pqodXzHeuYTyFsFC@5oNEbeKERDK7Sf@t6jAKzSYrkyJloHU8L4VT5W40mGT3Q@FmH8TzLe4mPggT7kPSj1Rn4SJnDGMEgkGR8NKs0lQn79p1E5PzGlfC8v5z3pU/Vb4/qkcQ3AciyIyUjkzC1vMRd@Bb5tSl9OTuuNCBIiB47TJYEPlyfMh/PexLPD/shDF7hGou/NZ@VvTNpmzYBhW5aX9BNMIt8JJ76HMjLwLCl/LSmAH9Il5e8lhalbEq7XCMykSlfIt/iKRFcmcHE3VNVImK@WPBNcJdHY73shqi7RU3yl3H3ohsuh2/ecQ/1I1MvqimNfYwMiNXhR3POKk6E2BIGsQSiGNs3/YOYnnrliu4LPFx6dzwTIIlyS2AW0H6IV02NY@utT33VwBkJKRquRhEkE4Gw2wbdAWxI8XFdulJriEpZFLhjdmMBjuKbreI/hE74hBqulOtxi6wema5AJxjUT1hKEPr5R6rKsUEL@Ffi6hKOaXCyViztkvjTSB@sX@HTN8AM@V6rKnfKTROemkH8oowY0g4W6jt0fwq0SFus8Oj58x5NQMKomiBt34APzhZUzuFvcO6hms9WDnRLh7WUAVv1XuC82t3faIuwMd2axqFYT4bgDgQWXYjFahIBUTXO7QKKYBS78Yd@bOHMWccZaPSiWgOdwZ48wKDa@NBtrJj9N/JOgqlosGSx7xgW@y/1cWau9iP4Fvl4LQrAg3K4m6wVyMlBuSFQ3dW5xYPI6hvAPWNkqA1VtmzcsUWxWb3MQ8tDm80F7JfT@0jREFPP@JDlWAysGX5dNs@nNFF8q3FYG2pFFOAOzS14iN@blAeNNZG@WQm9/FDr8vdD7hxtMiruhrrkSLhbzBL1rrpGGQHqGYkHwHrrAjL5C7GALAhqX@F@swi@wdQTissUiUb5NImIsd4ycSdVCDlsHOsmxnMF3Jaj/pPUNko65TRaLBzmXQMWAGSG/BcdBHqpRKKM7x4fbUf@lH4AagRUKS4p1NDh0jwZbbtndGpT5WONjyNE83mHBM1NvQznAEw7znaAHzyu@JwszmwjS0rkeRGKNa7FjzzafVH94UZnxURSf/3C9gqOJvWxV33umM3sCo66EJKT2CoszC64rFzhL2NNuxR2HF3N8FkZQuLygn2XZkOXBAWabMCtaCHkc/kEyhQExfr8Mttyu4zrw@oU8Qysk2xM0iCzXD0BcpnFL8JOmzjXKFPok3vTleN6eSwY7qdizHy5INuL/GpiwDhkN2UMXQH8DXMawW0Rqo7jGMJvhMTy6K/CS73cVJ@wPHWVsjyfKS/BudOG5TlZzUPzzsxaFVt@FS2txJcDs4hyV2OWFX5GkmfX6DLqQZaoFWtwrlrZ3iyUkRZZsivr8pFFLTg0Lznvh0/@d/0RrEh32ESABcOALnCSJOty84EdAQZweLGyNBEXUiTSbWv4jxKA@RUnmpujTr/8C"" rel=""nofollow noreferrer"">Try it online!Try it online!</a></p>
","","user100411"
"225054","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Content: 0 bytes + Filename: 75 bytes.</h1>
<ul>
<li>Filename (escaped): <code>X.c.Z.w.i.c\001.+.a.s.v.t.p.m.o.d.A.c.Z.w.o.i.c\001.+.a.d.A.w.i.c\001.+.a.s.t.v.m.pX</code></li>
</ul>
<p><a href=""https://tio.run/##jVhtV9rKFv7eXzGkkUzI6yAqEqNS8FrOUarWuqyArpAEDYbAIUHRwPnrvXsmQSD0dt2u1TLz7GfP3rNfJjN9Dp9@ff5sW5a9a7vdvV5xv0gsq@duW3Z52@6VSFEn9k5Z33N3i73ip9CNkOJOjMnACp@RrheLhjsdDccROqs9VM/OzJqBo7eRix7dyB4GvXyezezhYGAFjnioOe6LFkx8HxUP8ySfT5UvqtdfTY7HKQ8po8UCTCTyMf2RKvNkoMy5hdkfzcbtw/frulnU9e0FePHte@P27OdD7dvV1Unt2iRGC3F8/KX6/evDzcnV98a3ZkV6m3PIRG@ok8@zXQ3RaBh602QmfUlU7v6HhjuY@FbkovCJ8YejCIavw7ETjnwvyuct37NCpDwigY@JxPHH3FwwBfor5PPNH2dntfO6WWE2MLXnGOGT14sMNkaUlwKu/TRE/GeRWibUcg4MFYe@c5iH0L9YPuJyqGf5ocvNZqsytjTTns5C10FCqE21N80I4Z93TWALvqMOVWIs4CxUbSziISShGiDlJZqQWTRGSi1E7Zau7HeQ0GoHhY4wexy7I6Qmi2v3pV1eiytVg@8aTUNrB2x@AebuVbUdaJrRrRrzZNq6p@sQUuS1kWZEq2BZ38QIIbw2zIB7@5sYIaAdZInlTYzoO7zmZYnbm9g@8B6yGFi2M9ju3iZGCCiH2f1tb2KEgIsvWeLuJkZ0iFgv67a@iREdIuZmfdzfxAgp8do4a7q4iREC2q9Z4t4mBucFD4WWIZY3MVIEH9@yxP1NjBTBn/dsEvTfYOCOld30ziZGCMQ2yloubWJEB3cG2XjvbWJEB3ecrOnyJlaC9EtZDFxUMtg28HJZDLzmsxg4s0WxuTDDtpUeF46YNiXrVy0@pU05NRzov1Oq3cZqW2zjdkD/VQttkdfa2@1im2jACjW1AN06Xe/vim/wuVhrvU7f3i2no@XiptH1YcG58QbNriHN0Fr3qZSWOK8hR1tbQwmQkJpv3R/LHbALHuBWMgQXiseIuvCUchIcqQUQMc8S67CfEXOT12SKdsEFSHEMs1wcwqiqjYzuJaAJTT6GBT6IzgfR0eoL4hptIUnjUBkbfJyYO0Z0aTjiGBtVF0hUZaHlc02QtIMWUt47BYeuFo1XENgSi08n2azGRBbQRiynyeasRGsO3lYuP5ZUmW/RZebMTePxFSJTr0JcpmlyWWSXcUvic5quxP4mriSepFn/naKAFp@OlYRoXg/7Vtf1TZNrE06M2U5wazQMvAc7fOm542gg5fgtpUPZbYJFQ3tMOLQe2zGR23MqusBtksqsVZfCSRdzNCGcTLWPYMxVuGNOZmbFeWpwnf8ncp3XumPXemYTyFsVc/5wOELBMEIDK7KfvOCRA6qw2K6ERa2LiUj5ChsrySTHJjob8zD@Jx1vsTFwoA9ZDwq94TgNEzhjGGIsGB8NKswFUfz1n2b1/MQUblVbvVNfVU@127pOVEm11FB9USN1pA7Uoeqo1ZQxXONQPKsVgd5AHd0Kn2rfmtcnzWtTEH6FY9sUvpycNpoxpE4KXdcRwzFcszAbznuTwI68YYAucF2Mv7ee5b@x2DHrBgw7krSUn2AxHrvRZBygnAScpeSvpQTwQ7KU/L2U0OWWgus1ATWpkBXxLb4S4ysTWMwNRTFS8tWSM8E1MR6NvSBCtSV6iq/ku4@14Rrpe4F7qB/xekVZcexrYoAnBiufe1abElQRx4lrEEqgTfM/qPlJYK7YruLzhUfnMw7yDdcpelX1IrRiegRbf33yfBfnIKTicDWSMIkBnM0m@BZkS0GAG/KNXJd9kWaRKcY3JnAM3/Td4DF6wjeiQauuAffdxoHpG@IE47oJewmjMb6RG5IkE1H8l2P74o7qUqlcKe2I86URD6xf4NM1ww/4XK7Jd/JPMT43OfWhgprQNhZyXNsbwP0TNus@umP4HU0izqiZoG7cgQ/UF1r44G5p76CWz9cOdsoia0QDsNq/3H2ptb3T4eEMuTNLJaWWKie9ChRcTtRICQJSM83tohgnFHgaRF4wcec04pRaOyiVgXO4sydSKDG@NJusLP408U8R1ZRS2aDZMy7wXeHnyl7tRfQv8PVaEMKF4HY1WS@Qk758I8YNU2cW@yarYwh/n5at3FeUjnlDE0VnjQ4DIQ8dNu93VkI/XpqGiGLWn2KB1sCKwddl02x6M8WXMrOVg3akEc7B7JKVyI15eUC5qe7NUuntj0qHv1d6/3CDajE3lDVXosVmnqB3zTXRAETPUCwIXk4XmMpXhF1sQUCTEv@LVvgFto5AXbJoJCq3aUSM5YlRMIlSLGDrQBcLNGfwuxLUf7Lr9dOOuU03i/sFX4SKATOcugUfDhWqkaugO3cM9yjvxQthGY4WCk2KddQ/9I/6W37F3@pX2FhjY8jRPDlhwTNT70A5wGMPs5OgBw8xdtRzM1vkhKVzPYjEGis9s7nZ5uPrD28vM/loJTcFuIjBR4y@gZVx8Exm9gRGjoAEpPSKi68bXGwucF6kj8AVd1xWzMlXM4bCZQX9LEmGJPUPMD2EadFCyJPw99MpDETj99ug23Vc34V3MuQZWiE9nqBBJKlxAOoSSVqCfWkabEWJQJ8kh76UzDtzwaBfKvofBHCVshH7T4QJ7ZDhgD6JARxvgMsYOiWkNEtrhNkMj@B5XoU3v@fIbuQNXHlkjybyS/huOPCwF1dzUPrzAxhFlufD9ba0EmB6xY7L9JrDLlPCzHp9hrWQZSpFUtorlbd3S2UkxJZk8vr8pFlPvxoW3Ay4T/93/tNV0@jQHw4SAB98jokEXoc7GvzhUJikB3NbQ07mdVGYTa3xI8SgMUVp5qbo06@iTvb/Cw"" rel=""nofollow noreferrer"">Try it online!</a></p>
<p><a href=""https://tio.run/##jVhtV9rKFv7eXzGkkUzI6yAqEqNS8FrOUarWuqyArpAEDYbAIUHRwPnrvXsmQSD0dt2u1TLz7GfP3rNfJjN9Dp9@ff5sW5a9a7vdvV5xv0gsq@duW3Z52@6VSFEn9k5Z33N3i73ip9CNkOJOjMnACp@RrheLhjsdDccROqs9VM/OzJqBo7eRix7dyB4GvXyezezhYGAFjnioOe6LFkx8HxUP8ySfT5UvqtdfTY7HKQ8po8UCTCTyMf2RKvNkoMy5hdkfzcbtw/frulnU9e0FePHte@P27OdD7dvV1Unt2iRGC3F8/KX6/evDzcnV98a3ZkV6m3PIRG@ok8@zXQ3RaBh602QmfUlU7v6HhjuY@FbkovCJ8YejCIavw7ETjnwvyuct37NCpDwigY@JxPHH3FwwBfor5PPNH2dntfO6WWE2MLXnGOGT14sMNkaUlwKu/TRE/GeRWibUcg4MFYe@c5iH0L9YPuJyqGf5ocvNZqsytjTTns5C10FCqE21N80I4Z93TWALvqMOVWIs4CxUbSziISShGiDlJZqQWTRGSi1E7Zau7HeQ0GoHhY4wexy7I6Qmi2v3pV1eiytVg@8aTUNrB2x@AebuVbUdaJrRrRrzZNq6p@sQUuS1kWZEq2BZ38QIIbw2zIB7@5sYIaAdZInlTYzoO7zmZYnbm9g@8B6yGFi2M9ju3iZGCCiH2f1tb2KEgIsvWeLuJkZ0iFgv67a@iREdIuZmfdzfxAgp8do4a7q4iREC2q9Z4t4mBucFD4WWIZY3MVIEH9@yxP1NjBTBn/dsEvTfYOCOld30ziZGCMQ2yloubWJEB3cG2XjvbWJEB3ecrOnyJlaC9EtZDFxUMtg28HJZDLzmsxg4s0WxuTDDtpUeF46YNiXrVy0@pU05NRzov1Oq3cZqW2zjdkD/VQttkdfa2@1im2jACjW1AN06Xe/vim/wuVhrvU7f3i2no@XiptH1YcG58QbNriHN0Fr3qZSWOK8hR1tbQwmQkJpv3R/LHbALHuBWMgQXiseIuvCUchIcqQUQMc8S67CfEXOT12SKdsEFSHEMs1wcwqiqjYzuJaAJTT6GBT6IzgfR0eoL4hptIUnjUBkbfJyYO0Z0aTjiGBtVF0hUZaHlc02QtIMWUt47BYeuFo1XENgSi08n2azGRBbQRiynyeasRGsO3lYuP5ZUmW/RZebMTePxFSJTr0JcpmlyWWSXcUvic5quxP4mriSepFn/naKAFp@OlYRoXg/7Vtf1TZNrE06M2U5wazQMvAc7fOm542gg5fgtpUPZbYJFQ3tMOLQe2zGR23MqusBtksqsVZfCSRdzNCGcTLWPYMxVuGNOZmbFeWpwnf8ncp3XumPXemYTyFsVc/5wOELBMEIDK7KfvOCRA6qw2K6ERa2LiUj5ChsrySTHJjob8zD@Jx1vsTFwoA9ZDwq94TgNEzhjGGIsGB8NKswFUfz1n2b1/MQUbm9VW71TX1VPtdu6TlRJtdRQfVEjdaQO1KHqqNWUMVzjUDyrFYHeQB0Jn2rfmtcnzWtTEH6FY9sUvpycNpoxpE4KXdcRwzFcszAbznuTwI68YYAucF2Mv7ee5b@x2DHrBgw7krSUn2AxHrvRZBygnAScpeSvpQTwQ7KU/L2U0OWWgus1ATWpkBXxLb4S4ysTWMwNRTFS8tWSM8E1MR6NvSBCtSV6iq/ku4@14Rrpe4F7qB/xekVZcexrYoAnBiufe1abElQRx4lrEEqgTfM/qPlJYK7YruLzhUfnMw7yDdcpelX1IrRiegRbf33yfBfnIKTicDWSMIkBnM0m@BZkS0GAG/KNXJd9kWaRKcY3JnAM3/Td4DF6wjeiQauuAffdxoHpG@IE47oJewmjMb6RG5IkE1H8l2P74o7qUqlcKe2I86URD6xf4NM1ww/4XK7Jd/JPMT43OfWhgprQNhZyXNsbwP0TNus@umP4HU0izqiZoG7cgQ/UF1r44G5p76CWz9cOdsoia0QDsNq/3H2ptb3T4eEMuTNLJaWWKie9ChRcTtRICQJSM83tohgnFHgaRF4wcec04pRaOyiVgXO4sydSKDG@NJusLP408U8R1ZRS2aDZMy7wXeHnyl7tRfQv8PVaEMKF4HY1WS@Qk758I8YNU2cW@yarYwh/n5at3FeUjnlDE0VnjQ4DIQ8dNu93VkI/XpqGiGLWn2KB1sCKwddl02x6M8WXMrOVg3akEc7B7JKVyI15eUC5qe7NUuntj0qHv1d6/3CDajE3lDVXosVmnqB3zTXRAETPUCwIXk4XmMpXhF1sQUCTEv@LVvgFto5AXbJoJCq3aUSM5YlRMIlSLGDrQBcLNGfwuxLUf7Lr9dOOuU03i/sFX4SKATOcugUfDhWqkaugO3cM9yjvxQthGY4WCk2KddQ/9I/6W37F3@pX2FhjY8jRPDlhwTNT70A5wGMPs5OgBw8xdtRzM1vkhKVzPYjEGis9s7nZ5uPrD28vM/loJTcFuIjBR4y@gZVx8Exm9gRGjoAEpPSKi68bXGwucF6kj8AVd1xWzMlXM4bCZQX9LEmGJPUPMD2EadFCyJPw99MpDETj99ug23Vc34V3MuQZWiE9nqBBJKlxAOoSSVqCfWkabEWJQJ8kh76UzDtzwaBfKvofBHCVshH7T4QJ7ZDhgD6JARxvgMsYOiWkNEtrhNkMj@B5XoU3v@fIbuQNXHlkjybyS/huOPCwF1dzUPrzAxhFlufD9ba0EmB6xY7L9JrDLlPCzHp9hrWQZSpFUtorlbd3S2UkxJZk8vr8pFlPvxoW3Ay4T/93/tNV0@jQHw4SAB98jokEXoc7GvzhUJikB3NbQ07mdVGYTa3xI8SgMUVp5qbo06@iTvb/Cw"" rel=""nofollow noreferrer"">!Try it online</a></p>
<p><a href=""https://tio.run/##jVhtV9rKFv7eXzGkkUzI6yAqEqNS8FrOUarWuqyArpAEDYbAIUHRwPnrvXsmQSD0dt2u1TLz7GfP3rNfJjN9Dp9@ff5sW5a9a7vdvV5xv0gsq@duW3Z52@6VSFEn9k5Z33N3i73ip9CNkOJOjMnACp@RrheLhjsdDccROqs9VM/OzJqBo7eRix7dyB4GvXyezezhYGAFjnioOe6LFkx8HxUP8ySfT5UvqtdfTY7HKQ8po8UCTCTyMf2RKvNkoMy5hdkfzcbtw/frulnU9e0FePHte@P27OdD7dvV1Unt2iRGC3F8/KX6/evDzcnV98a3ZkV6m3PIRG@ok8@zXQ3RaBh602QmfUlU7v6HhjuY@FbkovCJ8YejCIavw7ETjnwvyuct37NCpDwigY@JxPHH3FwwBfor5PPNH2dntfO6WWE2MLXnGOGT14sMNkaUlwKu/TRE/GeRWibUcg4MFYe@c5iH0L9YPuJyqGf5ocvNZqsytjTTns5C10FCqE21N80I4Z93TWALvqMOVWIs4CxUbSziISShGiDlJZqQWTRGSi1E7Zau7HeQ0GoHhY4wexy7I6Qmi2v3pV1eiytVg@8aTUNrB2x@AebuVbUdaJrRrRrzZNq6p@sQUuS1kWZEq2BZ38QIIbw2zIB7@5sYIaAdZInlTYzoO7zmZYnbm9g@8B6yGFi2M9ju3iZGCCiH2f1tb2KEgIsvWeLuJkZ0iFgv67a@iREdIuZmfdzfxAgp8do4a7q4iREC2q9Z4t4mBucFD4WWIZY3MVIEH9@yxP1NjBTBn/dsEvTfYOCOld30ziZGCMQ2yloubWJEB3cG2XjvbWJEB3ecrOnyJlaC9EtZDFxUMtg28HJZDLzmsxg4s0WxuTDDtpUeF46YNiXrVy0@pU05NRzov1Oq3cZqW2zjdkD/VQttkdfa2@1im2jACjW1AN06Xe/vim/wuVhrvU7f3i2no@XiptH1YcG58QbNriHN0Fr3qZSWOK8hR1tbQwmQkJpv3R/LHbALHuBWMgQXiseIuvCUchIcqQUQMc8S67CfEXOT12SKdsEFSHEMs1wcwqiqjYzuJaAJTT6GBT6IzgfR0eoL4hptIUnjUBkbfJyYO0Z0aTjiGBtVF0hUZaHlc02QtIMWUt47BYeuFo1XENgSi08n2azGRBbQRiynyeasRGsO3lYuP5ZUmW/RZebMTePxFSJTr0JcpmlyWWSXcUvic5quxP4mriSepFn/naKAFp@OlYRoXg/7Vtf1TZNrE06M2U5wazQMvAc7fOm542gg5fgtpUPZbYJFQ3tMOLQe2zGR23MqusBtksqsVZfCSRdzNCGcTLWPYMxVuGNOZmbFeWpwnf8ncp3XumPXemYTyFsVc/5wOELBMEIDK7KfvOCRA6qw2K6ERa2LiUj5ChsrySTHJjob8zD@Jx1vsTFwoA9ZDwq94TgNEzhjGGIsGB8NKswFUfz1n2b1/MQUVFu9U19VT7Xbuk5USbXUUH1RI3WkDtSh6qjVlDFc41A8qxWB3kAd3d4Kn2rfmtcnzWtTEH6FY9sUvpycNpoxpE4KXdcRwzFcszAbznuTwI68YYAucF2Mv7ee5b@x2DHrBgw7krSUn2AxHrvRZBygnAScpeSvpQTwQ7KU/L2U0OWWgus1ATWpkBXxLb4S4ysTWMwNRTFS8tWSM8E1MR6NvSBCtSV6iq/ku4@14Rrpe4F7qB/xekVZcexrYoAnBiufe1abElQRx4lrEEqgTfM/qPlJYK7YruLzhUfnMw7yDdcpelX1IrRiegRbf33yfBfnIKTicDWSMIkBnM0m@BZkS0GAG/KNXJd9kWaRKcY3JnAM3/Td4DF6wjeiQauuAffdxoHpG@IE47oJewmjMb6RG5IkE1H8l2P74o7qUqlcKe2I86URD6xf4NM1ww/4XK7Jd/JPMT43OfWhgprQNhZyXNsbwP0TNus@umP4HU0izqiZoG7cgQ/UF1r44G5p76CWz9cOdsoia0QDsNq/3H2ptb3T4eEMuTNLJaWWKie9ChRcTtRICQJSM83tohgnFHgaRF4wcec04pRaOyiVgXO4sydSKDG@NJusLP408U8R1ZRS2aDZMy7wXeHnyl7tRfQv8PVaEMKF4HY1WS@Qk758I8YNU2cW@yarYwh/n5at3FeUjnlDE0VnjQ4DIQ8dNu93VkI/XpqGiGLWn2KB1sCKwddl02x6M8WXMrOVg3akEc7B7JKVyI15eUC5qe7NUuntj0qHv1d6/3CDajE3lDVXosVmnqB3zTXRAETPUCwIXk4XmMpXhF1sQUCTEv@LVvgFto5AXbJoJCq3aUSM5YlRMIlSLGDrQBcLNGfwuxLUf7Lr9dOOuU03i/sFX4SKATOcugUfDhWqkaugO3cM9yjvxQthGY4WCk2KddQ/9I/6W37F3@pX2FhjY8jRPDlhwTNT70A5wGMPs5OgBw8xdtRzM1vkhKVzPYjEGis9s7nZ5uPrD28vM/loJTcFuIjBR4y@gZVx8Exm9gRGjoAEpPSKi68bXGwucF6kj8AVd1xWzMlXM4bCZQX9LEmGJPUPMD2EadFCyJPw99MpDETj99ug23Vc34V3MuQZWiE9nqBBJKlxAOoSSVqCfWkabEWJQJ8kh76UzDtzwaBfKvofBHCVshH7T4QJ7ZDhgD6JARxvgMsYOiWkNEtrhNkMj@B5XoU3v@fIbuQNXHlkjybyS/huOPCwF1dzUPrzAxhFlufD9ba0EmB6xY7L9JrDLlPCzHp9hrWQZSpFUtorlbd3S2UkxJZk8vr8pFlPvxoW3Ay4T/93/tNV0@jQHw4SAB98jokEXoc7GvzhUJikB3NbQ07mdVGYTa3xI8SgMUVp5qbo06@iTvb/Cw"" rel=""nofollow noreferrer"">ry it online!T</a></p>
<h2>With comments</h2>
<pre><code>??.z
# number of X's, as literals branches
.a??X.z
# if not empty; then pop; else enter here
.a.c.Z??.z
  # push while EOF
  .a.w.i.c\001.+.a??.z
  # pop; reverse; pop to heap; pop all to print; push heap; pop to print; exit
  .as.v.t.p.m.o.d??.a
.a.A??.z
# if not empty; then pop; else enter here
.a.c.Z??.z
  # cat; as in my previous post
  .a.w.o.i.c\001.+.a.d??.z
.a.A??.z
# and finally
.a.w.i.c\001.+.a.s.t.v.m.pX
</code></pre>
","","user100411"
"225058","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + 52 bytes (filename).</h1>
<ul>
<li>Filename (escaped): <code>\002._._X.w.c.t.v.m.v.+._.c.t.v.m.v.-\001.r.x.n.d.a\001.+.vX.a</code></li>
</ul>
<h2>Usage</h2>
<ul>
<li>From stdin</li>
<li>Must be an actual FIBonacci sequence</li>
<li>Each integer are separated with blank characters</li>
</ul>
<h2>With comments</h2>
<pre><code>XX.z
# Initial stack: F(i-1), F(i-2), i
# i is initially 2
.a\002._._XX.z
# while :; do
.aX.wXX.z
  # to: (F(i-1)+F(i-2)), i, F(i-1)
  .a.c.t.v.m.v.+XX.z
  # input is F(i)
  # to: F(i), (F(i-1)+F(i-2)), i, F(i-1), F(i)
  .a._.c.t.v.m.vXX.z
  # to 0, abs(F(i)-F(i-1)-F(i-2)), i, F(i-1), F(i)
  # if (pop!=pop); then
  .a.-\001.r.xXX.z
    # print pop; exit; fi
    .a.n.d.aXX.z
  # to F(i), F(i-1), (i+1)
  .a\001.+.vXX.z
# done
.aX.a
</code></pre>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5mQ5wAqEqNS8FrOUYrWuqyArhCCgiFwkqBo4Hz13j2TIBB6u267NDO//Zz9mIfPwdOvz59ty7L3bKe7388f5Ill9Z2CZZcKdr9I8jqxd0v6vrOX7@c/BU6IFGdqTEdW8Ix0PZ83nNlk7IfovPpQOT83qwYO3yYOenRCe@z1s1k2s8ejkeX1xCOt57xo3tR1Uf4oS7LZRLhZuf5qcjxO@JAyWSpgJJGP6EcqL@KBsuCWZn806rcP369rZl7XC0uw@e17/fb850P129XVafXaJEYLcXz0pfL968PN6dX3@rdGWXpbcMhEb6iTzbJVjdFkHAxm8Uz6Eovc/Q8JZzR1rdBBwRPjH09CGL6O/V4wcQdhNmu5AytAyiMS@IhIHH/CLQRToF8hm238OD@vXtTMMrOBqb2eETwN@qHBxojyJYBjP40R/1mklgm1nAFD@bHbO8pC6F8sF3EZ1LfcwOHm83UaU82kZ/PA6SEh0Gbam2YE8OtdE5jCd9ShQowLeJaiNhbxGJJQ8ZDyEk7JPPSRUg1Qu6UrBx0ktNperiPMH31ngtRYuXZf3OO1qFwx@K7RMLS2x@ZNMHevqm1P04xuxVjE09Y91UNIntcmmhGugyV9GyOE8No4Be4fbGOEgLSXZixtY0Tf5bVBmrGwjR0A30MaA8t2Ctvb38YIAeEgvb7CNkYIuPiSZtzbxogOEeun3da3MaJDxJy0jwfbGCFFXvPTpvPbGCEg/Zpm3N/GYL/godBSjKVtjOTBx7c048E2RvLgz3s6CfpvMHDHSi96dxsjBGIbpi0XtzGigzujdLz3tzGigzu9tOnSNlaE9EtpDFxUUlgB@DJpDLzm0xg4s0OxhTDHtpVsFz0xaUrWr1p0RptyZvSg/86odBurbbGN2x79rebaIq@1C@18m2jAFWhqDrp1ttnfZdfgM5HWep29vVu9jpaJGkbXBYUL4w2aXUOaobXuEyotcV5DPW1Dh@IhITHfuj@RO2AXPMCteAgu5E8QdeEp4YlxpOaAxDyLrcN6JsxNXpMp2gUXIMURzDJRAKOKNjG6l4DGbPIJKPhg7H0w9rTaknGDbUlJ4lD2DT6KzZ0gqhq2OMaNKkskrLDQ8pkGUNpeCynvnVyPagv9NQSWxOLTiRerMZIFbBOW03hxViy1AG/Llx8qVeZbeJnac5N4fIXI1CoQl1mSXBbZVdzi@JwlmthP7ErsSZL13wkKaHl0rCVEG/Sxa3Ud1zS5NuHEiK0EtyZjb/BgBy99xw9HUobfUTqUu02waGiPMQ@tx3ZE5PaCkpq4TRKate5SMO1ijiaEk6n0MYy5MnfCycysuEgMbvL/ibnGa13fsZ7ZBPJWwZw7Hk@QNw7RyArtp4H3yAGrsFyuhEWti4lI@RU2VuJJhk10NuZh/E8y3mFj4IE@ZD0o9Md@EiZwxjDESDA@GlRYCKL46z@NysWpKbThFqU@qA@36qtqq6H6oo7gRwJoNVOAiai@OlM9tadabCapL7eqJXyqfmtcnzauTUH4Ffi2KXw5Pas3IkiSFDhOTwx8uFBhNlz0p54dDsYeauKaGH1vPct/Y7Fj1gwYdiRpRT/FYuQ74dT3UEYCnhXlrxUF8COyovy9olB1K8L1BoGaVMga@RZfidGVCVzMDUUxEuarFc8UV8Vo4g@8EFVX6Bm@ku8@dMOF0R14zpF@zOtlZc2xr7EBnhisUO5ZFUpQLxwnbkAohrbN/6Dmp565ZruCL5YeXcw5yCxcnOildBCiNdMTWPrr08B1cAZCKo7XIwmTCMD5fIpvgbYieLgu38g12RVpFplgdGMCj@GaruM9hk/4RjRofdXhZls/NF1DnGJcM2EtQejjG7kuSTIRxX85ti7uuCYVS@XirrhYGRmA9SY@2zD8gC/kqnwn/xSjC5NTH8qoAQ1ioZ5jD0Zw04TFOo@OD9/JNOSMqgnixh34QH2hJQ7uFvcPq9ls9XC3JLKWMwCr/svdF1uF3Q4Pu8WdWSwq1UQ47kpgwaVYjBQhIFXTLOTFKGaBR0A48KbOgkacslYPiyXgOdrdFykUG1@ZjTWLP038U0RVpVgyaPaMJr7L/Vxbq72MfhNfbwQhWBJu15P1AjkZyjdiVDd1ZnFosjqG8A9p2cpDRemYNzRRdFbvMBDy0GHzYWct9P7KNEQUs/4Uc7QG1gy@rppm25sZvpSZrQy0I41wBmaXrERuzMtDypvI3qyE3v4odPR7ofcPN6gUc0PZcCVcLuYJetfcII2A9AzFguCN1MSUvkbsYgsCGpf4X7TCm9g6BnHJopEo3yYRMVY7Rs4kSj6HrUNdzNGcwXctqP@k9Q2TjrlNFouHOVeEigEznLoDR4QK1ciV0Z3jw41p8DIIQA1HC4UmxToeHrnHwx237O4My2yssTHkaBHvsOCZqXegHOBZh9lO0IcnF9vUubktcsLKuT5EYoMr2bO5@fYz6w@vLDM@nuI7AVy54Liir13F957J3J7CqCcgASn9/PIcgytME2dF@txbc8dhxRyfjxEULivoZ0kyJGl4iOkmTIsWQh6Hf5hMYSAav18GXW7PcR14EUOeoRWS7QkaRJLqhyAukbgl2ElTZxolAn0Sb/pSPO8sBIOeVPRPAXBpshH7c8GUdsh4RB@/APpb4CqGvSJSGsUNhvkcT@AhXoHX/aAnO@Fg5MgTezKVX4J3owdPeHE9B8U/P3VRaA1cuMgW1wJML9NRiV5o2LVJmFuvz6ALWaaSJ8X9YqmwVywhIbIkk9cXp41acmpYcAfgPv3f@U@0JtGhHw4SAAc@x0gCr8NtDP5xKIjTg7mdMSfzuijMZ5b/CDGoz1CSuRn69CuPCmgX/pMCypP/Ag"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"225059","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, Numeric: 34 bytes + Non-numeric: 21 bytes = 55 bytes.</h1>
<ul>
<li>Filename: <code>Hello world!!!.pxxxxx1234567890123456789012345678901234</code></li>
<li>Content: empty</li>
</ul>
<p>The boring answer. The stupid latter part is nothing but a garbage.</p>
<p><a href=""https://tio.run/##jVh7V@I4FP/fTxE6lSa0pQ2gIrUqg67DrjLqOB5HQE9pi4K1sLQoWtivPnuTFoEyO2c9R5v87jP3kYdPwePPT59sy7K3bbez0y3sFqhldd2iZZeLdrdECzq1t8r6jrtd6BY2AjdEqjs2xs9W8IR0vVAw3MlwMArRae2@enpq1gwcvg1d9OCG9sDvZrN8Zg@eny3fIfua475o/tjzUGE/S7PZRPi8evXFFESc8CF1OFfASUSM2EeuzOKBOhPmZr836jf3366OzIKuF@fg@ddv9ZvTH/e1r5eXx7UrkxpNJIjR5@q3L/fXx5ff6l8bFfltJiATvaF2NstXNUDDQdCbxDP5cyxy@x8S7vPYs0IXBY@cfzAMYfg6GDnB0OuF2azl9awAqQ9IEiMqC@KhMJNMiX2lbLbx/fS0dnZkVrgNzOw5RvDY64YGHyPGlwCu/ThA4ifCLFNmOQOGCgPP2c9C6F8sDwkZ1LW8wBWm02UaV82lJ9PAdZAUaBPtTTMC@POuSVzhO2ozIc4FPHNRGxM8gCRUfaS@hGM6DUdIrQWo1dTV3TaSmi0/15amDyN3iPKxcu2utC1qUaVqiB2jYWgtn8/PwdxdPt/yNc3oVI1ZPG3eMT2UFkRtqBnhMljW1zFKqagNUuDO7jpGKUj7acbyOkb1LVHrpRmL69gu8N2nMbBsp7DtnXWMUhAO0usrrmOUgosvacbtdYzqELFu2m19HaM6RMxN@7i7jlFaErVR2nRhHaMUpF/TjDvrGOwXIhRairG8jtEC@PiWZtxdx2gB/HlPJ0H/BQbuWOlFb61jlEJsw7Tl0jpGdXDnOR3vnXWM6uCOkzZdXsdKkH45jYGLagorAl8mjYHXYhoDZzYZNpOm2LaS7cIhSVPyftWiE9aUE8OB/jth0i2cb5EWbvnsbz7XIqLWKrYKLaoBV6Dlc9Ctk9X@rniGmIm05uvk7d1y2lomahgdDxTOjDdodg1phta8S6isxEUNOdqKDtVHUmK@eXeotMEueICb8RBcKBwi5sJjwhPjKJ8DEvcstg7rGXI3RU1haAdcgBRHMMtEAYyq2tDoXAAasymHoOCD0flgdLSjOeMK25ySxKEyMsQoNneImGrY4jg3qs6RsMpDK2YaQGn5TaS@t3MO0xaOlhBYEo9PO16sxkkWsA15TuPFWbHUDLytXHyozHPfwovUnpvE4wtE5qgKcZkkyeWRXcQtjs9Joon/xq7EniRZ/5WghOZHx1JCtF4Xe1bH9UxTaFGBRHwluDkc@L17O3jpuqPwWc6Im2qbcbcoJob2EPOwemxFVGnNGOkct2hCs5ZdCsYdLLCECAqTPoCxUBEOBYWbJbPE4Cr/75iPRK0zcq0nPoG8VbHgDQZD5A9C9GyF9mPPfxCAVZovV8ZE62BKGL/Kx2o8yfCJzscijP9Oxpt8DDzQh7wHpe5glIQJnDEMEknGR4NKM4mQn380qmfHpvTF9bwBgruD52Qymfxwwn5ooVja2t4p7@r/NZI2al8bV8eNK1OSNvBw1PPDLhz5XKkQn9gOgnhPX22k2hu/YvgdnaMEbgM/g5FtSp@PT@qNCDIvB67rkGAEtzTMh7Pu2LfD3sBH5/iIRN@aT8pfmLTNIwOGbVle0I8xiUZuOB75KCMDz4Ly54IC@D5dUP5aUJi6BeFqhcBMqnSJfIMvSXRpAhd3Q1WNhPlywTPGNRLxdaPaAj3Bl8rth264hXo9393XD0S9oi459iU2IFKDV98dL20ZilAQyAqEYmjd/HdmfuybS7ar@Gzu0dlUgHKB@LObbi9ES6aHsPTXx57n4gyElAyWIwmTCMDpdIxvgLYg@LiuXCtHikdYFrlgdG0Cj@GZnus/hI/4mhisaOtwXa7vmZ5BxhgfmbCWIBzha6Uuywol5B@Br0s4OJJL5Uppi8wWRnpg/RyfrBi@x2dKTblVfpDozBTy9xXUgK6zkOPavWe4vsJi3Qd3BN/hOBSMmgnixi34wHxhfQPulnb2atlsbW@rTHgfG4DV/hHuSs3iVluELejWLJXUWiIctzqw4HIsRksQkJppFgskilngZRH2/LE7YxFnrLW9Uhl49rd2CINi4wuzsWbyw8Q/CKqppbLBsmec49vcj6W12vPon@OrlSAEc8LNcrJeICd95ZpEdVPnFvsmr2MIf5@VrdJX1bZ5zRLFZvU2ByEPbT7vt5dCP1qYhohi3p8kx2pgyeDromnWvZngC4XbykA7sghnYHbBS@TavNhjvIns9ULo7bdC@78Wev9wg0lxN9QVV8L5Yh6hd80V0jOQnqBYEDy8zjGjLxE72IKAxiX@J6vwc2wdgLhssUhUbpKIGIsdI2dStZDD1p5Ocixn8F0K6t9pff2kY26SxeJ@ziNQMWBGyG/CuZOHahQq6NYdwTWs99ILQI3ACoUlxTro73sH/U2v4m32K3ys8THkaBbvsOCZqbehHOCtuLap20SQFs51IRIrXMl5IEzX326/ebqZ8ZkXXzTgHgdnIHtCqyP/iU7tMYwcCUlI7RbmhyPci85xlrA35JI7Li/m@NCNoHB5QT/JsiHL/T3MNmFWtBDyOPz9ZAoDYvx6GWy5juu58MyGPEMrJNsTNIgs1/dAXKZxS/CTps41yhT6JN705XjenkkGO6nY/xfgJmYj/j@IMeuQwTN7UQM4WgMXMXRKSG2UVhimUzyE1311gIY9R3HD3rOrDO3hWHkJ3g3HCl2ynIPS79/PKLR6HtyOS0sBZjf0qMxuSfwuJk2t1yfQhSxTLdDSTqlc3C6VkRRZsinqs@PGUXJqWHCxEDb@d/4TrUl02EeABMCBL3CSJOpwxYMfAQVxerCwORAUUSfSdGKNHiAG9QlKMjdBGz//BQ"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"225104","<h1><a href=""https://ja.wikipedia.org/wiki/CASL"" rel=""nofollow noreferrer"">CASL II</a>, 72 bytes.</h1>
<p><a href=""https://www.officedaytime.com/dcaslj/"" rel=""nofollow noreferrer"">Tested here.</a></p>
<pre><code>A START
 IN B,1
D OUT B,1
 LAD GR1,48
 XOR GR1,B
 JNZ D
 RET
B DS 1
 END
</code></pre>
<p>If you are familiar with assembly languages, you would get it well. It uses standard i/o. It uses ASCII-compatible encoding.</p>
","","user100411"
"225107","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + 13 bytes (filename).</h1>
<p>Filename is:</p>
<pre><code>._.c.n.w1.o.a
</code></pre>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKhKjUvBazlGq1rqsgK4QgoIhcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/25Zl79pOZ69X2C9Qy@o525Zd2rZ7RVrQqb1T0vec3UKv8ClwQqQ6E2MytIJnpOuFguFMxyM/RGfVh8rZmVk1cPg2dtCjE9ojr5fN8pk9Gg4tr0sOta7zonkT10WFwyzNZhPhi8r1V1MQccKH1PFCAScRMWIfuTyPB@pcWJj90ajfPny/rpkFXd9egBffvtdvz34@VL9dXZ1Ur01qNJEgRl8q378@3Jxcfa9/a5Tlt7mATPSG2tksX9UIjUdBfxrP5C@xyN3/kHCGE9cKHRQ8cf7ROITh68jvBmO3H2azltu3AqQ@IkmMqCyIx8JcMiX2lbLZxo@zs@p5zSxzG5jZ6xrBU78XGnyMGF8COPbTCImfCbNMmeUMGCqM3O5hFkL/YrlIyKCe5QaOMJut0rhqLj2dBU4XSYE21d40I4A/75rEFb6jNhPiXMCzELUxwSNIQsVD6ks4obPQR2o1QK2mru63kdRsebm2NHv0nTHKx8q1@@KuqEXliiF2jIahtTw@vwBz9/l8y9M0o1Mx5vG0ec/0UFoQtbFmhKtgSd/EKKWiNkqBe/ubGKUg7aUZS5sY1XdErZ9m3N7E9oHvIY2BZTuF7e5tYpSCcJBe3/YmRim4@JJm3N3EqA4R66Xd1jcxqkPEnLSP@5sYpUVR89OmC5sYpSD9mmbc28RgvxCh0FKMpU2MFsDHtzTj/iZGC@DPezoJ@m8wcMdKL3pnE6MUYhumLRc3MaqDO8N0vPc2MaqDO9206dImVoT0y2kMXFRT2DbwZdIYeC2mMXBmi2FzaYZtK9kuuiRpSt6vWnTKmnJqdKH/Tpl0C@dbpIVbHvubz7WIqLW2W4UW1YAr0PI56Nbpen@XXUPMRFrzdfr2bnXbWiZqGB0XFM6NN2h2DWmG1rxPqKzERQ11tTUdqoekxHzz/lhpg13wADfjIbhQOEbMhaeEJ8ZRPgck7llsHdYz5m6KmsLQDrgAKY5glokCGFW0sdG5BDRmU45BwQdj94Oxq9UWjGtsC0oSh7JviFFs7hgx1bDFcW5UWSBhhYdWzDSA0vKaSH1v57pMW@ivILAkHp92vFiNkyxgG/OcxouzYqk5eFu@/FCZ576Fl6k9N4nHV4hMrQJxmSbJ5ZFdxi2Oz2miif/GrsSeJFn/naCEFkfHSkK0fg@7VsdxTVNoUYFEfCW4OR55/Qc7eOk5fjiUM@KW2mbcLYqJoT3GPKweWxFVWnNGusAtmtCsVZeCSQcLLCGCwqSPYCyUhWNB4WbJPDG4zv8n5pqodXzHeuYTyFsFC@5oNEbeKERDK7Sf@t6jAKzSYrkyJloHU8L4VT5W40mGT3Q@FmH8TzLe4mPggT7kPSj1Rn4SJnDGMEgkGR8NKs0lQn79p1E5PzGl/EPeznv5V5of5S3pU/Vb4/qkcW1K0ic89vte2IODnLMKs1cbqTaBI/pX4Num9OXktN6IIB1y4DhdEvhwdcJ8OO9NPDvsjzx0gWsk@t58Vv7GpG3WDBi2ZXlJP8Ek8p1w4nsoIwPPkvLXkgL4IV1S/l5SmLol4XqNwEyqdIV8i69IdGUCF3dDVY2E@WrJM8FVEvF1o@oSPcVXyt2Hbrgaun3POdSPRL2srjj2NTYgUoOXxD2vNxkqQxDIGoRiaNP8D2Z@4pkrtiv4fOHR@UyAHEL82fWzH6IV02NY@utT33VwBkJKRquRhEkE4Gw2wbdAWxI8XFdulJriEpZFLhjdmMBjuKbreI/hE74hBqukOtxh6wema5AJxjUT1hKEPr5R6rKsUEL@Ffi6hKOaXCyViztkvjTSB@sX@HTN8AM@V6rKnfKTROemkH8oowa0goW6jt0fwp0SFus8Oj58x5NQMKomiBt34APzhRUzuFvcO6hms9WDnRLhzWUAVv1XuC82t3faIuwLd2axqFYT4bj/gAWXYjFahIBUTXO7QKKYBa77Yd@bOHMWccZaPSiWgOdwZ48wKDa@NBtrJj9N/JOgqlosGSx7xgW@y/1cWau9iP4Fvl4LQrAg3K4m6wVyMlBuSFQ3dW5xYPI6hvAPWNkqA1VtmzcsUWxWb3MQ8tDm80F7JfT@0jREFPP@JDlWAysGX5dNs@nNFF8q3FYG2pFFOAOzS14iN@blAeNNZG@WQm9/FDr8vdD7hxtMiruhrrkSLhbzBL1rrpGGQHqGYkHwGrrAjL5C7GALAhqX@F@swi@wdQTissUiUb5NImIsd4ycSdVCDlsHOsmxnMF3Jaj/pPUNko65TRaLBzmXQMWAGSG/BYdBHqpRKKM7x4e7Uf@lH4AagRUKS4p1NDh0jwZbbtndGpT5WONjyNE83mHBM1NvQznAA25jT7aJIC2d60Ek1riS7VyYbT6o/vCeMuODKD794XIFBxN716q@90xn9gRGXQlJSO0VFicWXFYucJawh92KOw4v5vgkjKBweUE/y7Ihy4MDzDZhVrQQ8jj8g2QKA2L8fhlsuV3HdeDtC3mGVki2J2gQWa4fgLhM45bgJ02da5Qp9Em86cvxvD2XDHZSsUc/XI9sxP8xMGEdMhqyZy6A/ga4jGG3iNRGcY1hNsNjeHJX4B3f7ypO2B86ytgeT5SX4N3owmOdrOag@OdHLQqtvgtX1uJKgNm1OSqxqwu/IEkz6/UZdCHLVAu0uFcsbe8WS0iKLNkU9flJo5acGhac9sKn/zv/idYkOuwjQALgwBc4SRJ1uHfBj4CCOD1Y2BoJiqgTaTa1/EeIQX2KksxN0adf@n8B"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>As verbose pseudocode</h2>
<pre><code>push numeircal integer input
dup
unless empty: printf &quot;%d&quot;, $(pop)
while one of
  1. empty
  2. $(pop) != 0
do
  push &quot;1&quot;, a character
  unless empty: printf &quot;%c&quot;, $(pop)
done
</code></pre>
","","user100411"
"225108","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/hakatashi/esolang-box#pxem"" rel=""nofollow noreferrer"">esolang-box notation</a>), Hello World: 48 bytes + Quine: 110 bytes = Cat: 158 bytes.</h1>
<p>Unprintables are escaped.</p>
<h2>Hello World</h2>
<pre><code>.f!.zHello World.p.d.a.w.c.z.w.o.i.c\001.+.a.d.a.a

</code></pre>
<h2>Quine</h2>
<pre><code>!Be!?BzBc!!B+BzXXFBaBcFBzBsXXFBBaBsBtBvBmBvBcAcB-BaBsBp&quot;.e!?.z.c!!.+.zXXF.a.cF.z.sXXF..a.s.t.v.m.v.cAc.-.a.s.p
</code></pre>
<h2>Cat</h2>
<pre><code>.f!.zHello World.p.d.a.w.c.z.w.o.i.c\001.+.a.d.a.a
!Be!?BzBc!!B+BzXXFBaBcFBzBsXXFBBaBsBtBvBmBvBcAcB-BaBsBp&quot;.e!?.z.c!!.+.zXXF.a.cF.z.sXXF..a.s.t.v.m.v.cAc.-.a.s.p
</code></pre>
<h2><a href=""https://tio.run/##jVhtV9rKFv7urxjSSCaGvAyiUmJUQGs5R6laj9cK6IpJEDAkNAmKBs5f790zCQKht@u6lmbm2c9@mb1nTyY@h71fnz5ZpmntWs7jXrf4uUhMs@tsm1Z52@qWSFEj1k5Z23N2i93iRuhESHbG@nhohs9I04pF3ZmM/CBCZ/WH6tmZUddx9DZy0JMTWb7XzefZzPKHQ9OzxQPVdl5Ub@y6qHiQJ/l8qnxRvf5qcDxOeUgezQ0wkcjH9CFVZslAnnFzt/80G7cP36@PjaKmbc/Bi2/fG7dnPx7q366uTurXBtFbiOPjWvX714ebk6vvjW/NivQ245CB3lAnn2er8tHID/uTZCbVEpW7/6HhDMeuGTko7DG@P4pg@OoHdjhy@1E@b7p9M0TyExL4mEgcf8TNBEOgTyGfb/5zdlY/PzYqzAem/mw97PW7kc7GiPJSwLF6PuI/idQzoZ5z4Kjou/ZBHlL/YrqIy6Gu6YYON50uy5hppj2Zho6NhFCdqG@qHsKfd1VgBt9RhyoxFnDmqhYWsQ9FqHpIfonGZBoFSK6HqN3S5M8dJLTa3lZHmD4FzggpiXH1vrTLq3GlqvOPelNX2x6bX4C7e0Vpe6qqP1b1WTJt3VM7hBR5daTq0TJY1tYxQgiv@hlw7/M6Rghoe1lieR0j2g6v9rPE7XXsM/Aeshh4tjLY7t46Rggoh9n1ba9jhECIL1ni7jpGNMhYNxu2to4RDTLmZGP8vI4RUuLVIOu6uI4RAtqvWeLeOgbnBQ8bLUMsr2OkCDG@ZYmf1zFShHjes0XQfoNBOGZ20TvrGCGQ2yjrubSOEQ3CGWbzvbeOEQ3CsbOuy@tYCcovZTEIUc5g28DLZTGIms9iEMwmxWbCFFtmelzYYtqUrF/V@JQ25US3of9OqXYbK22xjdse/atstUVebW@3i22iAitUlS3o1slqf1dcnc/Faut18vZu2h01Fzf1RxcMzvQ3aHYVqbrauk@ldIvzKrLVFRuyh4TUfev@qNABvxABbiVDCKF4hGgIvZST4EjZAhGLLPEO6xmxMHm1QNFHCAFKHMMsF4cwqqoj/fES0IRWOAIDH0T7g2irx3PiCm0uSfNQCXQ@TtwdIWoajjjGRtU5ElVZavlcEyRtr4Xk986WTa1FwRICS2L56SSLVZnIBNqI1TRZnJlozSDayuWHSYXFFl1mztw0H18hM8dVyMskLS7L7CJvSX5OU0vsNwkliSSt@u8UBTR/dSwVRO13sWs@Oq5hcG3CiTFbCW6NfK//YIUvXSeIhlKO35Q7lN0mWNTVp4RD92M7JoX2jIoucJukMnM5pHD8iDlaEK5AtQ9hzFW4I67A3Iqz1OEq/0/kY159DBzzmU2gblXMub4/Qp4foaEZWb2@98QBVZgvV8Ki@oiJSPkyG8vJJMcmGhvzMP6ZjjfZGDjQh6wHha4fpGmCYHRdjAX9o0GFmSCKv3qO6/qGoHRzyvtXOkb/8QPXVkaKrZjKq2Ip7/DXV/qK1dY0okiAUonZ9oSNn@O@5xhCrubkDmvvNSuXq0m199vbLzWzZn0BJKRjmIS1qPZSG8KvVbVqMkNGnAJqYB7UwCxVA7vWF0ComgKTUImUF2UIv6CmyAwZCRsbQ992jF7y@Jk8rI0NywwdxNMZ6nuo1bM64gb60qyen8Ctjq2T29D1n0sgi5@CTmiCgfq35vVJ89rIWLJENJfMVeYaeBT0vagLtxxmkk953PTVQrIlwj3mVxhYhlA7OW00Y9izUug4thgGcL/EbDjrjj0r6vseusDHYvy99Vz4G4sd41iHYUeSFvITLMaBE40DD@Uk4Cwkfy0kgB@QheTvhYSaWwiuVwTUpUyWxLf4SoyvDGCxMGRZT8lXC84Y18WYrR/VF@gpvircfdiG@7ML@TrQDnmtIi8F9jVxwBOd9c09a0oJ2ofjxBUIJdC6@3@o@7FnLPmu4vN5ROdTDjY65J/e0fsRWnI9gqW/9vqug3OQUtFfziRMYgCn0zG@BdlC4OFG4aZwXHBFWkWmGN8YwNFdw3W8p6iHb0SdtlsDLvqNfcPVxTHGxwasJYwCfFNoSFKBiOK/HFsXd3gslcqV0o44Wzjpg/cLfLri@AGfF@qFu8IPMT43OOWhgppwXpjIdqz@EC7esFjnyQngORpHnF43QF2/gxhoLLTjIdzS3n49n6/v75RFdgLpgNX/5e5Lre2dDg@H551RKsn1VDk5pICCy4kaKUFC6oaxXRTjhALfRFHfGzszmnFKre@XysA52NkTKZQ4X7hNLIs/DPwDekkulXVaPf0C3239WFqrNc/@Bb5eSUI4F9wuF@sFajIo3Ihxw9CYx4HB9jGkf0C3bWEgyx3jhhaKzhodBkIdOmw@6CylPli4hoxi1p/iFt0DSw5fF02zHs0EXxaYrxy0I81wDmaXbIvcGJf7lJvq3iyU3v6odPB7pfePMKgWC0NeCSWaL6YHvWusiIYgeqaHGnwyXmAqXxI@YhMSmmzxv@gOv8DmIahLJs1E5TbNiL44MbYMIhe3sLmviVu0ZvBcSurPrL1B2jG36WLxYMsVYceAG07ZhDemAruRq6A7J4ALZP@lH4IZjm4UWhTzcHDgHg423Yq7OaiwscrGUKNZcsJCZIbWge0AX7mZs5mbWiInLILrQiZWWB9n9/pX5x8@Oo3kbZ1ckeAGCm9v@vEvB94zmVpjGNkCEpDcLc5f63Cju8B5kX79LoXjsM2cXBdi2LhsQz9Lki5Jg31MD2G6aSHlSfoH6RQGov77ZdDl2o7rRA6COkMrpMcTNIgkNfZBXSJJS7A3TYNZlAj0SXLoS8m8MxN0@qai/xmBO6SF2H9PxrRD/CH9XwCAwRq4yKFdQnKztEKYTvEoBLmPRn274ET9oVMYWaNx4SV8120zcsTlGpT@/OWPIrPvwr2@tJRg@m0Rl@n9jt0ihan5@gy2kGnIRVLaK5W3d0tlJMSmZPDa7KR5nL41TLgScRv/d/1Tq2l26IODAsALn2Migdfgcgo/HAqT8mBu0@cKvCYK04kZPEEOGhOUVm6CNn79Fw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></h2>
<p>Use variable <code>mode</code> to switch programs.</p>
<h2>How it works</h2>
<p>The Hello World program consists of several parts, as in:</p>
<pre><code># branch if content begins with '!' or not
.f!.z
  # Hello World program
  # Note that '!' is recycled here
  Hello World.p.d
.a
.w.c.z
  # Cat program
  # Note that content of stack is cleared before entrying here
  .w.o.i.c\001.+.a.d
.a.a\n
</code></pre>
<p>Quine is <a href=""https://codegolf.stackexchange.com/a/221399/100411"">recycled from here</a>.</p>
<p>Cat program uses this specification:</p>
<blockquote>
<p>The first line is the file name of the pxem code.</p>
<p>The rest is the content of the pxem code.</p>
</blockquote>
","","user100411"
"225118","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + 147 bytes (filename).</h1>
<ul>
<li>Filename (escaped): <code>.w0.-.i.c\001.+.a\001.+.t.v.m.vQJ.z.v.m.v.c.m.+.c.t.-.m.v.t.v.m.-.m\001.+.!.c\011.x\011.-XX.a.t.v.s.m.v\001.-.t.v.m.v.c0.a\046.-.v.s@.w.t.c.c.Z.m\012.%.w.d.aY.o.d.A.m.+@.a</code></li>
<li>Content is empty.</li>
</ul>
<p><a href=""https://tio.run/##jVj9V9pKE/69f8WSRrIxn4tBkRiVotfSq1St9aiAnpAEBUPgkqBo4P7rvbObIBD69rztKdl95pmPndnZbPocPv36/Lnk7drOjuO1C53CVsnd0be3naKrbxc7bbuju3rBKOrFIil@Cr0IKd7YHPft8BnpeqFgepPhYBSh0@pD5fTUqpo4eht66NGLnEHQyefZzBn0@3bgivua671owdj3UWE/T/L5VPm8cvXV4nic8pAynBtgIpGP6UMqz5KBMuPmbn/WazcPP66OrIKub83B8@8/ajentw/V75eXx9Uri5gNxPHxl8qPrw/Xx5c/at/rZeltxiELvaFWPs9WNUDDQdidJDPpS6Jy9z80vP7YtyMPhU@MPxhGMHwdjNxw6HejfN72u3aIlEck8DGROP6QmwmWQJ9CPl//eXpaPTuyyswHpv5cM3zqdiKTjRHlpYDnPA0Q/1mkngn1nANHhYHv7uch9S@2j7gc6th@6HHT6bKMmWbak2nouUgItYn2ppkh/LxrAjP4jlpUibGAM1d1sIgHUIRKgJSXaEym0Qgp1RA1G7qy20JCoxlstoTp48gbIjUxrt0b27wWlysm3zbrptYM2Pwc3N2rajPQNLNdMWfJtHFP7RBS4LWhZkbLYElfxwghvDbIgDu76xghoB1kiaV1jOhFXutmiVvr2C7wHrIYeHYy2PbOOkYIKIfZ9W2tY4RAiC9Z4vY6RnTIWCcbtr6OER0y5mVj3F3HCDF4bZR1XVjHCAHt1yxxZx0jBYhnkiWW1jFSgBjfssTddYwUIJ73bBH032AQjp1ddHEdIwRyG2U9G@sY0SGcfjbfO@sY0SEcN@u6tI4ZUH4pi0GISgbbAl4ui0HUfBaDYDYoNhOm2LHT48IV06Zk/arFJ7QpJ6YL/XdCtZtYbYpN3Azor7rZFHmtudUsNIkGrFBTN6FbJ6v9XfZNPhdrjdfJ27vttrRcXDfbPhicmW/Q7BrSTK1xn0rpFuc15GorNpQACan7xv2h3AK/EAFuJEMIoXCIaAhPKSfBkboJIhZZ4h3WM2Rh8ppM0TaEACWOYZaLQxhVtKHZvgA0ocmHYOCD6H4QXe1oTlyhzSVpHsojk48Td4eImoYjjrFRZY5EFZZaPlcHSTNoIOW9telSa9FoCYElsfy0ksVqTGQDbchqmizOTrRmEG354sOkymKLLjJnbpqPr5CZowrkZZIWl2V2kbckPyepJfYvCSWJJK367xQFNH91LBVE63awb7c937K4JuHEmK0EN4aDoPvghC8dbxT1pRy/obQou0mwaGqPCYfux2ZM5OaMis5xk6QyezmkcNzGHC0IJ1PtAxhzZe6Qk5lbcZY6XOX/iXzEa@2RZz@zCdStgjl/MBiiYBChvh05T93gkQOqMF@uhEWtjYnIYlPYRElnOTbTkwkPk3/mkw02oTRoRtaIQmcwSnMFEZmmGAvmR5cKM0EUf/1Vr5wdW4L6qquK2lWdpq4TVVLt9BmpL2pffbn4pr4nI9WBXwl@I@DTecKAcaqRozYIUSfsV7m5UW3GCSmbcZS5VdXRqSNjGyAgHKqvIHHg7x21RgrqxgZArmrfqgN4VKjnQ9UWPlW/16@O61eWIHzCw1E3iDpw2WAr4VMRN311kOKIcJ34FY4cS/hyfFKrx7B1pNDzXDEcwTUPs@GsMw6cqDsI0Dk@EuMfjWf5byy2rCMThi1JWsiPsRiPvGg8ClBOAs5C8m0hAXyfLCR/LyTU3EJwtSKgLhWyJL7Bl2J8aQGLhaEoZkq@XHDGuCrGbP2oukBP8KV892EbrrF@N/D29QNeLytLgX1NHPDEZNv3nvWGBLuY48QVCCXQuvuf1P04sJZ8V/DZPKKzKQdbDfJPr8rdCC25HsLSX5@6vodzkFJxsJxJmMQATqdjfAOyhSDANflaPpJ9kVaRKcbXFnBM3/K94DF6wteiSTd8De7btT3LN8UxxkcWrCWMRvharkmSTETxX46tizs4koxS2SiKs4WTLng/xycrjh/wmVyV7@RbMT6zOPWhjOrQtjZyPafbh/svLNZ79EbwHI4jzqxaoG7eQQw0FtpzEK6xs1fN56t7xZLIDgITsOq/3L3R2Cq2eDjD7izDUKqpcnJWAAWXEjViQEKqlrVVEOOEAp8mUTcYezOacUqt7hkl4OwXd0QKJc4XbhPL4q2Fb0VUVYySSatnnuO7zdultTrz7J/jq5UkhHPBzXKxXqAmPflajGuWzjz2LLaPIf09um3lnqK0rGtaKDqrtRgIdWixea@1lPrRwjVkFLP@FDfpHlhy@LpomvVoJvhCZr5y0I40wzmYXbAtcm1d7FFuqnu9UHr7o9L@75XeP8KgWiwMZSWUaL6YJ@hda0XUB9EzbBYEX27nmMqXhG1sQ0KTLf6N7vBzbB@AumTTTJRv0oyYixNj0yJKYRPbe7q4SWsGz6Wk/pO110s75iZdLO5t@iLsGHDDqRvw4lJhN3JldOeN4B7XfemGYIajG4UWxT7o7fsHvQ2/7G/0ymyssTHUaJacsBCZpbdgO8DHZuZs5qaOyAmL4DqQiRXWx9m9/vH3h28/K3lpJjcVuAjCS5R@gyuj4JlMnTGMXAEJSOkU5m9XuFid47xIP0KXwvHYZk7e2jFsXLahnyXJlKTeHqaHMN20kPIk/b10CgPR/P0y6HJdz/fgOx3qDK2QHk/QIJJU2wN1iSQtwd40NWZRItAnyaEvJfPWTDDpm4r@BwVc5RzE/hNjTDtk0Kef5ACO1sBFDl0DKXVjhTCd4mEI8gEadl3Zi7p9Tx46w7H8Er6brh154nINjD9/gKPI7vpwvTaWEkyv@HGJXrPYZU6Y2q/PYAvZllIgxo5R2to2SkiIbcni9dlx/Sh9a9hwKeE@/d/1T62m2aEPDgoAL3yOiQRehzsi/OFQmJQHcxsDTuZ1UZhO7NEj5KA2QWnlJp/QL2N3t7CztVvaIdv/AQ"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p>A single line that matches <code>^[0-9]+$</code>, ending with EOF, is given from stdin. A single <code>Y</code> is output if and only if truthy.</p>
<h2>Algorithm</h2>
<ol>
<li>Let l1 be a list storing each digit in reverse order.</li>
<li>Let s be 0.</li>
<li>Let l2 be an empty list.</li>
<li>If l1 is empty, go to step 9.</li>
<li>Pop one value from l1 and let it be n. Push n*(s+1) onto l2.</li>
<li>If last value on l2 is more than 9, subtract 9 from it.</li>
<li>Let s be 1-s.</li>
<li>Go to step 4.</li>
<li>Calculate (sum of each item in l2)%10.</li>
<li>If step 9 resulted in 0, the program returns truthy; otherwise falsey.</li>
</ol>
<h2>With comments</h2>
<pre><code># getchar() unil EOF
# substract 48 for each character
.w0.-.i.c\001.+.aXX.z
# at this point stack is -1, [0-9], ..., [0-9], 48.
# add 1 to -1 so: 0, ..., 48.
# move 0 to bottom: [0-9], ..., 48, 0.
.a\001.+.t.v.m.vXX.z
# loop
# every time loop begins, bottom should be [01].
# also heap should be same as bottom.
.aQJ.zXX.z
  # to: [0-9], [01], ..., 48, ..., [01]... I think
  # WTF did I do here?
  .a.v.m.v.c.m.+.c.t.-.m.v.t.v.m.-.mXX.z
  # multiply [0-9] to ([01]+1)
  .a\001.+.!XX.z
  # subtract 9 if more than 9
  .a.c\011.x\011.-XX.aXX.z
  # move top to bottom, replacing it
  .a.t.v.s.m.vXX.z
  # alt for [01] xor 1; subtract from 1
  # then move to bottom
  .a\001.-.t.v.m.vXX.z
# break if top equals 48
.a.c0.aXX.z
# make 48 to 10, then remove botton [01]
# OBTW reversed, but whatever
.a\046.-.v.sXX.z
# loop
.a@.wXX.z
  # if size is 1; then
  .a.t.c.c.ZXX.z
    # modulo by 10
    .a.m\012.%XX.z
    # if it is 0; then print Y and exit; else exit; fi
    .a.w.d.aY.o.d.AXX.z
  # fi; push (pop+pop)
  .a.m.+
# end of loop
.a@.a
</code></pre>
","","user100411"
"225122","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes: content + 30 bytes: filename.</h1>
<ul>
<li>Content is empty.</li>
<li>Filename (escaped): <code>\144\144ceraft.!.r\001.z.s.sXXec.aMin.p</code></li>
</ul>
<h2>Algorithm</h2>
<ol>
<li>Push &quot;ceraft&quot;.</li>
<li>Generate a random number between 0 to 9999.</li>
<li>Unless it is 1, fix the string &quot;ceraft&quot; with &quot;ecraft&quot;.</li>
<li>Insert &quot;Min&quot; and print it.</li>
</ol>
<p><a href=""https://tio.run/##jVh9V6JMG/9/P8XIkgwBwhiWSVSu9rTed7nVtp02tQ4CloboDVgWen/1fa4ZMBX32fN0TjHzu17nepmXnsOnX58/l919y96z3W6xV9wpO3va7q5dcrTdUq9r9TRHK@olrVQipU@hGyHFnRiToRU@I00rFg13Oh4FETqrPVTPzsyagaO3sYse3cge@b18ns3s0XBo@Y54qDrui@pPPA8VD/Mkn0@FL6rXX02OxykfUsYLBYwk8jH9SJV5MlDm3MLsj2bj9uH7dd0satrOArz49r1xe/bzofbt6uqkdm0So4U4Pv5S/f714ebk6nvjW7Mivc05ZKI31Mnn2apGaDwK@9NkJn1JRO7@h4Q7nHhW5KLwifGPxhEMX0eBE469fpTPW17fCpHyiAQ@JhLHH3NzwRToV8jnmz/OzmrndbPCbGBqzzHCp34vMtgYUb4UcO2nEeI/i9QyoZZzYKg48pzDPIT@xfIQl0M9ywtdbjZbpTHVTHo6C10HCaE6Vd9UI4Q/76rAFL6jDhViXMCzELWxiEeQhKqPlJdoQmZRgJRaiNotTdnvIKHV9rc7wuwxcMeokChX7/VdXo0rVYPvGk1DbftsfgHm7guFtq@qRrdqzJNp657qIaTIq2PViFbBsraJEUJ4dZQB9/Y3MUJA2s8yljcxopV4tZ9l3NnE9oHvIYuBZTuD7e5tYoSAcJhd384mRgi4@JJl3N3EiAYR62Xd1jYxokHE3KyP@5sYITqvBlnTxU2MEJB@zTLubWKkCP5Ms4zlTYwUwce3LOP@JkaK4M97NgnabzBwx8ouurSJEQKxjbKW9U2MaODOMBvvvU2MaOCOkzVd3sR0SL@UxcBFJYPtAF8ui4HXfBYDZ7YoNhdm2LbS7cIR06Zk/arGp7Qpp4YD/XdKpdu40BbbuO3Tv4Xttsir7Z12sU1U4ArVwjZ063S9vyueweditfU6fXu3nI6ai5tG1wOFc@MNml1FqqG27lMqLXFeRY66pkPxkZCab90fyx2wCx7gVjIEF4rHiLrwlPIkOCpsA4l5lliH9YyZm7wqU7QLLkCKY5jl4hBGVXVsdC8BTdjkY1Dwweh8MDpqfcG4xragpHGoBAYfJ@aOEVUNWxzjRtUFElVZaPlcEyhtv4WU9862Q7VFwQoCS2Lx6SSLVRnJArYxy2myOCuRmoO3lcsPlQXmW3SZ2XPTeHyFyNSrEJdpmlwW2WXckvicpprYb@JK4kma9d8JCmhxdKwkRO33sGd1Xc80uTbhxJitBLfGI7//YIcvPTeIhlKO31I6lLtNsGiojwkPrcd2TOT2nJIucJukNGvVpXDSxRxNCCdT6SMYcxXumJOZWXGeGlzn/xNznVe7gWs9swnkrYo5bzQaI38UoaEV2U99/5EDVmGxXAmLahcTkfmmsImSznJspiUTHib/LCZbbELZoBlZIwq9UZDGCjwyDDEWjI8uFeaCKP76T7N6fmIKbaLr9Nd2A6sXFXKFoK1ppPBeCAvh7a1rF6zzvl8YC59q35rXJ81rUxA@4XHQ96MenPNMCZ@SuNmrjRRbhJP8VxjYpvDl5LTRjCFrUui6jhgGcMPCbDjvTXw76o98dIHrYvy99Sz/jcWOWTdg2JGkJf0Ei3HgRpPARzkJeJaUv5YUwA/JkvL3kkLVLQnXawRqUiEr5Ft8JcZXJnAxNxTFSJmvljwTXBNjtn5UW6Kn@Eq@@9ANN0iv77uH2hGvVZQVx74mBnhisMq5Z2UpQQFxnLgGoQTaNP@Dmp/45ortKj5feHQ@4yDLEH96S@1HaMX0GJb@@tT3XJyDkIqj1UjCJAZwNpvgW6AtCT5uyDdyXfZEmkUmGN@YwGN4puf6j9ETvhENWmsNuOo2DkzPECcY101YSxgF@EZuSJJMRPFfjq2LO6pLermil8T50kgfrF/g0zXDD/hcrsl38k8xPje5wkMFNaFjLOS4dn8IV09YrPvoBvAdTyLOqJkgbtyBD9QXWu7grr53UMvnawelssh60ACs9i93r7d2Sh0eto87U9eVWiqctCmw4HIiRnQISM00d4pinLDAqyDq@xN3TiNOWWsHehl4Dkt7IoUS40uziWbxp4l/iqim6GWDZs@4wHfbP1fWai@if4Gv14IQLgi3q8l6gZwM5BsxbpgaszgwWR1D@Ae0bOWBonTMG5ooOmt0GAh56LD5oLMS@mBpGiKKWX@K27QGVgy@Lptm05spvpSZrRy0I41wDmaXrERuzMsDypvK3iyF3v4odPh7ofcPN6gUc0NZcyVaLOYJetdcIw2B9AzFguDRdIEpfYXYxRYENCnxv2iFX2DrCMQli0aicptGxFjuGNsmUYrb2DrQxG2aM/iuBPWfrL5B2jG36WLxYNsToWLADFfYgjOjANXIVdCdG8AVqv/SD0ENRwuFJsU6Ghx6R4Mtr@JtDSpsrLIx5Gie7LDgmal1oBzgnZfZm7mZLXLC0rkeRGKN62Pv3nx3/eHZZSbnVXJJgDsYnF/0@asE/jOZ2RMYOQISkNIrLg42uNNc4LxI338r7rismJMDM4bCZQX9LEmGJA0OMN2EadFCyJPwD9IpDETj98ugy3Vcz4UnMuQZWiHdnqBBJKlxAOISSVqCnTQNplEi0CfJpi8l885cMOhJRf83ALcoG7H/H0xoh4yG9DUMYLABLmPo6Ehp6msMsxkew8u8Cs/9viO7UX/oymN7PJFfwnfDgTe9uJoD/c9vXxRZfQ9utvpKgOntOi7TGw67Rwkz6/UZdCHLVIpE39PLO7t6GQmxJZm8Nj9p1tNTw4L7APfp/85/qjWNDv1wkAA48DlGEngNrmfww6EwSQ/mtkaczGuiMJtawSPEoDFFaeamn9Cv/wI"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"225160","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/hakatashi/esolang-box"" rel=""nofollow noreferrer"">esolang-box</a> notation), 43 bytes.</h1>
<p>Some unprintables are escaped.</p>
<pre><code>.e
e.z\001.rXX.a.w.s.p.d.a.w.c.o.i.cED.-.+.ae.
</code></pre>
<h2>Parindromed</h2>
<pre><code>.e
e.z\001.rXX.a.w.s.p.d.a.w.c.o.i.cED.-.+.ae..ea.+.-.DEc.i.o.c.w.a.d.p.s.w.a.XXr.\001z.e
e.
</code></pre>
<h3>With comments</h3>
<p>For parindromed.</p>
<pre><code>XX.z
# MAIN ROUTINE
# call with empty stack
.a.eXX.z

# SUBROUTINE
# should be called with either 
.aXX.z
# if top is not e, then push zero
# else e is popped
.ae.z\001.rXX.aXX.z
# if top is not zero, then print and pop each item
# (except top .; discarded) and return
.a.w.s.p.d.aXX.z
# cat program BUT preserve each item
# XXX: where does EOF: -1 go?
.a.w.c.o.i.cED.-.+.aXX.z
# NOTE if not parindromed, the next section and so far is e.,
# which .e and so far would not be there
# if parindromed, call with stack
.ae..eXX.z
# garbage, then reaching to .D returns to main section
.aa.+.-.DXX.z
# and garbage
.aEc.i.o.c.w.a.d.p.s.w.a.XXr.\001z.e\ne.
</code></pre>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5kY8hgERWJUCl7LOUrVWpcV0BWSoGBIOElQNHC@eu@eSRAIvV3XtTQzv/2c/ZiHz@HTr8@fK86@ae1ZTq/YL@5U7D1td9cq29puud8z@5qtFUtlrVwm5U@hEyHZmeiTkRk@I00rFnVnOvaDCJ3VH2pnZ0Zdx9Hb2EGPTmT5Xj@fZzPLH41MzxYPVdt5Ub2J66LiYZ7k86nwRe36q8HxOOVD8nihgJFEPqYfqTpPBvKcW5j90WrePny/bhhFTdtZgBffvjdvz34@1L9dXZ3Urw2itxHHx19q378@3JxcfW9@a1WltzmHDPSGuvk8W5WPxn44mCYz6Usicvc/JJzRxDUjB4VPjN8fRzB89QM7HLuDKJ833YEZIvkRCXxMJI4/5uaCIdCvkM@3fpyd1c8bRpXZwNSerYdPg36kszGifCngWE8@4j@L1DKhlnNgqOi79mEeQv9iuojLob7phg43m63SmGomPZ2Fjo2EUJ2qb6oewp93VWAK31GXCjEu4FmIWljEPiSh5iH5JZqQWRQguR6iTluT97tIaHe87a4wewycMVIS5ep9aZdX42pN53t6S1c7HptfgLl7Rel4qqr3avo8mbbvqR5Cirw6VvVoFaxomxghhFf9DLi3v4kRAtJelrGyiRGtzKuDLOPOJrYPfA9ZDCxbGWx3bxMjBITD7Pp2NjFCwMWXLOPuJkY0iFg/67a2iRENIuZkfdzfxAgp8WqQNV3cxAgB6dcs494mRorgzzTLWNnESBF8fMsy7m9ipAj@vGeToP0GA3fM7KLLmxghENsoa7m0iREN3Bll4723iREN3LGzpiubWAnSL2UxcFHOYDvAl8ti4DWfxcCZLYrNhRm2zHS7sMW0KVm/qvEpbcqpbkP/nVLpDlY6Ygd3PPpX2e6IvNrZ6RQ7RAWuUFW2oVun6/1ddXU@F6vt1@nbu2l31Vzc0nsuKJzrb9DsKlJ1tX2fUmmJ8yqy1TUdsoeE1Hz7/rjQBbvgAW4nQ3CheIyoC08pT4IjZRtIzLPEOqxnzNzk1QJFe@ACpDiGWS4OYVRTx3rvEtCErXAMCj4Y7Q9GW20sGNfYFpQ0DtVA5@PE3DGiqmGLY9yotkCiGgstn2sBpeO1kfze3baptihYQWBJLD7dZLEqI5nANmY5TRZnJlJz8LZ6@aFSYb5Fl5k9N43HV4hMowZxmabJZZFdxi2Jz2mqif0mriSepFn/naCAFkfHSkLUQR@7Zs9xDYPrEE6M2Upwe@x7gwcrfOk7QTSScvyW3KXcHYJFXX1MeGg9dmJS6Mwp6QJ3SEozV10KJz3M0YRwBSp9BGOuyh1zBWZWnKcG1/n/xNzg1V7gmM9sAnmrYc71/THy/AiNzMh6GniPHLAKi@VKWFR7mIjMN5lN5HSWYzMtmfAw@Wcx2WITygbNyBpR6PtBGivwSNfFWNA/ulSYC6L46z@t2vmJISiO8Kn@rXV90ro2BEd572gaUYLbW8VUXpVQGSs2G1mKrwwU66ShyIqkmI4ifPq8EOP4dMSBNhPIstI4sYDdB7FXELdBTchGt7eBQi28K07Ho0rwOBh4UR@uDMyfjveha/ZqIdkS4VrwKwwsQ/hyctpsxVACUug4thgGcF3DbDjvTzwrGvgeusANMf7efi78jcWu0dBh2JWkJf0Ei3HgRJPAQzkJeJaUv5YUwA/JkvL3kkLVLQnXawRqUiYr5Ft8JcZXBnAxN2RZT5mvljwTXBdjFgFUX6Kn@Kpw96EbrqPuwHMOtSNeq8orjn1NDPBEZ2V4z2pcgmrkOHENQgm0af4HNT/xjBXbNXy@8Oh8xkHJQPzplXcQoRXTY1j669PAdXAOQir6q5GESQzgbDbBt0BbEjzcLNwUGgVXpFlkgvGNATy6a7iO9xg94RtRp4XbhHtz88BwdXGCccOAtYRRgG8KTUkqEFH8l2Pr4o4aUqlSLZXF@dLIAKxf4NM1ww/4vFAv3BV@ivG5wSkPVdSC9jOR7ViDEdxjYbHOoxPAdzyJOL1ugLh@Bz5QX2jvgLulvYN6Pl8/KFdE1tA6YPV/uftSe6fc5WEvujNKJbmeCic9Dyy4koiREgSkbhg7RTFOWOCJEQ28iTOnEaes9YNSBXgOy3sihRLjS7OJZvGngX@KqC6XKjrNnn6B77Z/rqzVWkT/Al@vBSFcEG5Xk/UCORkWbsS4aWjM4tBgdQzhH9KyLQxluWvc0ETRWbPLQMhDl82H3ZXQB0vTEFHM@lPcpjWwYvB12TSb3kzxZYHZykE70gjnYHbJSuTGuDygvKnszVLo7Y9Ch78Xev9wg0oxN@Q1V6LFYp6gd4010ghIz1AsCF5gF5jSV4g9bEJAkxL/i1b4BTaPQFwyaSSqt2lE9OWOsW0QubiNzQNN3KY5g@9KUP/J6humHXObLhYPt10RKgbMcMoWHEAKVCNXRXdOAPexwcsgBDUcLRSaFPNoeOgeDbfcqrs1rLKxysaQo3myw4JnhtaFcoBHY2Z35maWyAlL5/oQiTWuj7178xH3hzeckRx@yY0DLnRwGNK3tBx4z2RmTWBkC0hAcr@4OCXhgnSB8yJ9TK6447BiTk7fGAqXFfSzJOmSNDzAdBOmRQshT8I/TKcwEPXfL4Mu13ZcB97bkGdohXR7ggaRpOYBiEskaQl20jSZRolAnySbvpTMu3NBpycV/UcDXMksxP4ZMaEd4o/o0xrAYANcxtAuIblVWmOYzfAYnvk1H40HdsGJBiOnMLbGk8JL@K7bZuSIqzko/fkhjSJz4MI1ubQSYHpVjyv0usQuZcLMfH0GXcg05CIp7ZUqO7ulChJiUzJ4bX7SaqSnhgmXC@7T/53/VGsaHfrhIAFw4HOMJPAa3PXgh0Nhkh7MbflcgddEYTY1g0eIQXOK0sxNP6FfcDXL/Rc"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"225165","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes: content + 170 bytes: filename.</h1>
<p>H(X) = 3.57662</p>
<ul>
<li>Filename: <code>.o.c.c.zXXOnepigcannotfly.a.o.o.o </code></li>
<li>Content is empty.</li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv/fTzGkkUxMQjIIisSoFL2WcxQftS4roCskQYMh4ZCgaOB89d49kyAQertuXTUzv/2c/ZiHL@Hzry9fKs6eae1aTrfYK25X7F1tZ8cq29pOudc1e5qtFUtlrVwm5Y3QiZDijPXxwAxfkKYVi7ozGQajCJ3VH2tnZ0Zdx9H70EFPTmQFfi@fZzMrGAxM3xYPVNt5Vf2x56HiQZ7k86nwZe3mm8HxOOVDynCugJFEPqYfqTpLBsqMm5v90WzcPX6/OTaKmrY9By8vvjfuzn4@1i@ur0/qNwbRW4jj46@1798eb0@uvzcumlXpfcYhA72jTj7PVhWgYRC6k2QmfU1E7v@HhDMYe2bkoPCZ8QfDCIZvwcgOh54b5fOm55ohUp6QwMdE4vgjbiYYAv0K@Xzzx9lZ/fzYqDIbmNqz9fDZ7UU6GyPKlwKO9Rwg/otILRNqOQeGioFnH@Qh9K@mh7gc6ple6HDT6TKNqWbSk2no2EgI1Yn6ruoh/PpQBabwA3WoEOMCnrmohUUcQBJqPlJeozGZRiOk1EPUbmnKXgcJrba/1RGmTyNniAqJcvWhtMOrcbWm8129qattn80vwdxDodD2VVXv1vRZMm09UD2EFHl1qOrRMljR1jFCCK8GGXB3bx0jBKT9LGNlHSNamVfdLOP2OrYHfI9ZDCxbGWxndx0jBITD7Pq21zFCwMXXLOPOOkY0iFgv67a2jhENIuZkfdxbxwgp8eooa7q4jhEC0m9Zxt11jBTBn0mWsbKOkSL4@J5l3FvHSBH8@cgmQfsNBu6Y2UWX1zFCILZR1nJpHSMauDPIxnt3HSMauGNnTVfWsRKkX8pi4KKSwbaBL5fFwGs@i4EzmxSbCVNsmel2YYtpU7J@VeNT2pQT3Yb@O6XSbVxoi23c9unvwlZb5NX2drvYJipwhWphC7p1strfVU/nc7Haepu8f5h2R83FTb3rgcKZ/g7NriJVV1sPKZWWOK8iW13RofhISM23Ho7kDtgFD3ArGYILxSNEXXhOeRIcFbaAxDxLrMN6hsxNXpUp2gUXIMUxzHJxCKOaOtS7V4AmbPIRKPhktD8ZbfV4zrjCNqekcaiOdD5OzB0hqhq2OMaNanMkqrHQ8rkmUNp@CykfnS2baotGSwgsicWnkyxWZSQT2IYsp8nizERqBt5Wrz5VFphv0VVmz03j8Q0ic1yDuEzS5LLILuKWxOc01cT@J64knqRZ/52ggOZHx1JCVLeHPbPreIbBtQknxmwluDUMfPfRCl97zigaSDl@U@lQ7jbBoq4@JTy0HtsxkdszSrrEbZLSzGWXwnEXczQhnEylD2HMVbkjTmZmxVlqcJX/T8zHvNodOeYLm0DeapjzgmCI/CBCAzOynl3/iQNWYb5cCYtqFxOR@aawiZLOcmymJRMeJv/MJ5tsQtmgGVkjCr1glMYKPNJ1MRb0zy4VZoIo/nr8T7N2fmIIhaBgwc/H3d2F7wzdJ8v0wbue914wgQQ/SNhIWDdAKXpErg/3gSLaRiVU1pEdbCCU0DmefflEM7dhB76zUb9o3pw0bwxB2MDDketHPTTnS0nc9M1CiiXCBeBXOLIM4evJaaMZQ7Kl0HFsMRzBxQyz4aw39q3IDXx0iY/F@HvrRf4bix3jWIdhR5IW9BMsxiMnGo98lJOAZ0H5a0EB/IAsKH8vKFTdgnCzQqAmFbJEvsPXYnxtABdzQ1H0lPl6wTPGdTFm60f1BXqKr@X7T91w8fRc3znQDnmtqiw59i0xwBOdFdwDq2YJ6o7jxBUIJdC6@R/U/Ng3lmzX8Pnco/MpB8UB8aeXWzdCS6aHsPS3Z9dzcA5CKgbLkYRJDOB0OsZ3QFsQfNyQb@Vj2RNpFplgfGsAj@4ZnuM/Rc/4VtRpiTbghtzYNzxdHGN8bMBawmiEb@WGJMlEFP/l2Lq4w2OpVKmWyuJsYcQF65f4dMXwIz6X6/K9/FOMzw2u8FhFTWg0E9mO5Q7gxgqLdZ6cEXyH44jT6waI6/fgA/WFdgm4W9rdr@fz9f1yRWStqwNW/5d7KLW2yx0edp17o1RS6qlw0t3AgiuJGClBQOqGsV0U44QFHhOR64@dGY04Za3vlyrAc1DeFSmUGF@YTTSLPw38U0R1pVTRafb0S3y/9XNprdY8@pf4ZiUI4Zxwt5ysV8hJX74V44ahMYt9g9UxhL9Py1buK0rHuKWJorNGh4GQhw6b9ztLoR8tTENEMetPcYvWwJLBt0XTrHszwVcys5WDdqQRzsHsipXIrXG1T3lT2duF0PsfhQ5@L/Tx6QaVYm4oK65E88U8Q@8aK6QBkF7ofgdvrUtM6UvELjYhoEmJ/0Ur/BKbhyAumTQS1bs0Ivpix9gyiFLcwua@Jm7RnMF3Kaj/ZPX10465SxeL@1ueCBUDZrjCJhw1BahGrorunRHcvNxXNwQ1HC0UmhTzsH/gHfY3vaq32a@yscrGkKNZssOCZ4bWgXKA52Fmb@amlsgJC@d6EIkVrs@9e/259ofXmpEcc8ndAq5ucOzRV7My8l/I1BrDyBaQgJRecX4ewlXoEudF@mxccsdhxZycszEULivoF0nSJam/j@kmTIsWQp6Ev59OYSDqv18GXa7teA68rCHP0Arp9gQNIkmNfRCXSNIS7KRpMI0SgT5JNn0pmXdmgk5PKvonBbh8WYj92WFMOyQY0Ec0gKM1cBFDu4SUZmmFYTrFQ3jQ1wI0dG3ZidyBIw@t4Vh@DT9024wccTkHpT8/mVFkuh5ciEtLAaaX8rhCL0bs@iVMzbcX0IVMQymS0m6psr1TqiAhNiWD12YnzeP01DDhGsFt/N/5T7Wm0aEfDhIABz7HSAKvwa0O/nEoTNKDuc2Ak3lNFKYTc/QEMWhMUJq5yQb69V8"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<ul>
<li>First <code>.o</code> pops to output, if any</li>
<li><code>.c.c.zXXOnepigcannotfly.a</code> is done if and only if stack is empty.</li>
<li><code>.o.o.o</code> to pop top three to output.</li>
<li>A space at last to push a space.</li>
</ul>
","","user100411"
"225238","<h1><a href=""https://github.com/Lyxal/Vyxal"" rel=""nofollow noreferrer"">Vyxal</a>, <s>29</s> 26 bytes, times out when n&gt;=200,000 on online interpreter.</h1>
<p>My first ever Vyxal post.
29-&gt;26, adviced by @lyxal.</p>
<pre><code>6ɽ{:L?&lt;|:2*$:3*$:5*∪∪∪}s?Ẏ
</code></pre>
<h2>How it works</h2>
<pre><code># let first hamming numbers are 1 to 6
6ɽ
# while items of they are less than n; do
{:L?&lt;|
# for each item, multiply with those numbers
# and then unify them; done
  :2*$:3*$:5*∪∪∪}
# sort
s
# take first n items
?Ẏ
</code></pre>
<p><a href=""http://lyxal.pythonanywhere.com?flags=&amp;code=6%C9%BD%7B%3AL%3F%3C%7C%3A2*%24%3A3*%24%3A5*%E2%88%AA%E2%88%AA%E2%88%AA%7Ds%3F%E1%BA%8E&amp;inputs=200&amp;header=&amp;footer="" rel=""nofollow noreferrer"">Try it Online!</a></p>
","","user100411"
"225275","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, <code>W</code>: 87.</h1>
<p>Characters are: <code>!-.01ACDOVW</code> (but <code>!</code> can be any others, and <code>O</code> can be anything that works as <code>pop one and discard it</code>).</p>
<p>Here's how to emulate cyclic tag system program <code>(101,001,10)</code> with input <code>1</code>, for example, in Pxem (<code>??.z ... .a</code> is pseudo-comment; can be erased):</p>
<pre><code>??.z
# input is 1
# then loop begin
.a!1.W??.z

  # exit if empty
  .a.C.C.-.W.D.A??.z
  # append 101 if top is NOT 0
  .a.C0.-.W.V101.VWW.-.A??.z
  # erase top (by printing it)
  .a.O??.z

  # exit if empty
  .a.C.C.-.W.D.A??.z
  # append 001 if top is NOT 0
  .a.C0.-.W.V100.VWW.-.A??.z
  # erase top (by printing it)
  .a.O??.z

  # exit if empty
  .a.C.C.-.W.D.A??.z
  # append 10 if top is NOT 0
  .a.C0.-.W.V10.VWW.-.A??.z
  # erase top (by printing it)
  .a.O??.z

# end of loop  
.a!.A
</code></pre>
<p><a href=""https://tio.run/##vVhtV@LIEv7ur2gykXQMIWkERWJUBlyHXcWXcR1HQE8gQYMhZJOgaGD/@tzqThAIc2fv2Q9Xj6b7qae6qqu6Ot15Dp5@fPpUtvaM3m7P6hb6he2yuavu7PRKprpT6neNvmqqhWJJLZVIaSOwQiRbY208NIJnpKqFgmZNvJEfotPaQ/X0VK9pOHzzLPRohb2R289mWa83Gg4N1xQPFNN6Udyx46DCQZZks4nyRfX6i87xOOEh2ZsPwEQiH9GHVJnFDXnGzc3@2WzcPny9rusFVd2egxfnXxu3p98faudXV8e1a51oLcTx0efq1y8PN8dXXxvnzYr0NuOQjt5QJ5tlsxohbxTYk7gnfY5V7v6LhjUcO0ZooeCJ8UdeCM3XkW8GnmOH2azh2EaA5Eck8BGROP6Imwm6QJ9CNtv88/S0dlbXK8wGpvZMLXiy@6HG2ojyEsDqPY0Q/0mklgm1nAFDhZFjHmQh9C@Gg7gM6htOYHHT6bKMDc20J9PAMpEQKBPlTdEC@PeuCGzAd9ShSowFnLlqD4t4BEmoukh@CcdkGvpIrgWo3VLlvQ4SWm13qyNMH33LQ/l4cOW@uMMrUaWq8V2tqSltl/UvwNx9Pt92FUXrVrVZ3G3d03EIKfCKp2jhMlhW1zFCCK@MUuDu3jpGCGi7aWJ5HSNqiVfsNHF7HdsD3kMaA8u9FLazu44RAspBen7b6xgh4OJLmrizjhEVItZPu62uY0SFiFlpH/fWMUKKvOKnTRfWMUJA@zVN3F3HSAH8maSJ5XWMFMDHtzRxbx0jBfDnPZ0E9ScYuGOkJ11axwiB2IZpy8V1jKjgzjAd7911jKjgjpk2XV7HipB@KY2Bi3IK2wZeJo2B13waA2c2KTYTprhnJNuFKSZFyepViU5oUU40E@rvhGq3cb4ttnHbpf/zW22RV9rb7UKbKMAKlPwWVOtktb4rjsZnIqX1Onl7N8yOkomaWteBAWfaGxS7ghRNad0nUrrEeQWZysoYsouExHzr/ijXAbvgAW7FTXChcISoC08JJ8ZRfgtEzLPYOszHY27ySo6iXXABUhxBLxMF0Koqnta9BDSm5Y5ggA@i@UE0lfqcuEKbS5I4VHyNj2JzR4gODVscY6PqHAmrLLR8pgmStttC8ntny6Sjhf4SAlNi8enEk1WYyACax3IaT86ItWbgbeXyY8g88y28TO25STy@QGTqVYjLJEkui@wibnF8TpKR2F/sSuxJkvWfKQpo/upYSohi97FjdC1H17k24cSIzQS3vJFrP/SCl77lh0Mpw2/KHcpuEyxqymPMoeuxHZFce0ZFF7hNEpmx7FIw7mKOJoTLUe1DaHMV7ojLMbPiLDG4yv8Vuc4rXd8ynlkH8lbFnDMaecgdhWhohL0n233kgCrMpythUeliIjLfZNaRk16G9dS4w0Pnr3lnk3UoDYqRFaLQH/lJrMAjTRMjQfuoUmEmiOKP35rVs2NdODzMv298QrZrh7bhVFDXerRd9GqHT4gAHj5ZLqIub@SNDMl/Y/QNhD4ha2KHyO4ja@iFb4DkjXwNfuX8t3w9X2U8SjM8z4JzFbwYKBnOK8gOUPP8GqmJjspUboCQv/n2DToLXcs3Aovp4O4b8nzbDSFeyA7FWPf833qj/rM36v/PG6L@kzP/1hcgwvijPssgQjSH@aqwUTtvXh83r3VB2MBMtw9HNrYe@ETETV97SO6JcCj7Efg9Xfh8fNJoRlCAUmBZphj4cFjGrDnrj91eaI9cdIHrYvS19Zz7A4sdva5BsyNJC/kxFiPfCse@izIScBaS3xcSwA/IQvLHQkKHWwiuVwTUpEyWxLf4SoyudGAxN2RZS8hXC84Y18SIzR/VFugJvsrdfYwNlwHHdq0D9ZBXK/KSY19iAzzR2CZwz3YYCfYCjhNXIBRD6@b/pObHrr5ku4rP5h6dTTkoWIg/vXDAaloy7cHUX59sx8IZCKk4Wo4kdCIAp9MxvgXZQuDiRu4mV885Is0iU4xudOBoju5Y7mP4hG9EjW4bDbi1NPZ1RxPHGNd1mEsQ@vgm15CkHBHFvzk2L@6wLhXLlWJJnC2M2GD9Ap@sGH7AZ7la7i73XYzOdC7/UEFN2PwMZFo9ewi3CJis9Wj58PTGIafVdFDX7sAH6gvducDd4u5@LZut7ZfKIttONcBqf3P3xdZ2qcPDm@BOLxblWqIc77hAweVYjRQhIDVd3y6IUUyBCx4UzNia0YhTam2/WAbOQWlXpFBsfGE2Hln8ruPvIqrJxbJGs6dd4Lut70tz7c2jf4GvV4IQzAW3y8l6gZwMcjdi1NBVZnGgs3UM4R/QZZsbyHJHv6GJor1Gh4GQhw7rDzpLofcXpiGimNWnuEXXwJLB10XRrHszwZc5ZisD5UgjnIHeJVsiN/rlPuUmujcLpbdfKh38XOn9ww2qxdyQV1wJ55N5gtrVV0RDED3DYkFw/73AVL4k7GIDAhov8d/pCr/AxiGoSwaNROU2iYi22DG2dCIXtrCxr4pbNGfwXArqX@nxBknF3CaTxYMtR4QVA2a4/Ca8/vOwGrkKurN8OA3bL3YAw3B0odCkGIeDA@dwsOlUnM1BhbUV1oYczeIdFjzT1Q4sB7iyp/ZmbtoTOWHhXB8iscL62LvXr9C/uEHr8dEjPu/BcRqOIvRLhuy7z2TaG0PLFJCA5H5hfkaB4@kFzor0Kr/kjsUWc3z2iWDhsgX9LEmaJA32Md2E6aKFkMfhHyRdaIjaz6dBp2tajhVaCPIMpZBsT1AgktTYB3WJxCXB3jQNNqJEoE7iTV@K@52ZoNE3Ff3MAwfiHmKfgsa0QkZD@mEDQH8NXMTQLCK5WVwhTKfYC0A@Qp5t5qzQHlo5r@eNcy/Bu2YaoSUu56D4688YKDRsBy4pxaUA04tSVKaHVXYkFqbG6zOMhQxdLpDibrG8vVMsIyEyJJ1XZ8fNevLWMOBox238z/lPRk2iQx8cJABe@BwTCbwKJ2344VAQpwdzmyMux6uiMJ0Y/iPEoDFBSeYmG@jHfwA"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"225276","<h1><a href=""https://esolangs.org/wiki/AAAAAAAAAAAAAA!!!!"" rel=""nofollow noreferrer"">AAAAAAAAAAAAAA!!!!</a>, Score: 65 (<code>A</code>).</h1>
<p>Characters are <code>! ,A</code>.</p>
<p>Proven as in <a href=""https://esolangs.org/wiki/AAAAAAAAAAAAAA!!!!_Turing-completeness_proof"" rel=""nofollow noreferrer"">this</a>.</p>
","","user100411"
"226297","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (for content) + 50 bytes (for filename).</h1>
<ul>
<li>Filename (unprintables are escaped): <code>M\177.w.i.c;.-\001.y.s\001.+;;;.a.c#.-\001.y.s\177.%.o###\177.a\001.+.a</code></li>
<li>Content is empty.</li>
</ul>
<h2>Usage</h2>
<ul>
<li>Full program.</li>
<li>I/O with stdin and stdout.</li>
<li>Accepts one program at once.</li>
</ul>
<h2>With comments</h2>
<pre><code>XX.z
# let counter is 127
.aM\177XX.z
# loop
.a.wXX.z
  # c = getchar()
  .a.iXX.z
  # increment here
  .a.c;.-\001.y.s\001.+;;;.aXX.z
  # output and reset here
  .a.c#.-\001.y.s\177.%.o###\177.aXX.z
# break if c is EOF
.a\001.+.a
</code></pre>
<p><a href=""https://tio.run/##zVhrU@LIGv4@v6IJkXRMQtIIisSoDLoOu8qo41iOgFZIgoAxYUlQNLB/fc7bnSAQ5kydmQ9bxypN9/Ne@730xceg9z2bLTu7prVjOZ1Ct7BVtne07W2rZGvbpW7H7Gq2ViiWtFKJlD4ETogUZ6yPn8zgEWlaoaA7k6E/CtFp7b56emrUdBy@Dh304ISW73VzOTaz/Kcn07PFfdV2nlVv7LqosJ8juVwifF69@mRwPE74kDKcK2AkkY/oR6rM4oEy4@ZmvzbqN/dfro6MgqZtzcHzz1/qN6ff7mufLy@Pa1cG0ZuI46OP1S@f7q@PL7/UPzcq0uuMQwZ6Re1cjq3KR0M/6E/imfQxFrn9LxLO09g1QwcFPcbvD0MYvvgjOxi6/TCXM92@GSDlAQl8RCSOP@RmgiHQr5DLNb6entbOjowKs4GpPVsPev1uqLMxonwJ4Fg9H/FZkVom1HIGDBV8197PQeifTRdxGdQ13cDhptNlGlPNpCfTwLGREKgT9VXVA/jzpgpM4RtqUyHGBTxzUQuL2IckVD2kPIdjMg1HSKkFqNXUlN02Epotb7MtTB9GzhDlY@XqXXGbV6NKVec7ekNXWx6bn4O5u3y@5amq3qnqs3javKN6CCnw6lDVw2WwrK1jhBBe9VPgzu46RghIe2nG8jpGtBKv9tOMW@vYLvDdpzGwbKWw7Z11jBAQDtLr21rHCAEXn9OM2@sY0SBi3bTb2jpGNIiYk/Zxdx0jpMiro7TpwjpGCEi/pBl31jFSAH8macbyOkYK4ONrmnF3HSMF8OctnQTtBxi4Y6YXXVrHCIHYhmnLxXWMaODOUzreO@sY0cAdO226vI4VIf1SGgMXlRS2BXyZNAZe82kMnNmg2EyYYstMtgtbTJqS9asandCmnOg29N8JlW7hfEts4ZZH/@Y3WyKvtrZahRZRgStQ85vQrZPV/q64Op@J1ObL5PXNtNtqJmroHRcUzvRXaHYVqbravEuotMR5Fdnqig7FQ0Jivnl3KLfBLniAm/EQXCgcIupCL@GJcZTfBBLzLLYO6xkyN3lVpmgHXIAURzDLRAGMqupQ71wAGrPJh6DgndF@Z7TVoznjCtucksShMtL5KDZ3iKhq2OIYN6rOkbDKQstnGkBpeU2kvLU3baotHC0hsCQWn3a8WJWRTGAbspzGizNjqRl4W7l4V5lnvoUXqT03iccniMxRFeIySZLLIruIWxyfk0QT@41diT1Jsv4jQQHNj46lhKj9LnbNjuMaBtcinBixleDm0Pf691bw3HVG4ZOU4TeUNuVuESzq6kPMQ@uxFRG5NaOkc9wiCc1cdikYdzBHE8LJVPoAxlyFO@RkZlacJQZX@X/GfMSrnZFjPrIJ5K2KOdf3h8jzQ/Rkhlav7z1wwCrMlythUe1gIjLfFDZRklmGzbR4wsPk7/lkg00oGzQja0Sh64@SWIFHui5Ggv7epcJMEMXvfzSqZ8eGcNYiOzv5l3w/b@l5paVpJP@aD9hX0nU9b@at7BJOmTc28n42m2VjM@bMm8KH2ufG1XHjyhCED3g46nthFy4CzAqfkLjpi4UUS4Sj/nswsgzh4/FJvRFBWqXAcWwxGMEVDLPhrDv2rLDve@gcH4nRl@aj/BcW28aRDsO2JC3ox1iMRk44HnkoIwHPgvLnggL4PllQ/lpQqLoF4WqFQE0qZIl8gy/F6NIALuaGougJ8@WCZ4xrYsTWj2oL9ARfyrfvuuGK6fY9Z1874LWKsuTYp9gAT3RWWnesbiWoMI4TVyAUQ@vmv1LzY89Ysl3FZ3OPzqYclAHEn15j@yFaMj2Epb/0@q6DMxBS0V@OJEwiAKfTMb4B2oLg4bp8LR/JrkizyASjawN4dNdwHe8h7OFrUafFWIe7cH3PcHVxjPGRAWsJwhG@luuSJBNR/Idj6@IOjqRiuVIsibOFkT5YP8cnK4bv8Zlck2/lb2J0ZnD5@wpqQEuZyHas/hPcTWGxzoMzgu9wHHJ6zQBx/RZ8oL7QfgB3izt7tVyutlcqi6xJdcBq/3B3xeZWqc3D/nJrFItKLRGO@xhYcDkWI0UISM0wtgpiFLPAsyHse2NnRiNOWWt7xTLw7Jd2RArFxhdmY83iNwN/E1FNKZZ1mj39HN9ufltaqzWP/jm@WglCMCfcLCfrGXIykK/FqG5ozOLAYHUM4R/QspUHitI2rmmi6KzeZiDkoc3mg/ZS6EcL0xBRzPpT3KQ1sGTwZdE0695M8IXMbGWgHWmEMzC7YCVybVzsUd5E9noh9PpTof0fC729u0GlmBvKiivhfDE96F1jhfQEpEcoFgSvqnNM6UvEDjYhoHGJ/0kr/BybByAumTQSlZskIvpix9g0iFLYxOaeJm7SnMF3Kah/p/UNko65SRaLB5uuCBUDZrj8BhwqeahGroJunRHcsfrP/QDUcLRQaFLMg8G@ezDYcCvuxqDCxiobQ45m8Q4LnhlaG8oBHoKpvZmbWiInLJzrQiRWuN737vWH2U/eZUZ8oMW3CLikwQFH38fKyHskU2sMI1tAAlK6hfnJB5eec5wT6QNxyR2HFXN8okZQuKygHyVJl6TBHqabMC1aCHkc/kEyhYGo/3gZdLm24zrwhoY8Qysk2xM0iCTV90BcInFLsJOmzjRKBPok3vSleN6eCTo9qeg/D@CaZSH2D4Yx7RD/iT6XARytgYsY2kWkNIorDNMpHsLTveqjYd@WnbD/5MhDaziWn4M33YZHv7icg@LPH8coNPsuXH2LSwGm1@@oTK9A7KIlTM2XR9CFTEMpkOJOsby1XSwjITIlg9dmx42j5NQw4cLAffif859oTaJDPxwkAA58jpEEXoP7G/xwKIjTg7kNn5N5TRSmE3P0ADGoT1CSuckH9F3/5Z/sr4v0zG7v16W6/4pvv2Ekm@12e9nev2LsN8LWdcxflzJ/QyZrjiEWvf/PMPyGW/5/AA"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"226303","<h1><a href=""https://www.gnu.org/software/gawk/manual/gawk.html"" rel=""nofollow noreferrer"">AWK</a>, <s>109</s> 102 bytes</h1>
<p>-7 bytes; thank you, @ovs!</p>
<p>Pretty naïve.</p>
<pre><code>a=1{for(p=2;i++&lt;length;)for(a*=p++**(index(&quot;0s~|A()&quot;,substr($0,i,1))*(j=2)-1);j&lt;p;)p%j++||p++&lt;j=2}$0=a
</code></pre>
<p><a href=""https://tio.run/##LczBCsIwEATQ@35GqbCbVNj2muaQT4lYNVFqaFoUjPn1mIIDc3kwY1/34jQrX1us7j@X54JBD8pJOT6m@breFO1mhQ5SCoFuPk9vbDjmZJCaLm6nuC7Ycue6nkig1wMde1J@DIrCwUuZUp2O1b8ta1sKGMiRgQ0DIcQ9DBkzp8oE/@sf"" rel=""nofollow noreferrer"" title=""AWK – Try It Online"">Try it online!</a></p>
<h2>Ungolfed</h2>
<pre><code>{
# accumulator and currently seeing prime number
a=1;p=2;
for(i=1;i&lt;=length($0);i++){
   # multiply p_i^(x_i)
   a*=p**(index(&quot;0s~|A()&quot;,substr($0,i,1))*2-1);
   # get next prime
   p++;
   for(j=2;j&lt;p;)
      if(p%j!=0)
         j++;
      else{
         p++;j=2;}}
# finally
$0=a
</code></pre>
","","user100411"
"226530","<h1>11. <a href=""https://codegolf.stackexchange.com/users/103272/ross-long"">Ross Long</a>, <a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 (content) + 17 (filename).</h1>
<p>Since it was 15 bytes, terminating LF is also output.</p>
<p>Filename is as follows:</p>
<pre><code>#&gt;&amp;:*.@
~2-1??
.p
</code></pre>
<p>Content is empty.</p>
<p><a href=""https://tio.run/##jVhrV9pKF/7urxjSSGZIQjIIisSoFDyWc5SqtS4roCuQoGAIHBIUDfSv9@yZBIHQt@t1Lc3Ms6@zL3Px2X/69elT0dm3Onsdp53r5naK9p6@u9sp2Ppuodu2urqt5/IFvVCghS3fCZDqTIzJwPKfka7ncoYzHQ3HATqrPJTPzsyKgYO3kYMenaAz9LrpNJ91hoOB5dnkULOdF82buC7KHaZpOh0LX5Svv5iCiGM@pI4WCjiJiCH7yKV5NFDnwsLs93rt9uHbddXM6frOArz4@q12e/bjofL16uqkcm1So4EEMfxc/vbl4ebk6lvta70kv80FZKI31Eqn@aqGaDT0e9NoJn@ORO7@h4QzmLhW4CD/ifMPRwEMX4dj2x@5vSCdttye5SP1EUliSGVBPBbmkimxr5RO17@fnVXOq2aJ28DMnm34T71uYPAxYnwx4HSehkj8RJhlyiynwFBu6NqHaQj9i@UiIYW6lus7wmy2SuOqufR05js2knxtqr1phg9/3jWJK3xHLSbEuYBnIdrBBA8hCWUPqS/BhM6CMVIrPmo2dHW/haRG08u0pNnj2BmhbKRcu8/vilpYKhti26gbWtPj8wswd5/NNj1NM9plYx5NG/dMD6U5URtpRrAKFvVNjFIqasMEuLe/iVEK0l6SsbiJUb0gar0k484mtg98D0kMLHcS2O7eJkYpCPvJ9e1sYpSCiy9Jxt1NjOoQsW7SbX0TozpEzEn6uL@JUZoXtXHSdG4ToxSkX5OMe5sYzYE/0yRjcROjOfDxLcm4v4nRHPjznkyC/hsM3LGSiy5sYpRCbIOk5fwmRnVwZ5CM994mRnVwx06aLm5ieUi/nMTARTWB7QBfKomB12ISA2e2GTaXZrhjxduFTeKm5P2qhaesKaeGDf13yqSbONskTdz02N9spklErbnTzDWpBly@ls1At07X@7vkGmIq1Bqv07d3y25pqbButF1QODfeoNk1pBla4z6mshIXNWRrazpUD0mx@cb9sdICu@ABbkRDcCF3jJgLTzFPhKNsBkjcs8g6rGfE3RQ1haFtcAFSHMIsFfowKmsjo30JaMSmHIOCD0b7g9HWqgvGNbYFJY5DaWyIYWTuGDHVsMVxblReIEGZh1ZM1YHS9BpIfW9lbKYtGK8gsCQen1a0WI2TLGAb8ZxGi7MiqTl4W7r8UJnlvgWXiT03jscXiEy1DHGZxsnlkV3GLYrPaayJ/0auRJ7EWf@doIQWR8dKQrReF7tW23FNU2hSgYR8JbgxGnq9h47/0nXGwUBOidtqi3E3KSaG9hjxsHpshlRpzhnpAjdpTLNWXfInbSywhAgKkz6CsVASjgWFmyXz2OA6/5@Yq6LWHjvWM59A3spYcIfDEfKGARpYQeep5z0KwCotlitjorUxJdw3lU/UeJbiMz2aiDD5dzHZ5hPGBs3IG1HqDsdxrMAjwyChZHx0qTSXCPn1V718fmJKnw7TpUz2eOtnTqVHR1vZkbRV@Vq/Pqlfm5K0hUfjnhd04UTn7GJMEmavHaR2CJzZv/xxx5Q@n5zW6iHkR/Ydxyb@GO5SmA/n3YnXCXpDD13gKgm/NZ6VfzBpmVUDhi1ZXtJPMAnHTjAZeyglA8@S8veSAvghXVL@WVKYuiXheo3ATKp0hXyLr0h4ZQIXd0NVjZj5askzwRUS8vWjyhI9xVfK3YduuCu6Pc851I9EvaSuOPYlMiBSg9fIPS9AGUpFEMgahCJo0/x3Zn7imSu2y/h84dH5TIB8QvzZfbQXoBXTI1j661PPdXAKQkqGq5GESQjgbDbBt0BbEjxcU26UquISlkUuGN6YwGO4put4j8ETviEGq6oaXGprB6ZrkAnGVRPW4gdjfKPUZFmhhPwU@LqEo6qcL5byBTJfGumB9Qt8umb4AZ8rFeVO@UHCc1PIPpRQHXrDQrbT6Q3gkgmLdR6dMXxHk0AwKiaIG3fgA/OFFTa4m987qKTTlYNCkfBuMwCr/BTu842dQkuEjeLOzOfVSiwcNSSw4GIkRvMQkIpp7uRIGLHA/T/oeRNnziLOWCsH@SLwHBb2CIMi40uzkWbyw8Q/CKqo@aLBsmdc4LvMj5W1dhbRv8DXa0HwF4Tb1WS9QE76yg0Ja6bOLfZNXscQ/j4rW6Wvqi3zhiWKzWotDkIeWnzeb62Efrw0DRHFvD9JhtXAisHXZdNsejPFlwq3lYJ2ZBFOweySl8iNeXnAeGPZm6XQ2x@FDn8v9P7hBpPibqhrrgSLxTxB75prpAGQnqFYEDyPLjCjrxDb2IKARiX@N6vwC2wdgbhssUiUbuOIGMsdI2NSNZfB1oFOMixn8F0J6r9Jff24Y27jxeJ@xiVQMWBGyG7D6ZCFahRK6M4Zw2Wp99LzQY3ACoUlxTrqH7pH/W235G73S3ys8THkaB7tsOCZqbegHOBFl9ibhVmHCNLSuS5EYo3rY@/efGH94YFlRidTdB2A2xacVOyhq469ZzrrTGBkS0hCaje3OMLg9nKB04S99FbccXgxR0djCIXLC/pZlg1Z7h9gtgmzooWQR@Hvx1MYEOP3y2DLtR3Xgccw5BlaId6eoEFkuXYA4jKNWoKfNDWuUabQJ9GmL0fz1lwy2EnF/gsA96UO4v8pmLAOGQ7YuxfA8Qa4jKGdR2o9v8Ywm@ERvMHL8LDv2YoT9AaOMuqMJsqL/27Y8HonqznI//mViwKr58IdNr8SYHaPDovsLsNvTNLMen0GXcgy1RzN7@WLO7v5IpJCSzZFfX5Sr8anhgUnv7D1f@c/1hpHh30ESAAc@AInSaIOFzH4EZAfpQcL20NBEXUizabW@BFiUJuiOHPTLfTrPw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<p><a href=""https://codegolf.stackexchange.com/questions/55422/hello-world/217589#217589"">My first post</a>:</p>
<ul>
<li>Filename: <code>Hello, World!.p</code></li>
<li>Content: empty</li>
</ul>
","","user100411"
"226745","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 0 bytes (content) + 3 bytes (filename).</h1>
<ul>
<li>Filename: <code>d.n</code></li>
<li>Content is empty.</li>
<li>Outputs <code>100</code> (if ascii-compatible environment).</li>
</ul>
","","user100411"
"226747","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 12 bytes (content).</h1>
<p>Unprintable characters are escaped.</p>
<pre><code>.c\001.y.s\001.d.a
</code></pre>
<h2>Usage</h2>
<ul>
<li>Expects stack has only an item, as an argument.</li>
<li>Stack content: (n, xxx) to (n', xxx, n, xxx).</li>
</ul>
<h2>Usage example</h2>
<p>Filename to be <code>_.e.n</code>, with your input from stdin.</p>
","","user100411"
"226751","<h1>Pure <a href=""https://yash.osdn.jp"" rel=""nofollow noreferrer"">yash</a> and <code>echo</code> (or POSIX-compatible shell), 42 bytes</h1>
<p>Separator is space or LF.</p>

<pre class=""lang-sh prettyprint-override""><code>while echo ${#a} ${a+-${#a}};do a=.$a;done
</code></pre>
<h2>How it works</h2>
<ul>
<li><code>${#a}</code> is length of string contained in the variable.</li>
<li><code>${a+xxx}</code> is content of variable a, if a is null string; otherwise string xxx.</li>
<li>Undefined variable is expanded to null string.</li>
</ul>
<p><a href=""https://tio.run/##q0wszvj/vzwjMydVITU5I19BpVo5sRZIJmrrgpm11in5Com2eiqJQEZe6v//AA"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
","","user100411"
"226752","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 9 bytes (filename only), $192255.</h1>
<ul>
<li>Filename (escaped unprintables): <code>$.p\300\377.n.n</code></li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5kxCckgKBKjUvBazlGq1rqsgK5AgoIhcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/l5x9q7vXdTr5Xn6nZO/pu7vdoq3vFnsdq6fber5Q1ItFWvwUOCFSnYkxGVrBM9L1fN5wpuORH6Kz6kPl7MysGjh8Gzvo0Qm7I6@XzfJZdzQcWp5NDjXbedG8ieui/GGWZrOJ8EXl@qspiDjhQ@p4oYCTiBixj1yexwN1LizM/mjUbx@@X9fMvK7vLMCLb9/rt2c/H6rfrq5OqtcmNZpIEKMvle9fH25Orr7XvzXK8ttcQCZ6Q@1slq9qhMajoD@NZ/KXWOTuf0g4w4lrhQ4Knjj/aBzC8HXk28HY7YfZrOX2rQCpj0gSIyoL4rEwl0yJfaVstvHj7Kx6XjPL3AZm9mwjeOr3QoOPEeNLAKf7NELiZ8IsU2Y5A4byI9c@zELoXywXCRnUs9zAEWazVRpXzaWns8CxkRRoU@1NMwL4865JXOE7ajMhzgU8C9EuJngESah4SH0JJ3QW@kitBqjV1NX9NpKaLW@7Lc0efWeMcrFy7b6wK2pRuWKIHaNhaC2Pzy/A3H0u1/I0zehUjHk8bd4zPZTmRW2sGeEqWNI3MUqpqI1S4N7@JkYpSHtpxtImRvWiqPXTjDub2D7wPaQxsNxNYbt7mxilIByk17eziVEKLr6kGXc3MapDxHppt/VNjOoQMSft4/4mRmlB1Py06fwmRilIv6YZ9zYxmgd/pmnG0iZG8@DjW5pxfxOjefDnPZ0E/TcYuGOlF13cxCiF2IZpy4VNjOrgzjAd771NjOrgjp02XdrECpB@OY2Bi2oK2wG@TBoDr8U0Bs5sMWwuzXDXSrYLmyRNyftVi05ZU04NG/rvlEm3cK5FWrjlsb@57RYRtdZOK9@iGnAFWm4bunW63t9l1xAzkdZ8nb69W3Zby0QNo@OCwrnxBs2uIc3QmvcJlZW4qCFbW9OhekhKzDfvj5U22AUPcDMeggv5Y8RceEp4YhzltoHEPYutw3rG3E1RUxjaARcgxRHMMlEAo4o2NjqXgMZsyjEo@GC0PxhtrbZgXGNbUJI4lH1DjGJzx4iphi2Oc6PKAgkrPLRipgGUltdE6nt722baQn8FgSXx@LTjxWqcZAHbmOc0XpwVS83B2/Llh8oc9y28TO25STy@QmRqFYjLNEkuj@wybnF8ThNN/Dd2JfYkyfrvBCW0ODpWEqL1e9i1Oo5rmkKLCiTiK8HN8cjrP3SDl57jh0M5I26pbcbdopgY2mPMw@qxFVGlNWekC9yiCc1adSmYdLDAEiIoTPoIxkJZOBYUbpbME4Pr/H9irolax3esZz6BvFWw4I5GY@SNQjS0wu5T33sUgFVaLFfGROtgSrhvKp@oySzDZ3o8EWHyz2KyxSeMDZqRN6LUG/lJrMAjwyCRZHx0qTSXCPn1n0bl/MSUxNy4taPrrZ29vZyX86RP1W@N65PGtSlJn/DY73thD85zziwmJGH22kVql8CJ/Svwu6b05eS03oggO3LgODYJfLhJYT6c9yZeN@yPPHSBayT63nxW/sakbdYMGLZleUk/wSTynXDieygjA8@S8teSAvghXVL@XlKYuiXheo3ATKp0hXyLr0h0ZQIXd0NVjYT5askzwVUS8fWj6hI9xVfK3YduuCm6fc851I9EvayuOPY1NiBSg1fIPS8/GQpFEMgahGJo0/wPZn7imSu2K/h84dH5TIBsQvzZbbQfohXTY1j661PfdXAGQkpGq5GESQTgbDbBt0BbEjxcV26UmuISlkUuGN2YwGO4put4j@ETviEGq6k6XGnrB6ZrkAnGNRPWEoQ@vlHqsqxQQv4V@LqEo5pcKJULRTJfGumD9Qt8umb4AZ8rVeVO@Umic1PIPZRRAzrDQrbT7Q/higmLdR4dH77jSSgYVRPEjTvwgfnCyhrcLewdVLPZ6kGxRHivGYBV/xXuC82dYluEbeLOLBTUaiIctyOw4FIsRgsQkKpp7uRJFLPA7T/sexNnziLOWKsHhRLwHBb3CINi40uzsWby08Q/CaqqhZLBsmdc4Lvtnytr7S6if4Gv14IQLAi3q8l6gZwMlBsS1U2dWxyYvI4h/ANWtspAVdvmDUsUm9XbHIQ8tPl80F4Jvb80DRHFvD/JNquBFYOvy6bZ9GaKLxVuKwPtyCKcgdklL5Eb8/KA8SayN0uhtz8KHf5e6P3DDSbF3VDXXAkXi3mC3jXXSEMgPUOxIHgcXWBGXyF2sAUBjUv8L1bhF9g6AnHZYpEo3yYRMZY7xrZJ1fw2tg50ss1yBt@VoP6T1jdIOuY2WSwebLsEKgbMCLktOBtyUI1CGd05PlyV@i/9ANQIrFBYUqyjwaF7NNhyy@7WoMzHGh9DjubxDguemXobygHec6m9WZh1iSAtnetBJNa4PvbuzffVH55XZnwuxZcBuGvBOcWeuarvPdNZdwIjW0ISUnv5xQEGd5cLnCXsnbfijsOLOT4YIyhcXtDPsmzI8uAAs02YFS2EPA7/IJnCgBi/XwZbru24DjyFIc/QCsn2BA0iy/UDEJdp3BL8pKlzjTKFPok3fTmet@eSwU4q9j8AuC11Ef8/wYR1yGjIXr0A@hvgMoZ2AamNwhrDbIbH8AKvwLO@bytO2B86yrg7nigvwbthw9udrOag8Oc3Lgqtvgs32MJKgNktOiqxmwy/L0kz6/UZdCHLVPO0sFco7ewWSkiKLNkU9flJo5acGhac@8Kn/zv/idYkOuwjQALgwBc4SRJ1uIbBj4CCOD1Y2BoJiqgTaTa1/EeIQX2KksxNP6Ff/wU"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"226798","<h1><a href=""https://yash.osdn.jp"" rel=""nofollow noreferrer"">yash</a>, 50 bytes</h1>
<p>This is POSIX-compatible.</p>

<pre class=""lang-sh prettyprint-override""><code>echo Programming Puzzles||echo${IFS}Code${IFS}Golf
</code></pre>
<h2>How it works</h2>
<p>Like @NahuelFouilleul but using <code>IFS</code> variable instead.</p>
<p><a href=""https://tio.run/##q0wszvj/PzU5I18hoCg/vSgxNzczL10hoLSqKie1uKYGJKNS7ekWXOucn5IKYbnn56T9/w8A"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
<p><a href=""https://tio.run/##q0wszvj/PzU5Iz@gKD@9KDE3NzMvPaC0qiontbimBiSuUu3pFlzrnJ@SCmG55@ek/f8PAA"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Tryitonline!</a></p>
","","user100411"
"226799","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: <s>47</s> 43 bytes.</h1>
<pre><code>  .zAaGolf.-Code.p.d.aProgramming Puzzles.p
</code></pre>
<h2>What it does</h2>
<p>Branches with first two spaces.</p>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5mQhGQQFIlRKXgt5yhFa11WQFcgQcGQcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/l@0Ds7/ft3uFQWG3bO1re3v9kqXtlQY9c6BZWqFY0kolUvoU2CFS7Kk@HZvBM9K0QkG3ZxPPD9F57aF6fm7UdBy@TWz0aId9zx1ks2zW98Zj07XEI9WyX1R36jiocJQl2Wwi3KpefzU4Hid8SJksFTCSyEf0I1UW8UBZcEuzP5qN24fv13WjoGm7S7D17Xvj9vznQ@3b1dVp7dogehtxfPSl@v3rw83p1ffGt2ZFeltwyEBvqJvNslV5aOIFw1k8k77EInf/Q8IeTx0ztFHwxPi9SQjDV8@3gokzDLNZ0xmaAVIekcBHROL4E24hGAL9Ctls88f5ee2iblSYDUztWXrwNByEOhsjypcAdv/JQ/xnkVom1HIGDBU8xzrKQuhfTAdxGTQwncDm5vN1GlPNpGfzwLaQEKgz9U3VA/jzrgpM4TvqUiHGBTxL0T4WsQdJqLpIeQmnZB76SKkFqNPWlIMuEtodN9cV5o@@PUH5WLl6X9zj1ahS1fme3tTVjsvmLTB3n893XFXVe1V9EU/b91QPIQVenah6uA6WtW2MEMKrXgrcP9jGCAFpN81Y3saIVuLVYZpxdxs7AL6HNAaW@ylsb38bIwSEg/T6drcxQsDFlzTj3jZGNIjYIO22to0RDSJmp3082MYIKfKqnzZd2MYIAenXNOP@NkYK4M8szVjexkgBfHxLMx5sY6QA/rynk6D9BgN3zPSiS9sYIRDbMG25uI0RDdwZp@O9v40RDdyx0qbL21gR0i@lMXBRSWG7wJdJY@A1n8bAmR2KLYQ57pvJdmGJSVOyflWjM9qUM92C/juj0h2c74gd3HHp33yuI/JqZ7dT6BAVuAI1n4NunW32d8XR@Uyktl9nb@@m1VUzUVPvOaBwob9Bs6tI1dX2fUKlJc6ryFI3dCguEhLz7fsTuQt2wQPcjofgQuEEUReeEp4YR/kckJhnsXVYz4S5yasyRXvgAqQ4glkmCmBUVSd67xLQmE0@AQUfjNYHo6XWl4wbbEtKEoeKr/NRbO4EUdWwxTFuVF0iYZWFls80gdJx20h57@Ysqi301xBYEotPN16sykgmsE1YTuPFmbHUArytXH6ozDPfwsvUnpvE4ytEpl6FuMyS5LLIruIWx@cs0cR@Y1diT5Ks/05QQMujYy0h6nCAHbNnO4bBdQgnRmwluD3x3OFDP3gZ2H44ljL8jtKl3B2CRV19jHloPXYiIncWlNTCHZLQzHWXgmkPczQhnEylj2HMVbgTTmZmxUVicJP/T8x1Xu35tvnMJpC3KuYcz5sg1wvR2Az7T0P3kQNWYblcCYtqDxOR@aawiZLMMmymxRMeJv8sJztsQtmgGVkjCgPPT2IFHum6GAn6R5cKC0EUf/2nWb04NQSE8u9V88xzBnml5ll2fpK38mbL9x59czwG91Br@v7u2EF@InyqfWtenzavDUH4hCf@0A0HcNYzRXxC4uavfaT0RTjNfwV@3xC@nJ41mhFkTgps2xIDH25ZmA0Xg6nbD4eei1q4Lkbf28/y31jsGnUdhl1JWtFPsRj5djj1XZSRgGdF@WtFAfyIrCh/ryhU3YpwvUGgJhWyRr7FV2J0ZQAXc0NR9IT5asUzxTUxYutHtRV6hq/kuw/dcIt0hq59pB3zWkVZc@xrbIAnOquee1aaEhQRx4kbEIqhbfM/qPmpa6zZruKLpUcXcw4yDfGnN9VhiNZMT2Dpr09Dx8YZCKnorUcSJhGA8/kU3wJtRXBxQ76R67Ij0iwywejGAB7dMRzbfQyf8I2o03prwHW3cWg4ujjFuG7AWoLQxzdyQ5JkIor/cmxd3HFdKpYrxZK4WBkZgvUWPtsw/IAv5Jp8J/8UowuDyz9UUBO6xkSW3R@O4foJi7UfbR@@k2nI6TUDxPU78IH6Qkse3C3uH9ay2dphqSyyPtQBq/3L3Rfbu6UuD1vInVEsKrVEOG5VYMHlWIwUISA1w9gtiFHMAi@DcOhO7QWNOGWtHRbLwHNU2hcpFBtfmY01iz8N/FNENaVY1mn29Ba@y/1cW2t/Gf0Wvt4IQrAk3K4n6wVyMpJvxKhhaMziyGB1DOEf0bKVR4rSNW5oouis0WUg5KHL5qPuWuj9lWmIKGb9KeZoDawZfF01zbY3M3wpM1sZaEca4QzMLlmJ3BiXh5Q3kb1ZCb39Uejo90LvH25QKeaGsuFKuFzME/SusUEaA@kZigXBw6mFKX2N2MMmBDQu8b9ohbeweQzikkkjUblNIqKvdoycQZRCDpuHmpijOYPvWlD/SesbJR1zmywWj3KOCBUDZrj8DpwbeahGroLubB@uUcOXYQBqOFooNCnm8ejIOR7tOBVnZ1RhY5WNIUeLeIcFzwytC@UAb73U3szN@yInrJwbQCQ2uD727u231x@eXkZ8ZsUXBbiHwRlGn8CK7z6TeX8KI0tAAlIGheXhBveaFs6K9A245o7Nijk@NCMoXFbQz5KkS9LoENNNmBYthDwO/yiZwkDUf78MulzLdmx4JkOeoRWS7QkaRJIahyAukbgl2EnTYBolAn0Sb/pSPO8uBJ2eVPT/A3CT6iP2P4Qp7RBvTF/EAPpb4CqGVhEpzeIGw3yOJ/A6r8KTf2jJdjgc2/KkP5nKL8G7bsG7XlzPQfHP718UmkMHbrfFtQDTG3ZUprccdpcS5ubrM@hCpqEUSHG/WN7dK5aREJmSwWuL02Y9OTVMuBNwn/7v/Cdak@jQDwcJgAOfYySB1@CKBj8cCuL0YG7H42ReE4X5zPQfIQaNGUoyN/uEfv0X"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5mQhGQQFIlRKXgt5yhFa11WQFcgQcGQcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/l@0Ds7/ft3uFQWG3bO1re3v9kqXtlQY9c6BZWqFY0kolUvoU2CFS7Kk@HZvBM9K0QkG3ZxPPD9F57aF6fm7UdBy@TWz0aId9zx1ks2zW98Zj07XEI9WyX1R36jiocJQl2Wwi3KpefzU4Hid8SJksFTCSyEf0I1UW8UBZcEuzP5qN24fv13WjoGm7S7D17Xvj9vznQ@3b1dVp7dogehtxfPSl@v3rw83p1ffGt2ZFeltwyEBvqJvNslV5aOIFw1k8k77EInf/Q8IeTx0ztFHwxPi9SQjDV8@3gokzDLNZ0xmaAVIekcBHROL4E24hGAL9Ctls88f5ee2iblSYDUztWXrwNByEOhsjypcAdv/JQ/xnkVom1HIGDBU8xzrKQuhfTAdxGTQwncDm5vN1GlPNpGfzwLaQEKgz9U3VA/jzrgpM4TvqUiHGBTxL0T4WsQdJqLpIeQmnZB76SKkFqNPWlIMuEtodN9cV5o@@PUH5WLl6X9zj1ahS1fme3tTVjsvmLTB3n893XFXVe1V9EU/b91QPIQVenah6uA6WtW2MEMKrXgrcP9jGCAFpN81Y3saIVuLVYZpxdxs7AL6HNAaW@ylsb38bIwSEg/T6drcxQsDFlzTj3jZGNIjYIO22to0RDSJmp3082MYIKfKqnzZd2MYIAenXNOP@NkYK4M8szVjexkgBfHxLMx5sY6QA/rynk6D9BgN3zPSiS9sYIRDbMG25uI0RDdwZp@O9v40RDdyx0qbL21gR0i@lMXBRSWG7wJdJY@A1n8bAmR2KLYQ57pvJdmGJSVOyflWjM9qUM92C/juj0h2c74gd3HHp33yuI/JqZ7dT6BAVuAI1n4NunW32d8XR@Uyktl9nb@@m1VUzUVPvOaBwob9Bs6tI1dX2fUKlJc6ryFI3dCguEhLz7fsTuQt2wQPcjofgQuEEUReeEp4YR/kckJhnsXVYz4S5yasyRXvgAqQ4glkmCmBUVSd67xLQmE0@AQUfjNYHo6XWl4wbbEtKEoeKr/NRbO4EUdWwxTFuVF0iYZWFls80gdJx20h57@Ysqi301xBYEotPN16sykgmsE1YTuPFmbHUArytXH6ozDPfwsvUnpvE4ytEpl6FuMyS5LLIruIWx@cs0cR@Y1diT5Ks/05QQMujYy0h6nCAHbNnO4bBdQgnRmwluD3x3OFDP3gZ2H44ljL8jtKl3B2CRV19jHloPXYiIncWlNTCHZLQzHWXgmkPczQhnEylj2HMVbgTTmZmxUVicJP/T8x1Xu35tvnMJpC3KuYcz5sg1wvR2Az7T0P3kQNWYblcCYtqDxOR@aawiZLMMmymxRMeJv8sJztsQtmgGVkjCgPPT2IFHum6GAn6R5cKC0EUf/2nWb04NYT8e9U885xBXql5lp2f5K282fK9R98cj8G51vT93bGD/ET4VPvWvD5tXhuC8AlP/KEbDuCgZ1r4hMTNX/tI6YtwlP8K/L4hfDk9azQjSJsU2LYlBj5csTAbLgZTtx8OPRe1cF2Mvref5b@x2DXqOgy7krSin2Ix8u1w6rsoIwHPivLXigL4EVlR/l5RqLoV4XqDQE0qZI18i6/E6MoALuaGougJ89WKZ4prYsTWj2or9AxfyXcfuuEK6Qxd@0g75rWKsubY19gAT3RWOvesLiWoII4TNyAUQ9vmf1DzU9dYs13FF0uPLuYcpBniT6@pwxCtmZ7A0l@fho6NMxBS0VuPJEwiAOfzKb4F2org4oZ8I9dlR6RZZILRjQE8umM4tvsYPuEbUafF1oC7buPQcHRxinHdgLUEoY9v5IYkyUQU/@XYurjjulQsV4olcbEyMgTrLXy2YfgBX8g1@U7@KUYXBpd/qKAmtIyJLLs/HMPdExZrP9o@fCfTkNNrBojrd@AD9YXWO7hb3D@sZbO1w1JZZE2oA1b7l7svtndLXR72jzujWFRqiXDcp8CCy7EYKUJAaoaxWxCjmAWeBeHQndoLGnHKWjssloHnqLQvUig2vjIbaxZ/GviniGpKsazT7OktfJf7ubbW/jL6LXy9EYRgSbhdT9YL5GQk34hRw9CYxZHB6hjCP6JlK48UpWvc0ETRWaPLQMhDl81H3bXQ@yvTEFHM@lPM0RpYM/i6apptb2b4Uma2MtCONMIZmF2yErkxLg8pbyJ7sxJ6@6PQ0e@F3j/coFLMDWXDlXC5mCfoXWODNAbSMxQLgldTC1P6GrGHTQhoXOJ/0QpvYfMYxCWTRqJym0REX@0YOYMohRw2DzUxR3MG37Wg/pPWN0o65jZZLB7lHBEqBsxw@R04NPJQjVwF3dk@3KGGL8MA1HC0UGhSzOPRkXM82nEqzs6owsYqG0OOFvEOC54ZWhfKAR56qb2Zm/dFTlg5N4BIbHB97N3bD68/vLuM@MCKbwlwCYMDjL5/Fd99JvP@FEaWgASkDArLkw0uNS2cFekDcM0dmxVzfGJGULisoJ8lSZek0SGmmzAtWgh5HP5RMoWBqP9@GXS5lu3Y8EaGPEMrJNsTNIgkNQ5BXCJxS7CTpsE0SgT6JN70pXjeXQg6PanoPwfgGtVH7B8IU9oh3pg@hwH0t8BVDK0iUprFDYb5HE/gaV6F9/7Qku1wOLblSX8ylV@Cd92CR724noPinx@/KDSHDlxti2sBptfrqEyvOOwiJczN12fQhUxDKZDifrG8u1csIyEyJYPXFqfNenJqmHAh4D793/lPtCbRoR8OEgAHPsdIAq/B/Qx@OBTE6cHcjsfJvCYK85npP0IMGjOUZG72Cf36Lw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Tryitonline!</a></p>
","","user100411"
"226838","<h2><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 99 bytes, score: <span class=""math-container"">\$\approx2.63\times10^{22183}=10\uparrow\uparrow2.63809\$</span>.</h2>
<p>Unprintables are escaped.</p>
<pre><code>.z\377.n\001.+.c\377\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+\377.+.a.n
</code></pre>
<p>I think it could be more, with x-ple loops.</p>
<p>Output: <span class=""math-container"">\$(255\sum_{k=0}^{7394}{1000^k})\times10000+7395\$</span> (I think)</p>
<p><a href=""https://tio.run/##jVh7V@K6Fv/fTxE6lSa0pQ2CIrUqA16Hc5TxNS5HQFehRcFSOLQoWjhffe5OWgTK3FnXtbTJbz@zH3n44j//@vKl6Oxbnb2O0851cztFe0/f3e0UbH230G1bXd3Wc/mCXijQwpbvBEh1JsZkYPkvSNdzOcOZjobjAJ1VHstnZ2bFwMH7yEFPTtAZet10ms86w8HA8mxyqNnOq@ZNXBflDtM0nY6FL8o330xBxDEfUkcLBZxExJB95NI8GqhzYWH2R71293h9UzVzur6zAC@@X9fuzn4@Vr5fXZ1UbkxqNJAghl/L198eb0@urmvf6yX5fS4gE72jVjrNVzVEo6Hfm0Yz@Wskcv8/JJzBxLUCB/nPnH84CmD4Nhzb/sjtBem05fYsH6lPSBJDKgvisTCXTIl9pXS6/uPsrHJeNUvcBmb2bMN/7nUDg48R44sBp/M8ROIXwixTZjkFhnJD1z5MQ@hfLRcJKdS1XN8RZrNVGlfNpacz37GR5GtT7V0zfPjzoUlc4QdqMSHOBTwL0Q4meAhJKHtIfQ0mdBaMkVrxUbOhq/stJDWaXqYlzZ7GzghlI@XaQ35X1MJS2RDbRt3Qmh6fX4C5h2y26Wma0S4b82jaeGB6KM2J2kgzglWwqG9ilFJRGybAvf1NjFKQ9pKMxU2M6gVR6yUZdzaxfeB7TGJguZPAdvc2MUpB2E@ub2cToxRcfE0y7m5iVIeIdZNu65sY1SFiTtLH/U2M0ryojZOmc5sYpSD9lmTc28RoDvyZJhmLmxjNgY/vScb9TYzmwJ@PZBL032DgjpVcdGEToxRiGyQt5zcxqoM7g2S89zYxqoM7dtJ0cRPLQ/rlJAYuqglsB/hSSQy8FpMYOLPNsLk0wx0r3i5sEjcl71ctPGVNOTVs6L9TJt3E2SZp4qbH/mYzTSJqzZ1mrkk14PK1bAa6dbre3yXXEFOh1nibvn9YdktLhXWj7YLCufEOza4hzdAaDzGVlbioIVtb06F6SIrNNx6OlRbYBQ9wIxqCC7ljxFx4jnkiHGUzQOKeRdZhPSPupqgpDG2DC5DiEGap0IdRWRsZ7UtAIzblGBR8MtqfjLZWXTCusS0ocRxKY0MMI3PHiKmGLY5zo/ICCco8tGKqDpSm10DqRytjM23BeAWBJfH4tKLFapxkAduI5zRanBVJzcHb0uWnyiz3LbhM7LlxPL5BZKpliMs0Ti6P7DJuUXxOY038N3Il8iTO@u8EJbQ4OlYSovW62LXajmuaQpMKJOQrwY3R0Os9dvzXrjMOBnJK3FZbjLtJMTG0p4iH1WMzpEpzzkgXuEljmrXqkj9pY4ElRFCY9BGMhZJwLCjcLJnHBtf5/8RcFbX22LFe@ATyVsaCOxyOkDcM0MAKOs8970kAVmmxXBkTrY0p4b6pfKLGsxSf6dFEhMk/i8k2nzA2aEbeiFJ3OI5jBR4ZBgkl47NLpblEyK//1MvnJ6aU/Wju7O1lvaau06yc7bAZXBfwlvX2gqSvJ6e1esiUGT1ZPsgVDTIa97ygKzS5mAy3iy2StbKesFX5Xr85qd@YkrSFIya4CHArYkwSZm8dpHYIHPW//HHHjNVDWmXfcWzij@EKhvlw3p14naA39NAFrpLwuvGi/I1Jy6waMGzJ8pJ@gkk4doLJ2EMpGXiWlL@WFMAP6ZLy95LC1C0JN2sEZlKlK@Q7fEXCKxO4uBuqasTMV0ueCa6QkK8fVZboKb5S7j91wxXT7XnOoX4k6iV1xbFvkQGRGry0HnjdylBhgkDWIBRBm@Z/MPMTz1yxXcbnC4/OZwKUAcSfXWN7AVoxPYKlvz33XAenIKRkuBpJmIQAzmYTfAe0JcHDNeVWqSouYVnkguGtCTyGa7qO9xQ841tisPqpwV24dmC6BplgXDVhLX4wxrdKTZYVSsi/Al@XcFSV88VSvkDmSyM9sH6BT9cMP@JzpaLcKz9JeG4K2ccSqkNLWch2Or0B3E1hsc6TM4bvaBIIRsUEceMefOC1bHB383sHlXS6clAoEt6kBmCVf4WHfGOn0BJhf7k383m1EgtHfQwsuBiJ0TwEpGKaOzkSRizwbAh63sSZs4gz1spBvgg8h4U9wqDI@NJspJn8NPFPgipqvmiw7BkX@D7zc2WtnUX0L/DNWhD8BeFuNVmvkJO@ckvCmqlzi32T1zGEv8/KVumrasu8ZYlis1qLg5CHFp/3WyuhHy9NQ0Qx70@SYTWwYvBt2TSb3kzxpcJtpaAdWYRTMLvkJXJrXh4w3lj2din0/kehw98LfXy6waS4G@qaK8FiMc/Qu@YaaQCkFygWBK@qC8zoK8Q2tiCgUYn/xSr8AltHIC5bLBKluzgixnLHyJhUzWWwdaCTDMsZfFeC@k9SXz/umLt4sbifcQlUDJgRsttwqGShGoUSunfGcMfqvfZ8UCOwQmFJsY76h@5Rf9studv9Eh9rfAw5mkc7LHhm6i0oB7azr@/NwqxDBGnpXBciscb1uXdvPsz@8C4zowMtukXAJQ0OOPY@VsfeC511JjCyJSQhtZtbnHxw6bnAacIeiCvuOLyYoxM1hMLlBf0iy4Ys9w8w24RZ0ULIo/D34ykMiPH7ZbDl2o7rwBsa8gytEG9P0CCyXDsAcZlGLcFPmhrXKFPok2jTl6N5ay4Z7KRi/zyAa1YH8X8wTFiHDAfsuQzgeANcxtDOI7WeX2OYzfAInu7lIRr1bMUJegNHGXVGE@XV/zBsePST1Rzk//w4RoHVc@Hqm18JMLt@h0V2BeIXLWnGznj1FVmmmqP5vXxxZzdfRFJoyaaoz0/q1fjUsODCIGz93/mPtcbRYR8BEgAHvsBJkqjD/Q1@BORH6cHC9lBQRJ1Is6k1foIY1KYoztx0C/36Lw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"226898","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a></h1>
<p>Pxem is an esoteric language designed by &quot;ぬこ&quot; (now &quot;nk.&quot;), published in 2008. Unlike many other languages, filename matters first and content is second; that is, a Pxem program consists of two strings.</p>
<h2>0 bytes</h2>
<pre><code></code></pre>
<p>If content is empty, calling <code>.e</code> is equivalent to duplicating entire stack.</p>
<h2>1 byte</h2>
<pre><code>.
</code></pre>
<p>Every command has this prefix; this may be awkward when you want to push the character directly, on some problems.</p>
<h2>3 bytes</h2>
<pre><code>\001.r
</code></pre>
<p>My favorite idiom to push zero on filename. As filename cannot contain NULL character (usually), this would be needed.</p>
<h2>4 bytes</h2>
<pre><code>XX.z
</code></pre>
<p>My favorite idiom to begin pseudo comment.</p>
<h2>6 bytes</h2>
<pre><code>.c.c.z
</code></pre>
<p>My idiom to check if stack is empty or not; goes inside if stack is empty; does not otherwise.</p>
","","user100411"
"228910","<h1><a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 25 bytes</h1>

<pre class=""lang-bash prettyprint-override""><code>bc&lt;&lt;&lt;'for(;i++&lt;10^100;)9'
</code></pre>
<p><a href=""https://tio.run/##S0oszvj/PynZxsZGPS2/SMM6U1vbxtAgztDAwFrTUv3/fwA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h1><a href=""https://www.gnu.org/software/bc/manual/html_mono/bc.html"" rel=""nofollow noreferrer"">bc</a>, 18 bytes</h1>
<pre class=""lang-bash prettyprint-override""><code>for(;++i&lt;10^100;)9
</code></pre>
<p>Why is TIO broken so it won't work unless coding in header?</p>
<p><a href=""https://tio.run/##S0r@n5ZfpGGtrZ1pY2gQZ2hgYK1p@f//fwA"" rel=""nofollow noreferrer"" title=""bc – Try It Online"">Try it online!</a></p>
","","user100411"
"229544","<h1><a href=""https://www.zsh.org/"" rel=""nofollow noreferrer"">Zsh</a> + coreutils, <a href=""https://codegolf.stackexchange.com/users/97857/pxeger"">pxeger</a>'s <a href=""https://codegolf.stackexchange.com/a/214916/100411"">post</a>, cracked after being safe.</h1>
<p>Password.</p>
<pre><code>${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)} ${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}${(#)$((){&lt;&lt;&lt;$#} $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $)}
</code></pre>
<p><a href=""https://tio.run/##7VrbToNAEP2VCV1btma1PPigC4lf4KsxbRN7WcLGZqmFaiKpv46D/oAPbcXdAw@QMDuzZ87cIHxURdu6TMRVsc9JuYSUnajbn0Pqcl/zM4rN22JDkYjrHan1ikazeuZIXd@p@6l6btTnSEaSpK5YOHbj8dWNlNpmid5mT6bS74XdGJpOWYONSPF9JKqI5nO9LlmM19jLpFuRd0KdigsrJSnzSpNOqi6MY1UPpV7uzOJF55YXOqO/NW4jyvjCO@00DodmVZT0aF3biiYeSNYmmzRNxeBAwpdTHvzFFib6cBiVjMx7qH2i8y/28jubIZexsLCHy3QIyENqXsdGenrf@WABMY7ucWq0PlnpQ5ycw3Z/bPibkaHNbmHzjY8r6JuYxI/rLcz4iK7ze9I3O75X0v9pA@wDbf/8h/dC5AVwoaKh74Fv1ObwfhHCZAp2sQ9wDdzAhIkDvAIv0CJzUZORl8DrnwdRm3yM9C8"" rel=""nofollow noreferrer"" title=""Zsh – Try It Online"">Try it online!</a></p>
<h2>What original program does</h2>
<ul>
<li>Generates one random integer: 1-9999999.</li>
<li>Variable p should represent if the integer is prime.</li>
</ul>
<h2>How I cracked</h2>
<ul>
<li><a href=""https://tio.run/##LU/NasMwDL77KYRJS9zgkRx2KCJ9hF7HKD14qYJFg93Wzjb28qncTBcJ6fvTX/LLEvqqTn4ewYYOLLd2v5bBOGe5QU3fbgJd1YPLRhswmGRdh93u7d0Y5L7DW/9JCX88TwSnk2BZg5VZV0nD@YyXKDDhcNMVxlhARWLDxoClO7QFlT0FkTpG/HqQu@LIQgyEL8Wbhl6aZCqK2y0NPsIHh2WRAGoOmScQg8N/LHWJanCJVpumKUYcoDXqRTxGRb@cESm5QRWXdS9vPAE"" rel=""nofollow noreferrer"" title=""Zsh – Try It Online"">If tr was cat, then password would be like this</a>; the password just immitates what the original program does.</li>
<li>But I had to <code>eval</code> the string when <code>tr</code>'d.</li>
<li><a href=""https://codegolf.stackexchange.com/questions/110648/fewest-distinct-characters-for-turing-completeness/218524#218524"">How password has to be encoded</a></li>
<li><a href=""https://tio.run/##vY3LCsIwFET3@YpLjTRXSakLF5IqiHv3QjehTW1QktLEBzb99lhQf8HdnOEw83JtjLYGvjfA7/62Cr4HfnCQ8w2UpQnnXnWQBfm4QDp0vTa@SejAZkgZw6EoCjobE9HYngmacy6@CtAEfxnHZEwD@xCou7yGfzx@AVJIRSU9xqi3K3IzXl@BMb0zi0W2RiS1JZV0CqZ5M18uNSJoAzkSVbUWjpaop/ZCKCeryTXq05@UewM"" rel=""nofollow noreferrer"" title=""Zsh – Try It Online"">Password generator</a></li>
</ul>
","","user100411"
"229550","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename only: 51 bytes.</h1>
<p>Emulating stack with stack-based language. <code>\001</code> is unprintable character 0x01.</p>
<pre><code>.w._.c.w.cXXX.-.a.s.s.c\001.+.a.sL.w.n.c.c.z.d.a,.oL.a
</code></pre>
<p><a href=""https://tio.run/##jVh9W9rKEv@/n2JJI9k1r4ugSIxK0Ws5R6la62MF9AlJUDAGDgmKBs5X753dBIHQ2@daCzu/mdmZnZd98Sl8/PX5c9nbtZ0dx@sUuoWtsrtjbG87JdfYLnU7dtdwjUKxZJRKtPQp9CKkemNz/GyHT8gwCgXTmwwHowid1u6rp6dWzcTR29BDD17kDIJuPs8pZ/D8bAcu2ddd70UPxr6PCvt5ms@nyufVq6@WIOJUDqnD@QScRcSYfcmVWTJQZ8Lc7I9G/eb@@9WRVTCMrTl4/u17/eb0533t2@Xlce3KomYTCWL8pfr96/318eX3@rdGRX6bCchCb6idz/NVDdBwEPYmCSV/SVRu/4eG9zz27chD4SOXHwwjGL4ORm449HtRPm/7PTtE6gOSxJjKgngozCRLYt9SPt/4cXpaOzuyKtwGZvZcM3zsdSOTjxGTSwHPeRwg8TNhlimznANDhYHv7uch9C@2j4Qc6tp@6AnT6TKPT821J9PQc5EU6hP9TTdD@HjXJT7hO2ozJS4FMnNVBxM8gCRUA6S@RGM6jUZIrYWo1TTU3TaSmq1gsy1NH0beEGnJ5PpdcVvU40rVFDtmw9RbAafPwdydprUCXTc7VXOWkM07Ng@lBVEf6ma0DJaNdYxSKuqDDLizu45RCtpBVrC8jlGjJOq9rODWOrYLcvdZDCw7GWx7Zx2jFJTD7Pq21jFKwcWXrOD2OkYNiFg367axjlEDIuZlfdxdxygtivooa7qwjlEK2q9ZwZ11jBbAn0lWsLyO0QL4@JYV3F3HaAH8ec8mwfgNBu7Y2UWX1jFKIbZR1nJxHaMGuPOcjffOOkYNcMfNmi6vY0VIv5zFwEU1g22BXC6LgddiFgNnNhg2k6bYsdPtwiVpU/J@1eMT1pQT04X@O2HaLay1SAu3AvapbbaIqLe2WoUW1UEq1LVN6NbJan9XfFPMxXrzdfL2brttPRc3zI4PE87MN2h2Hemm3rxLuazERR25@socaoCk1Hzz7lBpg13wADeTIbhQOETMhcdUJsGRtgks7lliHdYz5G6KusLQDrgAKY6BysUhjKr60OxcAJqIKYcwwYeg@yHo6kdzwRWxOSeNQ2VkinFi7hCxqWGL49KoOkeiKg@tmGsApxU0kfre3nTZbNFoCYEl8fi0k8XqnGWD2JDnNFmcnWjNwNvKxceUGvctusjsuWk8vkJkjqoQl0maXB7ZRdyS@JykM/H/iSuJJ2nWf6coofnRsZQQvdfFvt3xfMsSWlQgMV8Jbg4HQe/eCV@63ih6lnPihtpm0i2Kiak/JDKsHlsxVVozxjrHLZry7GWXwnEHCywhgsK0D2AsVIRDQeFmySw1uCr/J@EjUe@MPPuJE5C3Khb8wWCIgkGEnu3IeewFDwKISvPlypjoHUwJ903lhJpSOU4ZCSEC8c@c2OAEE4Nm5I0odQejNFbgkWmSWDI/ulSaSYT8@k@jenZsSdqrdq858Onc3NxoqmZrIfxzWoZBNZlRp8ALQMLR3jVXsxVtcKrZ0qfat8bVcePKkqRPeDjqBVEXjn0@p5iyhOmrg1SHwMH@Kxw5lvTl@KTeiCGJcuh5LglHcOHCfDjrjgMn6g0CdI6PSPy9@aT8jUnbOjJh2JblBf8Yk3jkReNRgHIyyCw4fy04gO/TBefvBYdNt2BcrTCYSZUusW/wJYkvLZDibqiqmQpfLmTGuEZivn5UW6An@FK5/ZgbLpR@L/D2jQPRqKhLjn1NDIjU5IV0x6tUhnoSBLICoQRaN/@DmR8H1pLtKj6be3Q2FSDpEH92ae1FaMn0EJb@@tjzPZyDkJLBciSBiAGcTsf4BngLRoDryrVypPiEZZErxtcWyJi@5XvBQ/SIr4nJSq8ON9/6nuWbZIzxkQVrCaMRvlbqsqxQQv4V@LqEgyO5WK4US2S2MNID6@f4ZMXwPT5Tasqt8pPEZ5ag3VdQAxrIRq7n9J7hJgqL9R68EXwPx5Fg1ixQN2/BB@YLq35wt7izV8vna3ulMuEtaQJW@1e4Kza3Sm0RdpNbq1hUa6ly0rUggsuJGi1CQGqWtVUgcSICj4SoF4y9GYs4E63tFcsgs1/aIQxKjC/MJjOTnxb@SVBNLZZNlj3zHN9u/lxaqzOP/jm@WglCOGfcLCfrBXLSV65JXLcMbrFv8TqG8PdZ2Sp9VW1b1yxRjKq3OQh5aHO6314K/WhhGiKKeX@STVYDSwZfF02z7s0EXyjcVg7akUU4B9QFL5Fr62KPyaa61wultz8q7f9e6f3DDabF3VBXXInmi3mE3rVWWM/AeoJiQfCGOseMv8TsYBsCmpT4X6zCz7F9AOqyzSJRuUkjYi52jE2LqoVNbO8ZZJPlDL6XgvpPdr5@2jE36WJxf9MnUDFgRtA24AjRoBqFCrr1RnCj6r30QphGYIXCkmIf9Pf9g/6GX/E3@hU@1vkYcjRLdljwzDLaUA7w7MvszcLUIYK0cK4LkViR@ti7159hf3iFWcnxldwZ4EoGxxl7Dauj4IlOnTGMXAlJSO0W5uccXHHOcZ6w5@CSOx4v5uT8jKFweUE/ybIpy/09zDZhVrQQ8iT8/ZSEATF/vwy2XNfzPXgxQ56hFdLtCRpElut7oC7TpCX4SVPnM8oU@iTZ9OWEbs8kk51U7E8FcKlyEP9zwph1yOCZPY4BHK2Bixi6RaQ2iisC0ykewkO9Cq//nqt4Ue/ZU4bOcKy8hO@mC098spyD4p@fwiiyez5cdItLAWaX7bjMLjz8WiVN7dcnmAvZllqgxZ1ieWu7WEZSbMuWaMyOG0fpqWHD9UD49H/nP501jQ77EiABcOALnCWJBtzW4EdAYZIeLGwMBEU0iDSd2KMHiEF9gtLMTT6hX7SAtpCB4CmJKPzCEIgifBTKSKX/BQ"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input as strings of decimal integers, from stdin.</li>
<li>Separate each item of list with one or more blank characters, from begining to end.</li>
<li>Append <code>-1</code> to indicate end of list.</li>
<li>Output is to stdout, separated with a comma.</li>
</ul>
<h2>How it works</h2>
<pre><code>XX.z
# while stack is empty or pop!=0; do
.a.wXX.z
 # get integer from stdin, and push it
 .a._XX.z
 # dup; while pop!=0; do
 .a.c.wXX.z
  # dup; push dummy item; break; done
  .a.cXXX.-.aXX.z
 # pop twice and discard them
 .a.s.sXX.z
# dup; add one; done
.a.c\001.+.aXX.z
# pop
.a.sXX.z
# while :; do
# NOTE L is for dummy
.aL.wXX.z
 # pop and print it as an integer
 .a.nXX.z
 # dup; dup; while size&lt;2||pop!=pop; do exit; done
 # NOTE dup is not done if empty
 .a.c.c.z.d.aXX.z
 # print a comma; done
 .a,.oL.a
</code></pre>
","","user100411"
"229552","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename only: 11 bytes.</h1>
<pre><code>0.z1.o.a0.o
</code></pre>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKBKjUvBazlGK1rqsgK5AgoIhcEhQNHC@eu@eSRAIvV3XtTQzv/2c/ZiHz/7Tr8@fi86B1d3vOp1cL7dbtPf1vb1uwdb3Cr2O1dNtPZcv6IUCLXzynQCpztSYDi3/Gel6Lmc4s/FoEqDzykP5/NysGDh4Gzvo0Qm6I6@XTvNZdzQcWp5NjjTbedG8qeui3FGaptOxcKN8/dUURBzzIXW8VMBJRAzZRy4tooG6EJZmf9Rrtw/fr6tmTtd3l2Dj2/fa7fnPh8q3q6vTyrVJjSYSxPBL@fvXh5vTq@@1b/WS/LYQkIneUDud5qsaofHI78@imfwlErn7HxLOcOpagYP8J84/GgcwfB1NbH/s9oN02nL7lo/URySJIZUF8URYSKbEvlI6Xf9xfl65qJolbgMze7bhP/V7gcHHiPHFgNN9GiHxM2GWKbOcAkO5kWsfpSH0L5aLhBTqWa7vCPP5Oo2r5tKzue/YSPK1mfamGT78edckrvAdtZkQ5wKepWgXEzyCJJQ9pL4EUzoPJkit@KjV1NWDNpKaLS/TluaPE2eMspFy7T6/J2phqWyIHaNuaC2Pzxtg7j6bbXmaZnTKxiKaNu@ZHkpzojbWjGAdLOrbGKVU1EYJcP9gG6MUpL0kY3Ebo3pB1PpJxt1t7AD4HpIYWO4msL39bYxSEPaT69vdxigFF1@SjHvbGNUhYr2k2/o2RnWImJP08WAbozQvapOk6dw2RilIvyYZ97cxmgN/ZknG4jZGc@DjW5LxYBujOfDnPZkE/TcYuGMlF13YxiiF2AZJy/ltjOrgzjAZ7/1tjOrgjp00XdzG8pB@OYmBi2oC2wW@VBIDr8UkBs7sMGwhzXHXircLm8RNyftVC89YU84MG/rvjEm3cLZFWrjlsb/ZTIuIWmu3lWtRDbh8LZuBbp1t9nfJNcRUqDVfZ2/vlt3WUmHd6LigcGG8QbNrSDO05n1MZSUuasjWNnSoHpJi8837E6UNdsED3IyG4ELuBDEXnmKeCEfZDJC4Z5F1WM@YuylqCkM74AKkOIRZKvRhVNbGRucS0IhNOQEFH4z2B6OtVZeMG2xLShyH0sQQw8jcCWKqYYvj3Ki8RIIyD62YqgOl5TWR@t7O2ExbMFlDYEk8Pu1osRonWcA25jmNFmdFUgvwtnT5oTLLfQsuE3tuHI@vEJlqGeIyi5PLI7uKWxSfs1gT/41ciTyJs/47QQktj461hGj9HnatjuOaptCiAgn5SnBzPPL6D13/pedMgqGcEnfUNuNuUUwM7THiYfXYCqnSWjBSA7doTLPWXfKnHSywhAgKkz6GsVASTgSFmyWL2OAm/5@Yq6LWmTjWM59A3spYcEejMfJGARpaQfep7z0KwCotlytjonUwJdw3lU/UeJbiMz2aiDD5ZznZ4RPGBs3IG1HqjSZxrMAjwyChZHx0qbSQCPn1n3r54tSUdD37TrOjrKVnR9Knyrf69Wn92pSkT3g86XtBDw5zzinGJGH@2kVql8Bx/cufdE3py@lZrR5CamTfcWziT@Aahflw0Zt63aA/8lADV0n4vfms/I1J26waMGzL8op@ikk4cYLpxEMpGXhWlL9WFMCP6Iry94rC1K0I1xsEZlKla@RbfEXCKxO4uBuqasTMVyueKa6QkK8fVVboGb5S7j50wzXR7XvOkX4s6iV1zbGvkQGRGrw87nntyVAlgkA2IBRB2@Z/MPNTz1yzXcYXS48u5gKkEuLPrqL9AK2ZHsPSX5/6roNTEFIyWo8kTEIA5/MpvgXaiuDhmnKjVBWXsCxywfDGBB7DNV3Hewye8A0xWEHV4D5bOzRdg0wxrpqwFj@Y4BulJssKJeRfga9LOK7K@WIpXyCLlZE@WG/gsw3DD/hCqSh3yk8SXphC9qGE6tAWFrKdbn8I90tYrPPoTOA7ngaCUTFB3LgDH5gvrKbB3fz@YSWdrhwWioQ3mgFY5V/hPt/cLbRF2CPuzHxercTCUS8CCy5GYjQPAamY5m6OhBELXP2Dvjd1FizijLVymC8Cz1FhnzAoMr4yG2kmP038k6CKmi8aLHtGA99lfq6ttbuMfgNfbwTBXxJu15P1AjkZKDckrJk6tzgweR1D@AesbJWBqrbNG5YoNqu1OQh5aPP5oL0W@snKNEQU8/4kGVYDawZfV02z7c0MXyrcVgrakUU4BbNLXiI35uUh441lb1ZCb38UOvq90PuHG0yKu6FuuBIsF/MEvWtukIZAeoZiQfAyamBGXyN2sAUBjUr8L1bhDWwdg7hssUiUbuOIGKsdI2NSNZfB1qFOMixn8F0L6j9JfYO4Y27jxeJBxiVQMWBGyO7AwZCFahRK6M6ZwD2p/9L3QY3ACoUlxToeHLnHgx235O4MSnys8THkaBHtsOCZqbehHOAxl9ibhXmXCNLKuR5EYoPrY@/eflz94W1lRodSdBOAixYcUuyNq068ZzrvTmFkS0hCai@3PL3g4tLAacIeeWvuOLyYo1MxhMLlBf0sy4YsDw4x24RZ0ULIo/AP4ikMiPH7ZbDl2o7rwDsY8gytEG9P0CCyXDsEcZlGLcFPmhrXKFPok2jTl6N5eyEZ7KRi/wCAq1IX8X8STFmHjIbsyQvgZAtcxdDOI7We32CYz/EYnt9leNP3bcUJ@kNHGXfHU@XFfzdseLiT9Rzk//zARYHVd@H6ml8LMLtCh0V2jeGXJWluvT6DLmSZao7m9/PF3b18EUmhJZuivjitV@NTw4JDX/j0f@c/1hpHh30ESAAc@AInSaIOdzD4EZAfpQcLOyNBEXUizWfW5BFiUJuhOHOzT@jXfwE"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">0Try it online!</a></p>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKBKjUvBazlGK1rqsgK5AgoIhcEhQNHC@eu@eSRAIvV3XtTQzv/2c/ZiHz/7Tr8@fi86B1d3vOp1cL7dbtPf1vb1uwdb3Cr2O1dNtPZcv6IUCLXzynQCpztSYDi3/Gel6Lmc4s/FoEqDzykP5/NysGDh4Gzvo0Qm6I6@XTvNZdzQcWp5NjjTbedG8qeui3FGaptOxcKN8/dUURBzzIXW8VMBJRAzZRy4tooG6EJZmf9Rrtw/fr6tmTtd3l2Dj2/fa7fnPh8q3q6vTyrVJjSYSxPBL@fvXh5vTq@@1b/WS/LYQkIneUDud5qsaofHI78@imfwlErn7HxLOcOpagYP8J84/GgcwfB1NbH/s9oN02nL7lo/URySJIZUF8URYSKbEvlI6Xf9xfl65qJolbgMze7bhP/V7gcHHiPHFgNN9GiHxM2GWKbOcAkO5kWsfpSH0L5aLhBTqWa7vCPP5Oo2r5tKzue/YSPK1mfamGT78edckrvAdtZkQ5wKepWgXEzyCJJQ9pL4EUzoPJkit@KjV1NWDNpKaLS/TluaPE2eMspFy7T6/J2phqWyIHaNuaC2Pzxtg7j6bbXmaZnTKxiKaNu@ZHkpzojbWjGAdLOrbGKVU1EYJcP9gG6MUpL0kY3Ebo3pB1PpJxt1t7AD4HpIYWO4msL39bYxSEPaT69vdxigFF1@SjHvbGNUhYr2k2/o2RnWImJP08WAbozQvapOk6dw2RilIvyYZ97cxmgN/ZknG4jZGc@DjW5LxYBujOfDnPZkE/TcYuGMlF13YxiiF2AZJy/ltjOrgzjAZ7/1tjOrgjp00XdzG8pB@OYmBi2oC2wW@VBIDr8UkBs7sMGwhzXHXircLm8RNyftVC89YU84MG/rvjEm3cLZFWrjlsb/ZTIuIWmu3lWtRDbh8LZuBbp1t9nfJNcRUqDVfZ2/vlt3WUmHd6LigcGG8QbNrSDO05n1MZSUuasjWNnSoHpJi8837E6UNdsED3IyG4ELuBDEXnmKeCEfZDJC4Z5F1WM@YuylqCkM74AKkOIRZKvRhVNbGRucS0IhNOQEFH4z2B6OtVZeMG2xLShyH0sQQw8jcCWKqYYvj3Ki8RIIyD62YqgOl5TWR@t7O2ExbMFlDYEk8Pu1osRonWcA25jmNFmdFUgvwtnT5oTLLfQsuE3tuHI@vEJlqGeIyi5PLI7uKWxSfs1gT/41ciTyJs/47QQktj461hGj9HnatjuOaptCiAgn5SnBzPPL6D13/pedMgqGcEnfUNuNuUUwM7THiYfXYCqnSWjBSA7doTLPWXfKnHSywhAgKkz6GsVASTgSFmyWL2OAm/5@Yq6LWmTjWM59A3spYcEejMfJGARpaQfep7z0KwCotlytjonUwJdw3lU/UeJbiMz2aiDD5ZznZ4RPGBs3IG1HqjSZxrMAjwyChZHx0qbSQCPn1n3r54tSUqJ59p9lR1tKzI@lT5Vv9@rR@bUrSJzye9L2gB4c55xRjkjB/7SK1S@C4/uVPuqb05fSsVg8hNbLvODbxJ3CNwny46E29btAfeaiBqyT83nxW/sakbVYNGLZleUU/xSScOMF04qGUDDwryl8rCuBHdEX5e0Vh6laE6w0CM6nSNfItviLhlQlc3A1VNWLmqxXPFFdIyNePKiv0DF8pdx@64Zro9j3nSD8W9ZK65tjXyIBIDV4e97z2ZKgSQSAbEIqgbfM/mPmpZ67ZLuOLpUcXcwFSCfFnV9F@gNZMj2Hpr09918EpCCkZrUcSJiGA8/kU3wJtRfBwTblRqopLWBa5YHhjAo/hmq7jPQZP@IYYrKBqcJ@tHZquQaYYV01Yix9M8I1Sk2WFEvKvwNclHFflfLGUL5DFykgfrDfw2YbhB3yhVJQ75ScJL0wh@1BCdWgLC9lOtz@E@yUs1nl0JvAdTwPBqJggbtyBD8wXVtPgbn7/sJJOVw4LRcIbzQCs8q9wn2/uFtoi7BF3Zj6vVmLhqBeBBRcjMZqHgFRMczdHwogFrv5B35s6CxZxxlo5zBeB56iwTxgUGV@ZjTSTnyb@SVBFzRcNlj2jge8yP9fW2l1Gv4GvN4LgLwm368l6gZwMlBsS1kydWxyYvI4h/ANWtspAVdvmDUsUm9XaHIQ8tPl80F4L/WRlGiKKeX@SDKuBNYOvq6bZ9maGLxVuKwXtyCKcgtklL5Eb8/KQ8cayNyuhtz8KHf1e6P3DDSbF3VA3XAmWi3mC3jU3SEMgPUOxIHgZNTCjrxE72IKARiX@F6vwBraOQVy2WCRKt3FEjNWOkTGpmstg61AnGZYz@K4F9Z@kvkHcMbfxYvEg4xKoGDAjZHfgYMhCNQoldOdM4J7Uf@n7oEZghcKSYh0PjtzjwY5bcncGJT7W@BhytIh2WPDM1NtQDvCYS@zNwrxLBGnlXA8iscH1sXdvP67@8LYyo0MpugnARQsOKfbGVSfeM513pzCyJSQhtZdbnl5wcWngNGGPvDV3HF7M0akYQuHygn6WZUOWB4eYbcKsaCHkUfgH8RQGxPj9Mthybcd14B0MeYZWiLcnaBBZrh2CuEyjluAnTY1rlCn0SbTpy9G8vZAMdlKxfwDAVamL@D8JpqxDRkP25AVwsgWuYmjnkVrPbzDM53gMz@8yvOn7tuIE/aGjjLvjqfLivxs2PNzJeg7yf37gosDqu3B9za8FmF2hwyK7xvDLkjS3Xp9BF7JMNUfz@/ni7l6@iKTQkk1RX5zWq/GpYcGhL3z6v/Mfa42jwz4CJAAOfIGTJFGHOxj8CMiP0oOFnZGgiDqR5jNr8ggxqM1QnLnZJ/Trvw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">1Try it online!</a></p>
<p>If you are not familiar with Pxem: <code>.z ... .a</code> is &quot;while stack size&lt;2 or pop!=pop; do something; done&quot; (sorry I misdescript the function).</p>
<p>Also, pushing literates are done backwards; if program begins with <code>10.z</code>, then 48 is pushed first, then 49 next. Then the branching is done.</p>
","","user100411"
"229556","<h1><a href=""https://www.zsh.org/"" rel=""nofollow noreferrer"">Zsh</a>, cracks <a href=""https://codegolf.stackexchange.com/a/214882/100411"">pxeger's post</a>, cracked after being safe.</h1>
<p>Did I get the rules correctly?</p>

<pre class=""lang-sh prettyprint-override""><code>a=1;: ""&#32;
#include &lt;cstdlib&gt;&#32;
#include &lt;iostream&gt;&#32;
&#32;
int main() {&#32;
    srand(time(NULL));&#32;
    hello();&#32;
    return rand() % 2;&#32;
}&#32;
&#32;
/*&#32;
  main&#32;
  a=0&#32;
  \&#32;
  print ""$((1/$a))""&#32;
*/&#32;
&#32;
void hello() std::cout &lt;&lt; ""Hello, World!"" &lt;&lt; std::endl;&#32;
 ""
</code></pre>
<p><a href=""https://tio.run/##TY5NC8IwDIbv/opYJ7RDmPO4D88ehjfx4qWuhRW6VtrOg@Jvr81kYA4JeZK8eV9@iJG3ZV0BgdVGmV5PQkLT@yC0uh//mbI@OMnHBGGlTICRK0MZvFOfwjtuBA1qlPR86TrG6h8fpNaWLp2TYXIG5l0GWzgk/kHBIscFlMTK2z2WG6aHw2cko7QsMs5YMpoXePK0SizykAxXVW@nAE0D5IR0B1frtFgTRPNcGqHRCInxCw"" rel=""nofollow noreferrer"" title=""Zsh – Try It Online"">Try it online!</a></p>
","","user100411"
"229557","<h1 id=""pxem-lazypxem.posixism.tio.sh-8e9ac7ceb2-filename-only-109-bytes-safe-safe-z50e""><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/GH-TpaeFawzen/pxem.posixism/blob/8e9ac7ceb2f238d7066c5d065fbaf0d024505515/lazypxem.min.posixism"" rel=""nofollow noreferrer"">lazypxem.posixism.tio.sh (8e9ac7ceb2)</a>), filename only: 109 bytes, <s>safe</s> safe.</h1>
<p>Sorry for misreading the rules; I misread I would safe if nobody cracked mine for one week; I had to wait for two weeks to be safe.</p>
<p>Some are escaped:</p>
<pre><code>\002.r.w.i._._.-.-\240.z.d.aY.o.d.a\002.r.w.i.i.i.i.s.s.s.s._.i.!Q##.!.-.+.w.d.aY.o.d.a.w.+.i.c\001.+.a.+\377\377].+.+.z.d.aY.o
</code></pre>
<ul>
<li>Flag: <code>Y</code>, without trailing LF.</li>
<li>Input from stdin, as a string consists of ASCII printables except space: 33 (!) to 126 (~).</li>
<li>Output to stdout.</li>
<li>This program works randomly; your password must always work.</li>
</ul>
<p><a href=""https://tio.run/##jVhtV@K6Fv4@vyLUShPb0gZBkVqVQa/DOcqo47hUQFehRcFSOG1RtHD@@tydtAiUubOuLGny7NfslzThJXj@tbFRcvaszm7Haee7@e2Svavv7HSKtr5T7Latrm7r@UJRLxZp8UvghEh1xsZ4YAUvSNfzecOZjIZ@iM6qj5WzM7Nq4PB95KAnJ@wMvW42y2ed4WBgeTY50GznVfPGrovyB1mazSbCF5Xrb6Yg4oQPqaO5Ak4iYsQecnkWD9SZMDf7s167ffxxfWzmdX17Dl58/1G7Pbt7rH6/ujqpXpvUaCBBjL5Wfnx7vDm5@lH7Xi/L7zMBmegdtbJZvqohGg2D3iSeyV9jkfv/IeEMxq4VOih45vzDUQjDt6FvByO3F2azltuzAqQ@IUmMqCyIR8JMMiX2lLLZ@s@zs@r5sVnmNjCzZxvBc68bGnyMGF8COJ3nIRI3CLNMmeUMGMoPXfsgC6F/tVwkZFDXcgNHmE6XaVw1l55MA8dGUqBNtHfNCODrQ5O4wg/UYkKcC3jmoh1M8BCSUPGQ@hqO6TT0kVoNULOhq3stJDWa3lZLmj75zgjlYuXaQ2FH1KJyxRDbRt3Qmh6fX4C5h1yu6Wma0a4Ys3jaeGB6KM2L2kgzwmWwpK9jlFJRG6bA3b11jFKQ9tKMpXWM6kVR66UZt9exPeB7TGNguZPCdnbXMUpBOEivb3sdoxRcfE0z7qxjVIeIddNu6@sY1SFiTtrHvXWM0oKo@WnT@XWMUpB@SzPurmM0D/5M0oyldYzmwcf3NOPeOkbz4M9HOgn6bzBwx0ovuriOUQqxDdOWC@sY1cGdQTreu@sY1cEdO226tI4VIP1yGgMX1RS2DXyZNAZei2kMnNlk2Eya4o6VbBc2SZqS96sWnbKmnBg29N8pk27iXJM0cdNj37mtJhG15nYz36QacAVabgu6dbLa32XXEDOR1nibvH9YdkvLRHWj7YLCmfEOza4hzdAaDwmVlbioIVtb0aF6SErMNx6OlBbYBQ9wIx6CC/kjxFx4TnhiHOW2gMQ9i63DekbcTVFTGNoGFyDFEcwyUQCjijYy2peAxmzKESj4ZLQ/GW3teM64wjanJHEo@4YYxeaOEFMNWxznRpU5ElZ4aMVMHShNr4HUj9aWzbSF/hICS@LxacWL1TjJArYRz2m8OCuWmoG35ctPlTnuW3iZ2nOTeHyDyBxXIC6TJLk8sou4xfE5TTTx/9iV2JMk678TlND81bGUEK3Xxa7VdlzTFJpUIBFfCW6Mhl7vsRO8dh0/HMgZcVNtMe4mxcTQnmIeVo/NiCrNGSNd4CZNaNayS8G4jQWWEEFh0ocwFsrCkaBws2SWGFzl/xPzsai1fcd64RPIWwUL7nA4Qt4wRAMr7Dz3vCcBWKX5cmVMtDamhPum8omazDJ8pscTESb/zCebfMLYoBl5I0rdoZ/ECjwyDBJJxmeXSjOJkF//qVfOT0ypCUepnJ97y/Vyj/BRc2ozX9BzHzk7Z93lhuyxxBJ/guTzCOPM5cZGLgNyMjAsZGAiA7UDshRGVk5ubu/usv8WTOVP/dKX6vf69Un92pSkL3jk97ywC@cH7pyYkITpWwepHQInhF@B3zGlryentXoE1SAHjmOTwIeTG@bDWXfsdcLe0EMX@JhEPxovyt@YtMxjA4YtWV7QTzCJfCcc@x7KyMCzoPy1oAB@QBeUvxcUpm5BuF4hMJMqXSLf4isSXZnAxd1QVSNhvlrwjHGVRHz9qLpAT/GVcv@pG06mbs9zDvRDUS@rS459iw2I1OAV@cDLXYbCFASyAqEYWjf/k5kfe@aS7Qo@n3t0PhWgeiD@7PTbC9GS6REs/e255zo4AyElw@VIwiQCcDod41ugLQgerik3yrHiEpZFLhjdmMBjuKbreE/hM74hBqvhGhyha/uma5AxxscmrCUIfXyj1GRZoYT8K/B1CYfHcqFULhTJbGGkB9Yv8OmK4Ud8rlSVe@WOROemkHssozp0ooVsp9MbwJEWFus8OT48R@NQMKomiBv34APzhbURuFvY3a9ms9X9Yonw3jYAq/4rPBQa28WWCNvSvVkoqNVEOG5/YMGlWIwWICBV09zOkyhmgdtG2PPGzoxFnLFW9wsl4Dko7hIGxcYXZmPN5M7EdwRV1ULJYNkzLvD91t3SWjvz6F/g65UgBHPC7XKyXiEnfeWGRDVT5xb7Jq9jCH@fla3SV9WWecMSxWa1FgchDy0@77eWQu8vTENEMe9PssVqYMng26Jp1r2Z4EuF28pAO7IIZ2B2yUvkxrzcZ7yJ7M1C6P2PQge/F/r4dINJcTfUFVfC@WKeoXfNFdIASC9QLAguYxeY0ZeIbWxBQOMS/4tV@AW2DkFctlgkyrdJRIzFjrFlUjW/ha19nWyxnMFzKaj/pPX1k465TRaL@1sugYoBM0JuE95FOahGoYzuHR@OZr3XXgBqBFYoLCnWYf/APexvumV3s1/mY42PIUezeIcFz0y9BeUA98fU3ixMO0SQFs51IRIrXJ979/p97g/XOTN@D8aHDzjbwXuRXatV33uh084YRraEJKR28/MXJpyVLnCWsHvlkjsOL@b4RRxB4fKCfpFlQ5b7@5htwqxoIeRx@PvJFAbE@P0y2HJtx3Xg6g15hlZItidoEFmu7YO4TOOW4G@aGtcoU@iTeNOX43lrJhnsTcV@c4DTWQfx3yXGrEOGA3bLBtBfAxcxtAtIrRdWGKZTPIIbf2WIRj1bccLewFFGndFYeQ0@DNsKHbKcg8Kf79QotHounJgLSwFmp/aoxE5O/HwmTa23F9CFLFPN08JuobS9UyghKbJkU9RnJ/Xj5K1hwTlD@PJ/5z/RmkSHPQRIALzwBU6SRB2OffAnoCBODxY2h4Ii6kSaTiz/CWJQm6Akc5Mv6Nd/AQ"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2 id=""hint-posted-after-5-days-and-2-hours-later-i-think-qkgz"">Hint (posted after 5 days and 2 hours later, I think)</h2>
<ul>
<li>This program uses a bug of my interpreter.</li>
</ul>
<h2 id=""intended-password-rldp"">Intended password</h2>
<blockquote class=""spoiler"">
<p> <code>z317-35bP</code></p>
</blockquote>
","","user100411"
"229713","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/GH-TpaeFawzen/pxem.posixism/blob/main/lazypxem.min.posixism"" rel=""nofollow noreferrer"">lazypxem.min.posixism</a>), score: 255.</h1>
<p>I annotated who are not ASCII printables as octal, prefixed by a backslash. One snippet per line.</p>
<pre><code>\001
\002
\003
\004
\005
\006
\007
\010
\011
\012
\013
\014
\015
\016
\017
\020
\021
\022
\023
\024
\025
\026
\027
\030
\031
\032
\033
\034
\035
\036
\037
 
!
&quot;
#
$
%
&amp;
'
(
)
*
+
,
-
.
/
0
1
2
3
4
5
6
7
8
9
:
;
&lt;
=
&gt;
?
@
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
[
\
]
^
_
`
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z
{
|
}
~
\177
\200
\201
\202
\203
\204
\205
\206
\207
\210
\211
\212
\213
\214
\215
\216
\217
\220
\221
\222
\223
\224
\225
\226
\227
\230
\231
\232
\233
\234
\235
\236
\237
\240
\241
\242
\243
\244
\245
\246
\247
\250
\251
\252
\253
\254
\255
\256
\257
\260
\261
\262
\263
\264
\265
\266
\267
\270
\271
\272
\273
\274
\275
\276
\277
\300
\301
\302
\303
\304
\305
\306
\307
\310
\311
\312
\313
\314
\315
\316
\317
\320
\321
\322
\323
\324
\325
\326
\327
\330
\331
\332
\333
\334
\335
\336
\337
\340
\341
\342
\343
\344
\345
\346
\347
\350
\351
\352
\353
\354
\355
\356
\357
\360
\361
\362
\363
\364
\365
\366
\367
\370
\371
\372
\373
\374
\375
\376
\377
</code></pre>
<h2>What they do</h2>
<p>They are snippets. They just push their own codepoint to stack.
Because my interpreter just treats each byte to be unit, any sequences of bytes can be snippets.</p>
<p>If you think my answer is not qualified as a function: make a content that consists of just one of those snippets, and call it with <code>.f</code> on filename; this is how my snippets work like functions.</p>
<h2>Notes about snippets</h2>
<ul>
<li>A snippet <code>/</code> must be on content rather than on filename, as it's not for filename (although my interpreter just ignores the restriction).</li>
<li>A snippet <code>.</code> must not be followed by one of these characters: <code>PpOoNnIi_CcSsVvFfEeRrWwXxYyZzAaTtMmDd+-!$%</code>; as a substring of the two letters stands for a command; vise versa for latter characters.</li>
</ul>
","","user100411"
"229721","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 9 bytes (filename).</h1>
<pre><code>~~~.n.n.n
</code></pre>
<p>Output:</p>
<pre><code>126126126
</code></pre>
<h2>How it works</h2>
<ul>
<li>Three tildes are not commands; each of they are literals.</li>
<li>Each literal means to push its own codepoint as an integer.</li>
<li><code>.n</code> pops one item and output it as a decimal integer (if any).</li>
</ul>
<p><a href=""https://tio.run/##jVh7V9rKFv/fTzHkRDJDEpJBrEiMSsFrOUcpPuqyAroCBAVD4CRB0YBfvXfPJAiE3q5bV83Mbz9nP@bhs//06y9UsPetzl7Hbuey6Nx6Q7sKyuk5uuXbAVLtiTEZWv4z0vVczrCn45EXoLPyQ@nszCwbOHgb2@jRDjojt5dO81lnNBxabpccal37RXMnjoNyh2maTsfC9dL1N1MQccyH1PFCAScRMWQfuTiPBupcWJj9UavePlxdV8ycru8swPr3q@rt2c@H8vfLy5PytUmNBhLE8Gvp6tvDzcnlVfV7rSi/zQVkojfUSqf5qkZoPPL702gmf41E7v6HhD2cOFZgI/@J84/GAQxfR17XHzv9IJ22nL7lI/URSWJIZUE8FuaSKbGvlE7Xfpydlc8rZpHbwMxe1/Cf@r3A4GPE@GLA7jyNkPgXYZYps5wCQ7mR0z1MQ@hfLAcJKdSzHN8WZrNVGlfNpacz3@4iydem2ptm@PDrXZO4wnfUYkKcC3gWoh1M8AiSUHKR@hJM6CzwkFr2UbOhq/stJDWabqYlzR49e4yykXLtPv9F1MJiyRDbRs3Qmi6f18HcfTbbdDXNaJeMeTRt3DM9lOZEbawZwSpY0DcxSqmojRLg3v4mRilIu0nGwiZG9V1R6ycZdzaxfeB7SGJguZPAvuxtYpSCsJ9c384mRim4@JJk/LKJUR0i1ku6rW9iVIeI2Ukf9zcxSvOi5iVN5zYxSkH6Ncm4t4nRHPgzTTIWNjGaAx/fkoz7mxjNgT/vySTov8HAHSu56N1NjFKIbZC0nN/EqA7uDJPx3tvEqA7udJOmC5tYHtIvJzFwUU1gO8CXSmLgtZjEwJlths2lGe5Y8XbRJXFT8n7VwlPWlFOjC/13yqSbONskTdx02e9spklErbnTzDWpBly@ls1At07X@7voGGIq1Bqv07d3q9vSUmHNaDugcG68QbNrSDO0xn1MZSUuaqirrelQXSTF5hv3x0oL7IIHuBENwYXcMWIuPMU8EY6yGSBxzyLrsJ4xd1PUFIa2wQVIcQizVOjDqKSNjfYFoBGbcgwKPhm7n4xdrbJgXGNbUOI4FD1DDCNzx4iphi2Oc6PSAglKPLRiqgaUpttA6nsr02XaAm8FgSXx@LSixWqcZAHbmOc0WpwVSc3B2@LFp8os9y24SOy5cTy@QWQqJYjLNE4uj@wyblF8TmNN/H/kSuRJnPXfCUpocXSsJETr97BjtW3HNIUmFUjIV4Ib45Hbf@j4Lz3bC4ZyStxWW4y7STExtMeIh9VjM6RKc85IddykMc1adcmftLHAEiIoTPoIxkJROBYUbpbMY4Pr/H9iroha27OtZz6BvJWw4IxGY@SOAjS0gs5T330UgFVaLFfGRGtjSrhvKp@o8SzFZ3o0EWHy72KyzSeMDZqRN6LUG3lxrMAjwyChZHx2qTSXCNn69Z9a6fzElD4@PrIu@5G2yt9r1ye1a3Nr7PXdoAfnOOcRY1yYvXaQ2oGD@pfvdUzp68lptRZCUmTftrvE9@AChflw3pu4naA/clEdV0h41XhW/sGkZVYMGLZkeUk/wST07GDiuSglA8@S8veSAvghXVL@WVKYuiXheo3ATKp0hXyLL0l4aQIXd0NVjZj5cskzwWUS8uWj8hI9xZfK3aduuCA6fdc@1I9EvaiuOPYtMiBSgxfGPa86GepDEMgahCJo0/wPZn7imiu2S/h84dH5TIAkQvzZJbQfoBXTY1j661PfsXEKQkpGq5GESQjgbDbBt0BbElxcVW6UiuIQlkUuGN6YwGM4pmO7j8ETviEGK6Uq3GSrB6ZjkAnGFRPW4gcevlGqsqxQQj4Evi7hqCLnC8X8LpkvjfTBeh2frhl@wOdKWblTfpLw3BSyD0VUg4awUNfu9Idws4TF2o@2B9/xJBCMsgnixh34wHxh1Qzu5vcOyul0@WC3QHiLGYCVP4T7fGNntyXC7nBn5vNqORaOuhBYcCESo3kISNk0d3IkjFjg0h/03Yk9ZxFnrOWDfAF4Dnf3CIMi40uzkWby08Q/CSqr@YLBsmfU8V3m58paO4vo1/H1WhD8BeF2NVkvkJOBckPCqqlziwOT1zGEf8DKVhmoasu8YYlis2qLg5CHFp8PWiuh95amIaKY9yfJsBpYMfi6bJpNb6b4QuG2UtCOLMIpmF3wErkxLw4Ybyx7sxR6@6PQ4e@F3j/dYFLcDXXNlWCxmCfoXXONNATSMxQLgjdRHTP6CrGNLQhoVOJ/swqvY@sIxGWLRaJ4G0fEWO4YGZOquQy2DnSSYTmD70pQ/03qG8QdcxsvFg8yDoGKATNCdhuOhCxUo1BEd7YHN6T@S98HNQIrFJYU62hw6BwNtp2isz0o8rHGx5CjebTDgmem3oJygGccXt@ahVmHCNLSuR5EYo3rc@vefFb94VVlRsdRdAeAKxYcT@x1q3ruM511JjDqSkhCai@3OLfgylLHacKedyvu2LyYo/MwhMLlBf0sy4YsDw4w24RZ0ULIo/AP4ikMiPH7ZbDldm3Hhhcw5BlaId6eoEFkuXoA4jKNWoKfNFWuUabQJ9GmL0fz1lwy2EnFnv5wSeog/ueBCeuQ0ZA9dgH0NsBlDLt5pNbyawyzGR7Dw7sEr/l@V7GD/tBWxp3xRHnx340uPNnJag7yf37aosDqO3Bxza8EmF2ewwK7wPBrkjSzXp9BF7JMNUfze/nCzpd8AUmhJZuiPj@pVeJTw4LjXtj6v/Mfa42jwz4CJAAOfIGTJFGH2xf8E5AfpQcL2yNBEXUizaaW9wgxqE5RnLnpr/8C"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"229739","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 56 bytes (content)</h1>
<p>Unprintables are as backslash followed by its code point in octal.</p>
<pre><code>.c.w\000\001\001.v.c.t.y\002.!.c.m.v\001.+.v.a.m.z\001.-XX.a.v.n.d.a.s-1.p
</code></pre>
<h2>Usage</h2>
<ul>
<li>Call this subroutine after setting only one item as input.</li>
<li>Outputs the result to STDOUT instead of returning, as Pxem cannot have negative values unless given from STDIN.</li>
<li>Some garbages may return.</li>
</ul>
<h2>With comments</h2>
<pre><code>XX.z
# if top is not zero; then
.c.wXX.z
  # stack usage: input, 2^counter, counter(initially zero)
  .a\000\001\001.v.c.tXX.z
  # while input is greater than 2^counter; do
  .a.yXX.z
    # increment counter; done
    .a\002.!.c.m.v\001.+.v.aXX.z
  # if input differs from 2^counter; then decrement counter; fi
  .a.m.z\001.-XX.aXX.z
  # output counter; return
  .a.v.n.dXX.z
# done; output minus one
.a.a.s-1.p
</code></pre>
<p><a href=""https://tio.run/##jVj7WuJKEv/fp2gykXQMuTQXRWJUBl2HM8qg47iOgJ5IgoIh4SQB0cB5lX2LfaB9kdnqThAM7nzL9yFdv6rqunc6PgWPvz6hsr1rdne69n1eQWfmCyrlUF7Lk43ADpFsj/Xx0AyekKbl87o9HXl@iE5rd9XTU6Om4/BlZKMHO@x6bi@bZVTXGw5N1xL3VcueqO7YcVB@P0uy2US5Wb38YnA8TuSQPFpswFgiH9EfqTKPF/KcW5j90ahf332/PDLymlZYgM1v3@vXpz/vat8uLo5rlwbRW4jjo8/V71/uro4vvte/NSrSy5xDBnpBnWyWReWhkRf0pzElfY5Vbv6Hhj0cO2Zoo@CRyXujEJbPnm8FI6cfZrOm0zcDJD8ggY@IxPGH3FwwBPorZLONH6entbMjo8JsYGrP0oPHfi/U2RpRuQSwu48e4j@J1DKhljNgKO851n4WUj8xHcRlUM90ApubzVZ5bGumPZ0FtoWEQJ2qL6oewJ9XVWAbvqIOVWJSILNQ7WIRe1CEqovkSTgms9BHci1A7ZYm73aQ0Gq7Wx1h9uDbI6TEm6u3xW1ejSpVnb/XG7radhndBHO3itJ2VVW/r@rzmGzd0n0IyfPqSNXDVbCsrWOEEF71UuDO7jpGCGi7acHyOka0Eq/204KFdWwX5O7SGFjuprDtnXWMEFAO0vEV1jFCwMVJWnB7HSMaZKyXdltbx4gGGbPTPu6uY4QUedVPm86vY4SA9nNacGcdI3nwZ5oWLK9jJA8@vqQFd9cxkgd/XtNF0D7AwB0zHXRpHSMEchumLRfXMaKBO8N0vnfWMaKBO1badHkdK0L5pTQGLsoprABymTQGXvNpDJzZpNhcmOGumRwXlpgMJZtXNTqhQznVLZi/E6rdxkpbbOO2S/8qW22RV9uFdr5NVJAKVGULpnX6fr4rjs5nIrX1PH15Na2Omoka@r0DG871Fxh2Fam62rpNuLTFeRVZ6rs9ZBcJifnW7WGuA3bBA9yKl@BC/hBRFx4TmRhHyhawmGexdYhnxNzk1RxF78EFKHEEVCYKYFVVR/r9OaCxWO4QNngTtN4ELfVoIfhObMFJ8lDxdT6KzR0iujUccUwaVRdIWGWp5TMN4LTdFpJfO1sW3S30VxAIieWnEwerMpYJYiNW0zg4M9aag7eV87ctFeZbeJ46c5N8fIHMHFUhL9OkuCyzy7zF@TlJdmLf2JXYk6TqHykKaPHoWCmI2u9hx7y3HcPg2oQTIxYJbo08t3/XDSY92w@HUobflDtUuk2wqKsPsQztx3ZEcu05ZTVxmyQ8c9WlYHyPOVoQLke1D2DNVbhDLsfMivPE4Hv53wkf8eq9b5tPjIC6VTHneN4IuV6IhmbYfey7DxyICotwJSyq95iIzDeZEXJCZRilxQQPxF8LYpMRVAyGkQ2i0PP8JFfgka6LkaC/TakwF0Rx49c/GtWzY0NQ7hR7Q/GEjdq3xuVx4xKQrvLc1jQNvoR@lQkgofIC67ySgfVQmTBcAo4J1Cuj5OtroCaKq1jwG8hEGQkbI7/vhj24ESS7c7PnLpK78LD/FfhdQ/h8fFJvRFBYKbBtSwx8uIRhtpz3xm437HsuauIjMfreesp9xWLHONJh2ZGkJf8Yi5Fvh2PfRRkJZJacP5YcwPfJkvN1yaHbLRmX7xjUpExW2Nf4QowuDJBibsiynghfLGXGuCZGLHBUW6In@CJ387Y3XDKdvmvvawe8VpFXHPsSG@CJzprrlnWuBD3GceI7CMXQuvkf1PzYNVZsV/HZwqOzGQeNAPmnF9l@iFZMjyD058e@Y@MMpFT0VjMJRATgbDbG18BbMlxcz13ljnKOSKvIFKMrA2R0x3Bs9yF8xFeiTtuxDrfh@p7h6OIY4yMDYglCH1/l6pKUI6L4N8fi4g6OpGK5UiyJ86WRPlhv4pN3hu/wWa6Wu8n9FKMzg1PuKqgBQ2Uiy@72h3A7hWDtB9uH39E45PSaAer6DfhAfaETAe4Wd/Zq2Wxtr1QW2ZjqgNX@5m6LrUKpw8MJc2MUi3ItUY4nGURwOVYjRUhIzTAKeTGKReDFIey7Y3tOM05Fa3vFMsjsl3ZECsXGl2bjncWfBv4poppcLOu0enoT32z9XIm1u8h@E1@@S0KwYFyvFmsCNRnkrsSobmjM4sBgfQzpH9C2zQ1kuWNc0UJRqt5hINShw@hBZyX1/tI0ZBSz@RS3aA@sGHxeDs26N1N8nmO2MjCONMMZoM5Zi1wZ53tUNtG9Wiq9/FZp/2Ol1zc3qBZzQ37nSrgI5hFm13jHGgLrCZoFwXtVE1P@CvMem5DQuMX/oB3exOYBqEsmzUTlOsmIvjwxtgwi57ewuaeJW7Rm8LuS1L/S@w2SiblOgsWDLUeEjgEznLIJjxUFupGroBvbh1tWf9IPYBuONgotinkw2HcOBptOxdkcVNhaZWuo0Tw@YcEzQ@tAO8CrIH47lNkjgJt1RU5YOteDTLyTeju611/NfvNmZsSPtPgeAdc0eMTRN2TZd5/IrDuGlSUgAcm9/OLZB9eeJs6K9BVxxR2bNXP8TI2gcVlDP0mSLkmDPUwPYdq0kPI4/YOEhIWofxwGDdeyHRveoqHOMArJ8QQDIkn1PVCXSDwS7ElTZztKBOYkPvSlmO7MhY1PaOhZ/V4fAuj53hA92r4NYOPb5TE6qf7zK5LPNtiRiuDssNAU3ekWvO7HLvHT/z@j5vMT7DVB9NFocH8u9awikhtFxP69MabT6Q3/5CBaeLpyTEvgNbguwYdDQWwYc5sel@M1UZhNTf8hQHJ9uvAJLuuea/9C6x8N/edf/0Yy2fiARxgPaR/x8jHvQ73Cb3jFmJf/iLfzG1455hU@4JHtmFdM87ZLpUKJ8UjpI16sR7Y3SLlY3N4pFrWdwo62WyqRbRLrbRc2/gs"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"229742","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename: 17 bytes.</h1>
<p><code>\001</code> is such a byte of binary.</p>
<pre><code>.w.o.o.i.c.c\001.+.a
</code></pre>
<h2>How it works</h2>
<p>Since this program is simple, here is verbose explaination.</p>
<pre><code>XX.z
# while stack is empty or popped value is not zero; do
# NOTE stack is initially empty
.a.wXX.z
  # if not empty; then pop to output its character; fi
  # if not empty; then pop to output its character; fi
  .a.o.oXX.z
  # getchar and push its codepoint value
  # NOTE EOF is -1
  .a.iXX.z
  # if not empty; then duplicate; fi
  # if not empty; then duplicate; fi
  .a.c.cXX.z
  # push one
  # if stack has two or more items; then pop twice and push their sum; fi
  .a\001.+XX.z
# done
# NOTE reaching to end of filename implicitily terminates the program
.a.a
</code></pre>
<p><a href=""https://tio.run/##jVhtV@LIEv7ur2gykXQTQtKIoxKjMuh12FUGHcfjCOgGCBIMCZsERQP71@dWd4JAmLvn6hG6n6rqeu8Xn4PBr09o3zowu3tdq1MsoEvzDe3mUVEr0q3ACpFiTfTJyAyekaYVi7o1HXt@iC6qj5WLC6Oq4/BtbKEnK@x6bj@b5bOuNxqZbo8cqT3rRXUnjoOKR1mazSbCjcrNV0MQccKHlPFiAU4iYsS@5PI8HihzYaH2R7129/j95tQoatrOAmx8@167u/j5WP12fX1WvTGo3kSCGH2pfP/6eHt2/b32rV6W3@YCMtAbamez3CsPjb3AnsYz@Usscv8/JKzRxDFDCwUDzu@NQxi@en4vGDt2mM2ajm0GSHlCkhhRWRBPhLlkSOxbymbrPy4uqpenRpnrwExfTw8Gdj/U@RgxvgSwugMPiZ8I00yZ5gwoKnpO7ygLoX8xHSRkUN90AkuYzVZpfGkuPZ0FVg9JgTpV31Q9gI93VeILvqM2E@JcwLMQ7WKCPUhCxUXKSzihs9BHSjVAraamHLSR1Gy5ubY0e/KtMSrEi6sPpc@iGpUrutjR67racvm8AeoeCoWWq6p6p6LP42nzga1DaVFUx6oeroL72iZGKRVVLwXuHWxilIK0m2bc38SotiuqdppxZxM7AL7HNAaauyns894mRikIB2n/djYxSsHElzTj502MahCxftpsbROjGkTMStt4sIlRWhJVP626uIlRCtKvaca9TYwWwZ5pmnF/E6NFsPEtzXiwidEi2POeToL2GwzMMdNO725ilEJsw7Tm0iZGNTBnlI733iZGNTCnl1a9v4mVIP1yGgMTlRS2A3yZNAZWi2kMjNlm2Fya4a6ZbBc9kjQl71c1OmdNOdV70H/nTLqFCy3Swi2XfRZyLSKqrZ1WsUVV4ArUQg66dbre32VHFzOR2nydvr2bvbaaiep6x4EF5/obNLuKVF1tPiRUVuKiinrq2hqKi6REffPhJN8GvWABbsZDMKF4gpgJg4QnxlEhByRuWawd/BlzM0U1z9AOmAApjmCWiQIYVdSx3rkCNGbLn8ACH4y9D8aeerpgXGNbUJI4lH1djGJ1J4gtDVsc50aVBRJWeGjFTB0oLbeJlPd2rsdWC/0VBFzi8WnHzqqcZALbmOc0ds6MpeZgbfnqY8kCty28Su25STy@QmROKxCXaZJcHtll3OL4nCcr8b/YlNiSJOu/E5TQ4uhYSYhq97FjdizHMIQWFUjEPcHNsefaj93gpW/54UjOiNtKm3G3KCa6@hTzsHpsRTTfmjNSA7doQjNXTQomHSywhAh5Jn0MY6EsnAh5rpbME4Xr/P/GfCqqHd8yn/kE8lbBguN5Y@R6IRqZYXdgu08CsEoLd2VM1A6mhNum8ImSzDJ8psUTESZ/LybbfMLYoBl5I0p9z09iBRbpOokk/aNLpblEyNav/9Qrl2eGVHgtePBrF7qFbkvTaEEumNJW9Vv95qx@Y0jS1ti33bAPhzoXEBOKMHvtIqULp/avwO8a0pez81o9ggzJgWX1SODDbQrz4bw/cbuh7bmogU9J9L35nP8Tk7ZxqsOwLctL@hkmkW@FE99FGRl4lpQ/lhTAj@iS8ueSwpZbEm7WCEylQlfId/iaRNcGcHEzFEVPmK@XPBNcJRF3H1WX6Dm@zt9/rA23Rcd2rSPtWNTKyophX2MFItV5lTzwEpShWASBrEEohjbV/2DqJ66xoruCLxcWXc4EyCjEn91I7RCtqB6D668D27FwBkJKvNVIwiQCcDab4DugLQkuruVv86d5h7AscsHo1gAe3TEcy30KB/iW6KyuanCtrR0ajk4mGJ8a4EsQ@vg2X5PlPCXkH4H7JRyfyqX9cmmXzJdKbNDewOdrih/xZb6av8//JNGlIRQey6gO3WGintW1R3DNBGetJ8uH7/EkFPSqAeL6PdjAbGGlDeaW9g6r2Wz1cHef8H7TAav@IzyUmju7bRG2inujVFKqiXDcksCC92MxWoKAVA1jp0iimAVeAKHtTqw5izhjrR6W9oHnaHePMChWvlQbr0x@GvgnQVWltK@z7OkNfJ/7ueJrdxH9Br5ZC0KwINytJusFcjLM35KoZmhc49DgdQzhH7KyzQ8VpW3cskSxWa3NQchDm8@H7ZXQ@0vVEFHM@5PkWA2sKHxdNs2mNVN8lee6MtCOLMIZmF3xErk1rg4ZbyJ7uxR6@1eho98LvX@YwaS4GcqaKeHCmQH0rrFGGgHpGYoFwQOpgRl9hdjBJgQ0LvE/WIU3sHkM4rLJIlG@SyKiL3eMnEGVYg6bhxrJsZzB90pQ/06vN0w65i5xFg9zDoGKATVCYRvOhwJUo1BG95YP1yX7xQ5gGYEVCkuKeTw8co6H207Z2R6W@VjlY8jRPN5hwTJDa0M5wJsOr2/NwqxLBGlpXB8iscb1sXVvvrH@5YllxGdTfCGA@xacVeypq/juM511JzDqSUhCSr@4OMTg/tLAWcLeeivmWLyY48MxgsLlBf0sy7osDw8x24RZ0ULI4/APkykMiP57N5i7Pcux4DkMeYZWSLYnaBBZrh2CuEzjluAnTY2vKFPok3jTl@N5ey5tfUIjr2f3bXCg73sjNLB8a@v/DpP5@gxciB13hvDXUqxXQkq9hPj/Hias47zRXwJ4ACemwIUkUYO7DPwIKIj9w8K2J@RFjUizqek/wVO@NkWJ69NfJgrgld5HT2gwfHb@Cw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"229959","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 66 bytes (filename).</h1>
<p>Unprintables are as a backslash followed by its code point in three-digit octal.</p>
<pre><code>\001.t.z\002.r.wzun.p.m\001.+.t\001o.r.ao.zdok.p.m\004.xki-yo-shi!.p.d.a\001.tXX.a.a
</code></pre>
<h2>With comments</h2>
<pre><code>XX.z
# heap: 1 as counter
.a\001.t.zXX.z
  # choosing either zun or doko
  .a\002.r.wXX.z
    .azun.pXX.z
    # increment counter
    .a.m\001.+.tXX.z
    # push o for next dot-z and get out
    .a\001o.r.aXX.z
  # if empty; then push o and get in
  # else pop it and ignore next block
  .ao.zXX.z
    # reusing the o
    .adok.pXX.z
    # print kiyoshi and exit if counter is &gt;4
    .a.m\004.xki-yo-shi!.p.d.aXX.z
    # else reset counter to 1
    .a\001.tXX.aXX.z
# pop a garbage of an o if any
.a.a
</code></pre>
<p><a href=""https://tio.run/##fVdrV@JIE/7ur2iykXQTcmlERWJ0GPR12FVGHdfjaNATSNBgSFgSFA3sX5@3upMImZ0zniPpp6q67n17jp5@/IFqeo0ifQfRhor2dre2bbqzs1PbCEJMcAm5g6cQiQlVoqdlLfSdg3KNGIwVOkhpBUh5iWd0EU@R0o6Qdacrez0k3VlBpSctHqfuBKnEiNwYKe7MmI3t6Bnpeq1muPNJOI3RafuhdXpqtg0cv01c9OjGgzAYlsscDcLx2A4ccqA57osWzHwf1Q7KtFzOJp@3rr6YgogzOaRMcgWcRcSEfeTmMh0oSyE3@3e3c/Pw7erIrOn6Vk48//qtc3P6/aH99fLyuH1lUuMOCWLyufXty8P18eW3ztduE3SgXrnMAwrRJIy8eYrkz6n07X@F3fHMt2MXRU9cNJzEMHwNp0408b24XLZ9z46Q8ogkSLMsiJ@EpWRK7CuVy92/T0/bZ0dmk6vHzJRjRE/eMOZZdRCTywhpqf4gAjIRZZaD0HBfbB8JJTS0/cgVFgsgcUVcdr6IXAdJkTbX3jQjgp93TeLT31GPySLgGwMoNheXhuEU@3bf9U0BjBokAS9xuMBci3Zf3xG1pNkyxL7RNTQr4Pgc9N6rqhVomtFvGcsUqpTWRG2iGXGGG3oBUkpFLVzh3b0CpBTEgzV2owCpvi1q3hp7qwD3gPuwBkH3YAV3dguQUpCO1hzdKkBKwfTLGnunAKkOYQ7XPNELkOoQprtme68AKa2L2nRNea0AKQXx1zX2bgHSGhibr7EbBUhrYPttjb1XgLQGxt7XsqQXIdiy1xzfLkBKIQ3xmu56AVIdbI3XsrJbgFQHW86a8kYB1qEC8hoE08oKbgG3tAbBEXENgqVNBpdSulwckq4Bje9cWnLCunduONCoJ2yOhVWLWNgK2K9asYioWVtWzaIaSEWaWoG2nuc7Xaqq6RtiKdHuXudv77bT00pJ1@j7oHBpvMGq0JBmaHf3GZc1k6ghRyvoUAIkZebv7j9Ve2AXPMB36RBcqH1CzIWnTCalI7UCLO5Zah3imXA3Ra3KqH1wAcqUAColEYxa2sToXwA1Fat@AgUfgs6HoKMd5YIFsZyT5aE5NcQkNfcJMdWwF3Bp1MopcYunVix1gWMFd0h571Ucpi2erlEgJJ6fXhqsxlk2iE14JdPg7HTWErxtXnyoVLlv8UWxJnk@vkBmjlqQl3lWXJ7ZVd7S/Jxkmvh/6krqSVb1X02U8r10rR6aN8z2S1OwqEASHgi@m4SB9zCIXobuNB7LJXFT6TFpi2JiaI@pDGtHK6FVa8lY59iiGc9e9yia9bHA6iFU2exDGAtN2Jyr3CxZZgaL8r8TPhK1/tS1nzmAsrWw4IfhBAVhjMZ2PHjygkcBRD/CBe0ycx8TrQ9OYkoId7PECXoKRAD/5GCTAwpAIkuBbPz4X7d1dmxKlq5TNVbf4VtTp@rr@yxQJ@qYk2U1Zt8Q6Haovjvhc8aqq/NnT3kL4XrilYDmqHaq5@ZGtVVb2mh/7V4dd6/MjY2BHblw9HFrAvIChCtaZVGxLH17t0LSi46kMQYXkeCmYxhuZA82JlMviIcfcxevA6QMgP1jaA5nwSD2wsBCRjQdmNLn45NON4mmcB@BY9F1yBLOyKEgneMjkny7e67@hUnPPDJg2JPljHmMSTJ149k0QCUZBDLynysyEA9oRv5rRWZaMupVgcrMKDTn3eBLklyaIMLtKoqRSV5mAjPcJkkapWDB32YoVNsZ7wRfVm8/dMMFy/cC90A/FPWmkrv0JTUgUoM32D3vXhn6TBBIgYRS0k/m/2bmZ4GZm2zhs8wddLYQBnYMuWZ3Ny9GucUJhPv65PkuLkH2SPiRNBglQFksZvgGGBk1wJ3qdfWo6pME1iSfklybIGD4pu8Gj/ETviYGu98YnX3fIDOMj0xwPIqn@Loqy50q9PW/Ag9CODyS641mfZssM@0e2DzHJytzD/is2q7eVr@T5MwU1Icm6sL6sZHjDrwxXMggMvfRncJ3MosFo23CXOMWbpzcA4M7Wd/db5fL7f3tBuEr0gBa@1/hvn63td0TYTO5Net1pZ1NThctiOBGOo3WIQdt09yqkSQVgYtx7AUzd8nSy0Tb@/UGyBxs7xJGSo2vzKaayXcTfyeordQbBquTcY5vK9/zQAd5ts/x1Sr8KKfefJTlBQowql6TpGPq3NDI5C0K6R6xpqyOFKVnXrOqMNTpcWJHlnscj3p5rqcri5BFzBcaqbBS56ZeVyvhJyfm@KLKTZRgabF8lgBd8Da4Ni/2mWA28Tqb8fbbGQe/mPH@YZ1N4daVlQdx7v0TrENzRR8D/ZltPfBGOMeMmXP62IbEpX37J2vbc2wfwkTZZkE3b7LgjdWir5hUqVWwva@TCqsKfPPk/fOzslG2Bm6y6PCo4hPoBrAhqJtwOqjQaUIT3bpTuCt5L14Ee53AmoAl3z4cHfiHo02/6W@Omnys8THUYpnuhOCWqfeg5uyp8PM@OiCClHk2xOlr4kMk27eFRchPGjM9b9IzHq5QcP6wN5syDZ7pYjCDkSMhCSnDWn4wwZXkHJcJe9DkRlzehOlpl0DD8UZ8lmVDlkf7mG2NrNkghWk6RxmEATF@7RyLwHF9F553UDRoYa6yY0Jjw6axD9NlmrYy3/A7XKNMob/TrVhOMWzURriwX5/hOY3YscGetXAVGiD@9J2xLg/H7EkHxOl/iKunuFNHSrdeEFgs8ASely14rnpO1Y29sVudDCaz6kv0bjjwMCWLtad8/bdP@UVsez7cTutrWWY35KTBrin8LiQtMGiwrADJ6Q1bqdH6br2xtVNvkEUfEgb5g6NSyMOF7dcUMUYizh/vrcuTh7PWzWLB59f1vR2i1RRaQ4QgKdut@2YfiTo5AJidFH2jbwrC8rh7lBOWElrM7ekjRN@Zo6x48x//Bw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"229961","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 58 bytes (filename).</h1>
<p>Because Pxem does not handle decimal values nor negative values (negative values can be supplied via input but cannot be generated in other ways), I am representing them as integers.</p>
<p>Unprintables are represented as a backslash followed by three-digit octal value of its code point.</p>
<pre><code>x\003\144.w\002.r\002.!+.+.o.v21.y.c\013.r.c.t.c.!.a.m.n.m.m.!.-.v\001.-.c.a
</code></pre>
<h2>Output format</h2>
<p>It outputs 10x, 10y, and 10z rather than x, y, and z.</p>
<pre><code>&quot;%c%d%c%d%c%d\n&quot;, sign, value, sign value, sign, value
</code></pre>
<p>Sign is as either <code>+</code> or <code>-</code>; always output. Value is multiplied by 10. Thus the precision of the program is up to 0.1.</p>
<h2>With comments</h2>
<pre><code>XX.z
# memory layout: counter, l
# until counter is zero; do
.ax\003\144.wXX.z
  # output sign
  .a\002.r\002.!+.+.oXX.z
  # while :; do
  .a.v21.yXX.z
    # generate a random number 0&lt;=x&lt;=10
    .a.c\013.rXX.z
    # continue if x^2&gt;l; otherwise break
    .a.c.t.c.!XX.z
  # done
  .a.aXX.z
  # output x
  .a.m.nXX.z
  # update l to l minus x^2
  .a.m.m.!.-XX.z
# decrement counter; done
.a.v\001.-.c.a
</code></pre>
<p><a href=""https://tio.run/##fVdrV@JIE/7ur2iykXQTcumIisToMOjrsKuMOq7H0aAnQFAwJGwSFA3sX5@3upMImZ0znoPpp6q67n17jp5@/IEM3aBI30G0rqK93a1th@7s7BgbfoAJLiG3/xQgMaFK9LQ0Am9wUDaIyVjBAClNHykv8Ywu4hAprQjZd7qy10XSne1XutLiMXSnSCVm5MZIcWfmbOJEz0jXDcN059MgjNFp66F5emq1TBy/TV306Mb9wB@Wyxz1g8nE8QfkQBu4L5o/8zxkHJRpuZxNPm9efbEEEWdySJnmCjiLiAn7yI1lOlCWQm7270775uHb1ZFl6PpWTjz/@q19c/r9ofX18vK4dWVR8w4JYvK5@e3Lw/Xx5bf2104DdKBuucwDCtA0iEbzFMmfU@nb/wq7k5nnxC6KnrhoMI1h@BqEg2jqjeJy2fFGToSURyRBmmVB/CQsJUtiX6lc7vx9eto6O7IaXD1mpgZm9DQaxjyrA8TkMkJaqj@IgCxEmWU/MN0Xx0NCCQ0dL3KFxQJIXBGXnS8id4CkSJtrb5oZwb93TeLT31GXySLgm30oNheXhkGIPafnepYARk2SgJc4WGCuRbuv7Yha0miaYs/smJrtc3wOeu9V1fY1zew1zWUKVUoNUZtqZpzhul6AlFJRC1Z4d68AKQVxf41dL0Cqb4vaaI29VYB7wH1Yg6C7v4I7uwVIKUhHa45uFSClYPpljb1TgFSHMIdrnugFSHUI012zvVeAlNZELVxTbhQgpSD@usbeLUBqgLH5GrtegNQA229r7L0CpAYYe1/Lkl6EYMtZc3y7ACmFNMRrumsFSHWwNVnLym4BUh1sDdaU1wuwBhWQ1yCYVlZwC7ilNQiOiGsQLG0yuJTS5TIg6RrQ@M6lJSese@fmABr1hM2xsWoTG9s@@69WbCJq9pZt2FQDqUhTK9DW83ynS1U1PFMsJdrd6/zt3Rl0tVLSMXseKFyab7AqNKSZ2t19xmXNJGpooBV0KD6SMvN395@qXbALHuC7dAguGJ8Qc@Epk0npSK0Ai3uWWod4ptxNUasyag9cgDIlgEpJBKOmNjV7F0BNxaqfQMGH4OBDcKAd5YIFsZyT5aERmmKSmvuEmGrYC7g0auaUuMlTK5Y6wLH9O6S8dysDpi0O1ygQEs9PNw1W4ywHxKa8kmlwTjprCd42Lj5Uqty3@KJYkzwfXyAzR03IyzwrLs/sKm9pfk4yTfyXupJ6klX9VxOlfC9dq4c2Gmb7pSXYVCAJDwTfTQN/9NCPXoZuGE/kkripdJm0TTExtcdUhrWjndCqvWSsc2zTjOesexTNelhg9RCqbPYhjIUGbM5VbpYsM4NF@d8JH4laL3SdZw6gbE0seEEwRX4Qo4kT959G/qMAoh/hgnaZuY@J1gMnMSWEu1niBD0FIoB/crDJAQUgkaVANn78r9M8O7akuQ2HsU1rNfUVRoYa8v8lWZXVQH0xqPqm9m2dbqmh2ldj@JVUR52oPvwmMFbUF5hA4dtXHWmj9bVzddy5sjY2@k7kwpHHrQho5CNc0SqLim3r27sVkl5wJI0xuIgENxzTdCOnvzENR348/Ji7eO0jpQ/sH0NrOPP78SjwbWRGYd@SPh@ftDtJFMI9BI5Dd0CWcDYOBekcH5Hk291z9S9MutaRCcOuLGfMY0yS0I1noY9KMghk5D9XZCAe0Iz814rMtGTUqwKVmVFozrvBlyS5tECE21UUM5O8zARmuEWSNErBhr/NQKi2Mt4JvqzefuiGi5U38t0D/VDUG0ru0pfUgEhN3lj3vGtl6C9BIAUSSkk/mf@bmZ/5Vm6yic8yd9DZQug7MeSa3dlGMcotTiHc16eR5@ISZI8EH0mDUQKUxWKGb4CRUX3crl5Xj6oeSWAt8inJtQUCpmd5rv8YP@FrYrJ7jdne90wyw/jIAsejOMTXVVluV6Gf/xV4EMLhkVyrN2rbZJlpH4HNc3yyMveAz6qt6m31O0nOLEF9aKAOrBsHDdz@aAIXMYjMfXRD@E5nsWC2LJhr3sJNk3tgcidru/utcrm1v10nfCWaQGv9K9zX7ra2uyJsIrdWraa0ssnpYgURXE@n0RrkoGVZWwZJUhG4EMcjf@YuWXqZaGu/VgeZg@1dwkip8ZXZVDP5buHvBLWUWt1kdTLP8W3lex5oP8/2Ob5ahR/l1JuPsrxAAcbVa5K0LZ0bGlu8RSHdY9aU1bGidK1rVhWG2l1ObMtyl@NxN891uLIIWcR8oZEKK3Vu6nW1En5yYo4vqtxECZYWy2cJ0AVvg2vrYp8JZhOvsxlvv51x8IsZ7x/W2RRuXVl5EOfeP8E6tFb0CdCf2dYDb4NzzJg5p4cdSFzat3@ytj3HziFMlB0WdOMmC95cLfqKRRWjgp19nVRYVeCbJ@@fn5WNszVwk0WHxxWPQDeADUHdhFNBhU4TGujWDeGONHoZRbDXCawJWPKdw/GBdzje9Bre5rjBxxofQy2W6U4Ibll6F2rOngg/76N9IkiZZ0OcviI@RLJ9W1gE/ISx0nMmPdvh6gTnDnurKaH/TBf9GYwGEpKQMjTyAwmuIue4TNhDJjfi8iZMT7kEGo434rMsm7I83sdsa2TNBilM0znOIAyI@WvnWAQD13PhWQdFgxbmKtsWNDZsGvswXaZpK/MNv801yhT6O92K5RTDRm0GC@f1GZ7RiB0b7DkLV6A@4k/eGevyYMKeckAM/0NcPcEHNaR0agWBxQJP4VnZhGfqaFB149HErU7701n1JXo3B/AgJYu1J3ztt0/4ReyMPLiV1tayzG7GSZ1dT/gdSFpg0GDbPpLTm7Vi0Npurb61U6uTRQ8SBvmDo1LIw4Xt1xIxRiLOH@3Ny5OHs@bNYsHn1/S9HaIZCjUQIUjKduue1UOiTg4AZidFz@xZgrA87hzlhKWEFnMnfITo23OUFW/@4/8"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"229963","<h1><a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 58 bytes</h1>
<p>Just a modification of @stephanmg's post in Bash.
Output is on STDERR as in &quot;command not found&quot;.</p>

<pre class=""lang-bash prettyprint-override""><code>case $1 in
*1?|*[04-9])$1th;;*1)$1st;;*2)$1nd;;*)$1rd
esac
</code></pre>
<p><a href=""https://tio.run/##DcvBCsMgEATQe75iD0uJQsEtXoqUfkgtxKolpWCIKzQH/93uYZgHw7wCryPOah4xcAYk@JRJ073rh7Hn61MhtdU5TQJugougJIF0TVPmEIdy763CIVdYOO9AYM3i0gYR8Oin8PuCR3PzaHur4H2RNNlLHn8"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<p>This program completely relies on the limitation that the input is a non-negative decimal integer.</p>
","","user100411"
"229964","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 6 bytes: filename.</h1>
<p>First two characters are as escaped notation.</p>
<pre><code>\303\003.$.p
</code></pre>
<p><a href=""https://tio.run/##fVd9V@I4F//fTxG6lSaU0gZRkVgdBn0cdpVRx/U4WvQUKAqWlqVF0cJ@9Xlu0lba2Tkz54z0d@/Nfc9N8hw8/fgDVY0qRcYOovUK2tvd2rbpzs5OdcPzMcEF5PSffCRHVAueVlXfHRwUq4Rxlj9AWtND2ks4p8twhrRWgKw7Q9vrIuXO8kpdZfk4c6aoQljghEhz5mw@sYNnZBjVKnMWU38WotPWQ/P01GwxHL5NHfTohH3fGxaLAvX9ycT2BuRAHzgvujd3XVQ9KNJiMVl83rz6YkoyTuSQNk0VCBaRI/6jNlbxh7aSUrN/d9o3D9@ujsyqYWylxPOv39o3p98fWl8vL49bVyZld0iSo8/Nb18ero8vv7W/dhqgA3WLRRGQj6Z@MFrESP0cS9/@V9iZzF07dFDwJET9aQifr/5sEEzdUVgs2u7IDpD2iBRIsyrJn6SVYir8VykWO3@fnrbOjsyGUI@5qQELnkbDUGR1gLhcQohL9QeRkIkot@z5zHmxXSQV0NB2A0daLoEkFAnZxTJwBkgJ9IX@prMA/rzrilj@jrpcFgGf9aHYQlwZ@jPs2j3HNSUwykgEXmJ/iYUW/b62I@tRo8nkHusw3fIEPge995WK5ek66zXZKoYVSquyPtVZmOC6kYOUUln313h3LwcpBXEvw67nIDW2ZX2UYW/l4B5wHzIQdPfXcGc3BykF6SDj6FYOUgqmXzLsnRykBoQ5zHhi5CA1IEwnY3svBymtyfoso7yag5SC@GuGvZuDtArGFhl2PQdpFWy/Zdh7OUirYOw9kyUjD8GWnXF8OwcphTSEGd21HKQG2JpksrKbg9QAW4OM8noO1qACagaCaW0Nt4BbyEBwRM5AsLTJ4UqJt8uAxHtAF5NLj0549y7YABr1hK@xcMUiFrY8/rdSsoisW1tW1aI6SAV6pQRtvUgnXayq4TK5EOl3r4u3d3vQ1QtRh/VcULhib7ArdKQz/e4@4fJmknU00HM6NA8pifm7@0/lLtgFD/Bd/AkuVD8h7sJTIhPTUaUELOFZbB3imQo3Zb3MqT1wAcoUASpEAXw19SnrXQA1Fit/AgUfgoMPwYF@lArmxFJOkofGjMlRbO4T4qphFghp1EwpYVOkVi50gGN5d0h775YGXFs4y1AgJJGfbhysLlg2iE1FJePg7HjVCrxtXHyorAjfwot8TdJ8fIHMHDUhL4ukuCKz67zF@TlJNIn/sSuxJ0nVf7VQSWdpph76aJjMS1OyqEQiEQi@m/re6KEfvAydWThRC/Km1uXSFsWE6Y@xDG9HK6Jla8VZ59iiCc/OehTMe1ji9ZDKfPUhfEsNGM5lYZasEoN5@d8JH8l6b@bYzwJA2ZpYcn1/ijw/RBM77D@NvEcJRD/CBe0qdx8TvQdOYkqIcLMgCEYMZAD/pGBTAApAISuJbPz4X6d5dmwq1paxZcF5XJErU2Wj9bVzddy5Mjc2@nbgwJElpCQ08hAu6aVlybKM7d0SiS8ois4ZQkSBGwpjTmD3N6azkRcOP9YuX/tI6wP7x9Aczr1@OPI9C7Fg1jeVz8cn7U4UzOAeAceZMyArONuGknKOj0j07e65/BcmXfOIwWdXVRPmMSbRzAnnMw8VVBBIyH@uyUA8oAn5rzWZa0moVzkqN6PRlHeDL0l0aYKIsKtpLJG8TATmuEWiOErJgn@bvlRuJbwTfFm@/dANFyN35DkHxqFsNLTUpS@xAZky0Rj3outU6A9JIjkSikk/mf@bm597Zmqyic8Sd9DZUurbIeSa37lGIUotTiHc16eR6@ACZI/4H0mDrwgoy@Uc3wAjoXq4Xb4uH5VdEsFeEkuiaxMEmGu6jvcYPuFrwvi9hLX3XUbmGB@Z4HgQzvB1WVXbZejHfyURhHR4pNbqjdo2WSXaR2DzHJ@szT3gs3KrfFv@TqIzU6o8NFAH@t5GA6c/msBFCiJzHp0Z/E7nocRaJqxlt3BTFB4w4WRtd79VLLb2t@tE7CQGtNa/0n3tbmu7K8MQuDVrNa2VLI43G4jgeryM1iAHLdPcqpIoFoELbTjy5s6Kp5eLtvZrdZA52N4lnBQbX5uNNZPvJv5OUEur1RmvEzvHt6XvaaD9NNvn@GodfpBSbz7K8gIFGJevSdQ2DWFobIoWhXSPeVOWx5rWNa95VThqdwWxrapdgcfdNNeztUXIIhYbjZR4qVNTr@ud8JMTC3xRFiYKsLV4PguALkQbXJsX@1wwWXidrHj77YqDX6x4/7DOlwjr2tqDMPX@CfahuaZPgP7MRw/c7c8xZ6acHrYhcXHf/snb9hzbh7BQtXnQjZskeLbe9CWTatUStvcNUuJVgd80ef/8rGyc7IGbJDo8LrkEugFsSJVNmOoV6DSpgW6dGdxxRi@jAGadxJuAJ98@HB@4h@NNt@FujhviWxffUItVPAnBLdPoQs35Ff/nOdonkpJ4NsTxK@BDJJnb0tIXJ4QZnxPx2QxXHzg3@FtLm3nPdNmfw9dAQQrShtX0QIGrxDkuEv4QSY04ognjUyqChhON@KyqTFXH@5iPRt5skMI4neMEwgdhv3aORzBwXAeeZVA0aGGhsm1CY8PQ2IflKo1bWQz8ttCoUujveBSrMYZBzfyl/foMz2DEjw3@HIUrTB@JJ@ucd7k/4U8xIM7@Q1w/oQc1pHVqOYHlEk/hWdiEZ@ZoUHbC0cQpT/vTefkleGcDeFCSZeYJXvvtE3wZ2iMXbpW1TJb5zTaq8@uFuMMoSwwaLMtDanwz1qq0tlurb@3U6mTZg4RB/uColNJwYfyaMsZIxumju3l58nDWvFkuxfqasbdD9KpGq4gQpCTTumf2kGyQA4DJSdFjPVOSVsedo5SwUtByYc8eIfr2AiXFW/z4Pw"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"230204","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 0 bytes.</h1>
<p>Yes, a blank program:</p>
<pre><code></code></pre>
<h2>How it works</h2>
<ul>
<li>The Dis language accepts an empty program.</li>
<li>Begins with <code>c=0</code>.</li>
<li><code>mem[i]=0</code> for each <code>i</code>, so every cells stand for NOP.</li>
<li>Unlike Malbolge, the Dis language does never modify the program by default.</li>
<li>This goes forever.</li>
</ul>
<p>Since TIO doesn't have Dis by native, I made the interpreter. <a href=""https://tio.run/##jVZtU@JIEP6eX9FGhERkw5veYhzrXPR2rWLVkt2rvRM2NSYDpAhJKhMUF/jtXk9ekCRYt6mCTDrdTz8z83Rnpnzyug@WzT@w2eMH3@P2wuYzibMQamwuzWeUT6FebzYltvC9IIRe17jo9UhXWkoAEL74DMYsND13BOXyxmR6sxl1LWkN55rFnjR37jjQPC83EqcE7O7i2xcil5TEHWr@Bky8UktLcaueruPBaW0tpzzubvvXP3r/GN3b@/ur7jfSSF98v7n@YfS/XZJmvd6SHkAuLT9d9L8Yf1/d969vbwQGDMvlaIYeRDOOn6qfYu9/i85sNndoyIBPIlfPD3H47AUW9x07LJepY1MOtTFUSstGVS79Ka8rpCLulXL55nuv1/16SU4jeEWksnQ@sUehHo1B@CUGZk48KO2rMhBoiMzKHkS2yp3DKGcwx5/LnlmABJjjVNTGeRn35ok6IO/BiDqcyavV70VFdCK/xYozCypcW2gvms7x75dWiUj8guFuuP73/lOrChiXoEn7MLJd5OHYLgNvBBNGLcz4yBzvWUKF8cCM9pqGZ2cVw2CucWlUdD@w3XAExutrYpJUOYIKeAjhsxfBcYE38rwQ8eij98QkacZmAk2IKYE44GL34kQHBm7cSrzEax8CNsMg4D41EYstTIY72PuLJw5hADWc/iAcPA1GgwAqW6FCmswNE4ggsUfLlYxPaWrUlIef6lD8DlVNGydmTdGWyRCv0uPb@OZt@JiCrLeThx7gZJLHkedghTw3Nu/HAfPhw@aRPk83nD5dfb6@2cpqenM3JHX9zeL5wYN8KA9Ju5m3/kRrp523nqP1pOC7QmujWXBeRuZW3ryOzMd5syESFqx7aG1tINbJvVQH2xUOW7OzR0o8QXLcqbc76tarVB4g264/D1FXDsNlRVl57hjZoxpByFfWMzFsYaN9y7aWcniCYqk@1HNrXK0WCRMiK/IyDyDP3RkNzQkqSXmHSJZFCrinbNZALaJuTRP7aEhtl6Mz9gfbAnNCA2piEfHfS4gtYFPWzgvCYKgfMPyXFGlTdYOBi4WH9Yi9WXQJhn3fQ6VegAu1J6iFME80K@qsy6GOymgfn/zxsSNCKw8D93CYqD6WtKTGT0LRiLAIkTUj9VjdGWnbiaajtdEw86bUKDGJ9ab4kRcour69Xl2ClB/M7R1EHcW5cgoyDWLqlkEsfZewsCzlI3pkHllH3SOBaQ13r@6WhvYBay@TuEuwEtUMvkWqMZyeCfxZCOy0s4Hm7sDzQuBJLiMlcRzBiSnxUGupCdhB67DROfnYyoKuCqDYDnLrZ2c6T7IbU9LQp2cCsa1PD0kry0REVYkieFBtqh60aluUxHO1hX@HU/0d/u8u@3IH31xuNNO4lXwskIoqJDcbhh/dvF9SHfIArwMP9ZFdtfUOFscFFngWij6m9IzUC0xozDCLa8innWMQRykvnGCdAw3wy@/5Gae9QvJWbgUKs3yvMpISwLNFWgJRURnDuBDwfnvf/99qMIliVhvqQX5CFlGsgn29qfeUikhlD0lpQ9hOunD6LU36iCMODOn58uL@s/H14sdqFfWsdr1zguedYoOhKF1O5A1xhzhas9ZovnUdh7njcKJwwrHVq@fESUPjteH6LqQo8urmcpdvynpBgzEeKq9hkapp8fof"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"230293","<h1><a href=""https://esolangs.org/wiki/BrainCrash"" rel=""nofollow noreferrer"">BrainCrash</a>, 14 bytes.</h1>
<p>Note that this is NOT Brain<strong>c</strong>rash; this is also a Brainfuck-variant, with these expansions:</p>
<ul>
<li>The first 13 cells are initially <code>Hello, world!</code>.</li>
<li>Automatically implicit output.</li>
<li>Four logical operators.</li>
</ul>
<p>Here is the program:</p>
<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;^&lt;&lt;&lt;&lt;&lt;&lt;&lt;
</code></pre>
<h2>What it does</h2>
<ul>
<li>Move to space.</li>
<li><code>^</code> is <code>mem[ptr+1]=mem[ptr] xor mem[ptr+1]; ptr++;</code>; to change <code>w</code> with <code>W</code>.</li>
<li>Go back.</li>
<li>Implicit <code>[.&gt;]</code></li>
</ul>
<p><a href=""https://tio.run/##XVNdb5swFH3Pr7ioXgvChJCmXRcHmodJ2172skl7qFpEiBOsEEOxWdql9K9n13yoapGQfc89PvfeYyh5lV@dziy/VpWfF2mS@ysh/RJh8P6MzqBWyZbDHFpkVSVCplWisnGZgyrqKuXjVQoLELKs9Vg/aTyis0TuFGyKCp7/PY1qxUHpSqSame0hqaSQW8X2z7Dch/bnKQ0mAb433RsEdDajl4gGX9ooCGZ9dkIvLx08R0Q4MUvZLrAU0kSqStno2M4AxGcjA4SLxcX3uIi/xfyCnaL2eVh0z6lPjMTGbrmvPvWdo5GXKlz8@v31x8/ICGssU9YqwzpU1SucxTAo0a5Lg0Mmcg45l1udGTgiumlGSIN0a7SKfB2qTGw0Ki1x9tAOpjf0upvwmt7QGcVNO5XkB6yEttmG6BwN4IYkhlrmXCkSnxu1xsCNKbDlOp0eyZmQkRfctkWwxXmaVTC9umr4XzTC8Ewbu86xtFjz8PFgWRh8Svdrs4cIyP6OlPfhpCtkY@i6CDgMb5aUnmccKqMJxu7Atfs1xFLO7WTehW7AwPtAcW671QvmyGUwhrISUtvY58BA4TtonRyQI9xDAy@DVLe8DI0xOH@fOX/LPLzPPLxlXodMuh3KMIsRtOH4aFGrMWb0jKJa2629tmM4fWtx2F8/fi2U7Mz14y0ZT8dhK0PiZkx8sYE13wjJ1wPI8kRpEBuyi/ovBRWa/iRW/WCI66Il7@ywGi@yHWb@HbJEneXpPw"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a> The interpreter was originally written by &quot;ぬこ&quot;, the designer of the language; I modified a bit for TIO.</p>
","","user100411"
"230328","<h1><a href=""https://esolangs.org/wiki/BrainCrash"" rel=""nofollow noreferrer"">BrainCrash</a>, <s>21</s> 12 bytes</h1>
<pre><code>[[[...&gt;&gt;&gt;]]]
</code></pre>
<p><a href=""https://tio.run/##XVNNc5swEL37VywTNYFBgHGcNDWG@NCZtpde2pkePA6DsWw0xoIgUSd1yF93V3xMJjloVvv26e3qCUpW5TfnC8OrZeXlRZrk3poLr0QYnD@jC6hlsmMwgxZZVwkXaZXIzC1zkEVdpcxdpzAHLspauepJ4RGVJWIvYVtU8PzvaVRLBlJVPFWB3h6TSnCxk8HhGRaH0Pw8of7Yx3XXLd@n0ym9RtT/0ma@P@2rY3p9beE5wsOxDmUbYMGFzmSVBqf2CkC8QKfhfH71PS7ibzG7Cs7L5dJ13SiKVqvVuYdHfGu2zFePetZJSwsZzn/9/vrjZ6RFFbYoa5lhDyrrNd5DMyhRtk39Y8ZzBjkTO5VpOCKqaUZIg3SntYp8E8qMbxUqLfDeoelP7uhtd7tbekenFDftjQQ7Yie0zNRE66QBOyQx1CJnUpL4Uqs1Gm50gx1T6eRELriIHP@@bYIjztKsgsnNTcP@oguap8fYd26lxYaFj0fDwORTetjoPURADktSrsJx18jE1LYRsAJ8VVI6jnaojMaY2wPX7GOIraz78axLbT8A5wPFuu@i48@QG4ALZcWFMnHOgYHCS2idHJATrKCBl0GqCy/DYAFcvq9cvlUe3lce3iqvQyXdDW0CIyBow@nRoEajzegZRbUxW3tNS3P60eKwf378WijZ6@fHV9KeumErQ@LGJR7fwoZtuWCbAQzyRCrgW7KP@i8FFZr@JHb9YIhtoyXv7DAaJzKtQP83ZIE6i/N/"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<hr />
<p>Previously:</p>
<pre><code>...^...^...^[[[&gt;&gt;&gt;]]]
</code></pre>
<p><a href=""https://tio.run/##XVNNc5swEL37VywTNYFBgHGcNDWG@NCZtpde2pkePA6DsWw0xoIgUSd1yF93V3xMJjloVrv79N7qCUpW5TfnC8OrZeXlRZrk3poLr8QyOH9GF1DLZMdgBm1lXSVcpFUiM7fMQRZ1lTJ3ncIcuChr5aonhUdUloi9hG1RwfO/p1EtGUhV8VQFentMKsHFTgaHZ1gcQvPzhPpjH9ddt3yfTqf0Gqv@lzbz/WnfHdPrawvPER6OdSjbAAsudCarNDi1VwDiBToN5/Or73ERf4vZVXB2XfdhWMvlMoqi1Wp17vsjvjXbI68e9ayT1hAynP/6/fXHz0izK9Qqa5mhGJX1Gi@kEZQo26b@MeM5g5yJncp0OSKqaUYIg3SnuYp8E8qMbxUyLdCA0PQnd/S2u@YtvaNTipv2aoIdUQm9MzXQOumCHZIYapEzKUl8qdkaXW60wI6pdHIiF1xEjn/fiuCIszSrYHJz07C/aIfG6TH2nW1psWHh49EwMPmUHjZ6DxGQw5KUq3DcCZmY2jYWrACfl5SOox0qozHm9oA1@xiilHU/nnWp7QfgfIBY9110/BliA3ChrLhQJs45IJB4Ca2TQ@UEK2jgZaDqwsswWACX7zuXb52H952Ht87r0El3g0xgBARtOD0a1Gi0GT2iqDZma69paUw/Whz2z49fCyV7/fz4StpTN2xpSNy4xONb2LAtF2wzFIM8kQr4luyj/ktBhqY/iaofDLFttOSdHUbjRKYV6B@ILJBncf4P"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
","","user100411"
"230354","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 49 bytes.</h1>
<pre><code>}{*|*^__________!||_^_____________*{___^___****!*
</code></pre>
<h2>Usage</h2>
<ul>
<li>Input from STDIN, as an ASCII number character.</li>
<li>Output to STDOUT, in ASCII.</li>
</ul>
<h2>With comments</h2>
<pre><code>(
0: }{*|*^
'*'+1: ****!* 

'*'+1: * changed to 48-42or49-42 by |:
   12 10t - 11 20t is 01 20t is 15
   12 11t - 11 20t is 01 21t is 16 

'*'+2: * for * command 

'*'+1: 15or16 for ^ 

15+1: ! reaches when zero
16+1: ||^ reaches when one 

obtw '*'+3: * and '*'+4: * are for | to have the register A have 49 again 

'*'+5: ! for ^ 

After that '*'+4: '1' BUT whatever 

'!'+1: *{___^ repeatedly output one 

* 42 ! 33 

) 

(
0123456789 0123456789 0123456789 0123456789
)
}{*|*^____ ______!||_ ^_________ ____*{___^
(
0123456789 0123456789 0123456789 0123456789
)
___****!*

</code></pre>
<p><a href=""https://tio.run/##jVb/U@I4FP@9f8WzIrQg2wLqLXbjnIverTOe7qh7c3eCndgG6FEapgnKLvC3ey9tQWh1bjPTNvn0fc97LxmJ4cuuH4gPbPz4YcJFMAvEGJp2s2EfNVvwr5CaYBLqbKpNx1SMwLabTY3NJjyWcNlxTy8vSUebg/w@YTBg0uNRv1xOVh4fj2nka8sTy2dPVjQNQ2ielBvlcsb@9fTuC9FLRkYI9clKQvLLLM3Vp3a8TCfH9aW@0vz1@vbir8u/3c71zc1554404NvVxV/u7d0Zadp2S7sHvTT/fHr7xf3z/Ob24vpKMUOvXE6c4ZB4mq5qn1Pqf4rEbDwNqWQghgkpn0icPvPYF5MwkOUyDQMqoD6ASmneqOmlX/VlhVTUt1IuX327vOz8cUaOE/GGUuU7Yhj0pZPMQdFlAPOGHEq7pg4EGkqzsQMJVvkaMioYTPGJ2DOL0QAWhhWzcVLGbXiiIeg70KehYPpi8XNciTkJ3WwhmA8VYc2s75Yj8PXDqiRG/IDe2@Juv90@tWqAfJk0zB0Re8k2UvnpU8V1WeSeuRVnEgeR7IP7spxXF9UHdz12Fgt3Y4mjOseXgqo4dqovmQzN1LVd6AexkCCfOYRBxATwPvQ5l@gUfeRPTNPGbKzUawCQ6dwTakNTy/Zc3MuF@oljF2I2RiYQE@qhLDbzGG7q5W8iI5Ax1DEiXdl96va7MVQ2WFWaskhmIuIMTyKYzY/pCrSM@wezp56qaVmDDLYMa55NcZQeX@dXr9PHlZDlpnLJAZ3Jln0eYrU8N9b/BzGbwIf1kj6P1jZ9Pv/94mpDq8enkSS284rwSXyvV/UeOWjm0QdE2wd59ATRowLtAtFGs0A8T@BWHl4m8GEedpXCArqDaGstYpl9SzYEkSLY8C7oG6mD5LBtH7TNjV@r9AA9iCZTiXkVMgwrphWPBmg9pi@ojNadLR42CxDfwJZaTp4ysWT3nFyMa7WiwYTohj7PC9Cn0ZhKb4iZZLxjyLYVK4E7xjoGZlHqhpvYUyUNIoHE2DICH7whjamHRSR@TiF2BS2pxYiG4XcUg6yTmOFb4/7jgNjAH6d90tAMbV2D3W6EZYjViV1btRGGZwHHvD2FCOpPUJcwzTJYVV1HgI15cnB49MvHtmKt3Hejai@rgTTBNTNdqfxGCTOJPjDUjfNnGkcun0red7mH@Z3m/1byB1nWJ9Gz0Jp1MVLiEf@1Jvo8NhxnM6Idgm7ce5t7jJmW6s/lmOcSz/Fd4jtvpR4Wrr5P9719f7@zr2T6vbfjv5Flu4DVuaW4Q7BWzS35Pqml4pwtxocCY/tgm9F7m/GkwHiU00hJykfQMSOdWi0zE7bXqjbaRx9b20IXBaHYMHLxC7Z6U7YbI9JwRp@UxANnVCWtbUsUV40Yyg5qjcy9Vn3DJLWutfBVHTnv2P9u2Odv2JvTjTBNm83HglFJDeW8YXhSK6btfMWrxEnz8LAgIcuauzjA3oBHQLLGBHq/W6H4N4X0Qe/i2OPdCPm3t2X5hpuHBTfxaqYOYKCfiF0wlKYh2Jbr6sftQ1A3Oy6H2GqAxngf4ZMtop2C8lYuxIUwvld6WbTwxrOqsaRq3V5aafi9vrn933LziOHVGuZe3iGfGH4BX64bysoUpSrokdLa4CA7CNRxDp66R5VUy1R920gDmYHYQDMQEek4RtVcH/9PNIZQde1ogJngT9XJBRLbKuAlB1c8AhnwjeMfW2JIDuz2Ue4iQLG8BNF1JySh1aw3mivPQxYN5NAQROA5ZZ6QcJ6GUzgrlozy/Ops9QtdUpjjMEG9pDPPaDzAG/EFzFZpN9MST1KXFN2L/R8"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try with 0!</a></p>
<p><a href=""https://tio.run/##jVb/U@I4FP@9f8WzIrQgW76ot1jDrIverTOe7qh7s3eCndgG6FEapgnKLvC3ey9tQWh1bjPTNvn0fc97LxmJ4cuu54sPbPz4YcKFP/PFGBq1Rr121GjCv0Jqgkmosqk2HVMxglqt0dDYbMIjCZcd5/TyknS0OcgfEwYDJl0e9ovFeOXy8ZiGnrZsWx57ssJpEECjXawXiyn719O7L0QvGCkhVCcrCfEvszBXn8rxMpkcV5f6SvPX69uL75d/O53rm5vzzh2pw7eri@/O7d0ZadRqTe0e9ML88@ntF@ev85vbi@srxQy9YjF2hkPsabKqfE6o/8kTs/E0oJKBGMakfCJx@swjT0wCXxaLNPCpgOoASoV5vaIXPunLEimpb6lYvPp2edn584wcx@INpcqzxdDvSzueg6JLAeYOORR2TR0I1JVmYwdirPQ1YFQwmOITsmcWoQEsCEpmvV3EbXiiAeg70KeBYPpi8WtcsTkx3WwhmAclYc2sH5Yt8PXTKsVG/ITe2@Juv90@NSuAfKk0zB0RufE2UnlyUnIcFjpnTsmeRH4o@@C8LOflRfnBWY@dxcLZWOIoz/GloDKOnfJLKkMzdW0X@n4kJMhnDoEfMgG8D33OJTpFH/kT07QxGyv1GgCkOveE2tDEsj0H93KhfuLYhYiNkQnEhLooi81chpt6@btICWQEVYxIV3afuv1uBKUNVpWmLJSpiCjF4wim82O6Ai3j/sHsqadsWtYghS3DmqdTHIXH1/nV6/RxJWS5qVxyQGfSZZ8HWC3P9fX/QcQm8GG9pM@jtU2fz/@4uNrQ6vJpKEnNfkX4JLrXy3qPHDSy6AOirYMs2kb0KEe7QLTeyBHPY7iZhZcxfJiFHaUwh@4g2lyLWKbfQg38UBFseOf3jcRBctiqHbTMjV@r9ADdDydTiXkVMAwrphUPB2g9pi@ojNbtLR428xHfwJZaRp4ysVDr2ZkYVyp5gwnRDX2eFaBPwzGV7hAzyXjHkG0rVgJ3jHUMzLzUDTexp0rqhwKJsWX4HrhDGlEXi0j8mkLsClpciyENgh8oBlknEcO3xr3HAakBf5z2SV0ztHUNdrshliFWJ3Zt1UYYngUc8/YUQqg@QVXCNM1gVXUdATXMk4PDo98@thRr6b4blntpDSQJrpnJSuU3SphJ9IGhbpw/0yh0@FTyvsNdzO8k/7eS30@zPo6ehdasi5ESl3ivNdHnkWHbmxHtEHTj3t3cY8y0RH8mx1yHuLbnEM9@K/WwcPV9uu/ue/udfSXT670d/40s2wWszi3FHYK1am7J90glEWdvMT7kGFsH24zu24ztHONRRiMlCR9Bx4xkajXNVNhes1xvHX1sbgtd5IRiw8jEz9/qTelujEjdHp0oiQf2qEya25YorgoxlB3UGpl7zeqGSWpdaeKrPLLfsf/dsM/fsDejG2GaNJuPOaPiGsp4w/CkVkzb@YpXiXbj8DAnIc2au8jH3oBHQLzGBHq/W6H4N4X0Qe/i2OPdEPm3t2X5hpuHOTfxaqYOYKAnpJYzlCYh2Jbr6MetQ1A3Oy6H2GqARngf4ZMtop2c8mYmxLkwvld6abTwxrOqsbhqnV5Safi9vrn933JzieFW6uZe1iGPGF4OX64bysoUpcrvkcLaYD89CNRxDq66RxVUy1R920gCmYLYQFMQEWnbRtlcH/9PNIJAde1wgJngTdXJBRLbKuAlB1c8BOnzjeMfW2JADmqto8xFgGJ5CaLrdkACq1GtN1aeBywcyKEhiMBzymyTYJ6EU9grlpTy/Ops9QtdUphtM0HduDPPaDTAG/EFzFZpN9NiTxKXFN1L/T8"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try with 1!</a></p>
","","user100411"
"230362","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, <s>21</s> <s>18</s> 15 bytes</h1>

<pre class=""lang-dis prettyprint-override""><code>{{{|{{{|{{{!!!|
</code></pre>
<p><a href=""https://tio.run/##jVZtU@JIEP6eX9FEhERkw4t4i3Gsc9G7tYrTLXWv7k7Y1JgMkCNkqMyg7AK/3etJAkKidZuqJDM93U@/THfPjMXoZc/zxQc2efww5cKf@2ICjVqjXjtuNOFfITXBJFTZTJtNqBhDrdZoaGw@5ZGEbsc573ZJR1uA/D5lMGTS5eGgVIpnLp9MaOhpqzPLY09WOAsCaJyV6qVSKv7l/P4z0YtGygjV6RohXjKLC/WrnKySwUl1pa81f7m5u/qr@7fTubm9vezckzp8vb76y7m7vyCNWq2pPYBeXHw6v/vs/Hl5e3d1c62EoV8qxc5wiD1NZpVPCfc/eWY2mQVUMhCjmJVPJQ6feeSJaeDLUokGPhVQHUK5uKhX9OKv@qpMyupfLpWuv3a7nT8uyEkMbyhVni1G/kDa8RgUX0pg7ohDcc/UgUBdaTYKENPKXwJGBYMZviF7ZhEawIKgbNbPSrgNTzQAvQADGgimL5c/JxWbE/PNl4J5UBbW3Ppu2QI/P6xybMQP6L8Nd/f17qlZAZRL0TB3ROTG20jl6WnZcVjoXDhlexr5oRyA87JYLJbpWygUli8ph2bq2h4M/EhIkM8cAj9kAvgABpxLNJk@8iemaRM2UeAaAKSI@0JtV6J338GdWqpFfPYgYhMUAjGlLmKxuctwy7q/iZRBRlBFf3uy99Qb9CIob4mqJGShTCGilB7HJx2f0DXRMh6@mX31HpiWNUzJlmEt0iE@xcfX8fXr8HENstpWLjmgM@l0wAOshef6Zn0YsSl82Ezp83hj06fL36@ut7S6fBZKUrNfKXwaPegHep8cNbLUb0htH2WpZ0g9zvEukVpv5JgXMbmZJa9icitLdpTCHLWA1OYGYpX@izXwQ8Ww5Z0/MBIHSatdO2qbW0vr9ADdD6cziXkVMAwrphUPh2g9JieofNXtHRk295G@RVtpGTxlYrHWtzMxrlTyBhOiG/oiC6DPwgmV7ggzyXjHkF0r1oAFYxMDM4@65SZ2TEn9UCAzNgTfA3dEI@piEYmfU4g1r8W1GNIg@I4wKDqNGH417j0OSQ3442xA6pqhbWqw1wuxDLE6sSerJsGw03PM23MIofoEVQmzNINV1XUE1DBPjlrHv3xsK9HyQy886Kc1kCS4ZiYzld@IMJfoA0PdOH6mUejwmeQDh7uY30n@7yS/n2Z9HD0LrdkUIyUu8V5rYsAjw7a3I9oh6MaDu73HmGmJ/kyOuQ5xbc8hnv1W6mHh6of00D30DjuHCtPrvx3/rSzbA6zOHcUdgrVq7uB7pJLA2TuC33KC7aNdQfdtwbOc4HFGIyWJHEHHjGRoNc0UbL95UG8ff2zugi5zoNgwMvHzd3pTuhtjUrfHpwrxyB4fkOauJUqqQgxlB7XG5n6zumWSmlea@DkY2@/Y/27YF2/Ym9GNZJo0m485o@IaynjD8BxWQrv5iheFs0arlUNIs@Y@8rE34BEQzzGB3u9WCP8myAD0Hj77vBei/O62rN5ws5VzEy9e6gAGekpqOUNpEoJdXEc/abdA3du4HGGrARrhbYNPd5gKOeXNTIhzYXyv9NJo4X1mXWNx1Tr9pNLwf3N797/l5hLDrdTN/axDHjG8HH21aShrU5Qqv0@KG4P99CBQxzm46pZUVC1T9W0jCWRKxAaaEpEibds4MDfH/xONIFBdOxxiJngzdXKBxLYKeMnBGQ9B@nzr@MeWGJCjWvs4cxGgWF6C6LodkMBqVOuNtecBC4dyZAgi8Jwyz0iwSMIp7LVIynl5fbFeQpcUzbaZoG7cmec0GuJ99wrm67Sba7EniUuK7@U/"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"230439","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 2 bytes.</h1>
<pre><code>}{
</code></pre>
<p>Olmstead's cat program is too long, and it does not do really use the features of the language; just use that non-commands are NOP and the program counter loops over! Though the output would be slow, but this is pretty simple.</p>
<p><a href=""https://tio.run/##jVb/U@I4FP@9f8WzIrQiW76ot1jDnIverTOe7qh7s3fCdkIboFIapgnCLvK3ey9tQWh1bjsDTT7N@5rPe8lIDF92PV98YOPehwkX/twXY6hX67Xqcb0Bj0JqgkmosKk2HVMxgmq1XtfYfMIjCVdt5@zqirS1BcgfEwYDJl0e9ovFeOby8ZiGnrZsWR57ssJpEEC9VawVi6n4l7P7z0QvGOlCqExWGuJPZmGhXuWTZTI4qSz1leUvN3eX367@cdo3t7cX7XtSg6/Xl9@cu/tzUq9WG9oD6IXFp7O7z87fF7d3lzfXShi6xWIcDIc40mRW/pSs/je/mI2nAZUMxDBeyicShzMeeWIS@LJYpIFPBVQGUCosamW98Lu@LJGSepeKxeuvV1ftv87JSazeUKY8Wwz9vrTjMah1KcDcIYfCrqkDgZqybOxAjJW@BIwKBlP8hWzGInSABUHJrLWKuA1PNAB9B/o0EEx/fv41qdideN38WTAPSsKaWz8sW@DfT6sUO/ETum@ru/t699QoA8ql2pA7InLjbaTy9LTkOCx0zp2SPYn8UPbBeVkuXlJQM3VtF/p@JCTIGYfAD5kA3oc@5xK9pD3@xDRtzMZKnwYAqZI9oXYoMbXn4OY8q4/47ELExigEYkJd1MXmLsNduvpDpAtkBBUMsSM7T51@J4LShqjiHQtlqiJK8Tgl6fiErkDLePhudtVv37SsQQpbhrVIh/gUeq/j69dhb6VkuWlccsBg0mmfB0j/WW39fRCxCXxYT@lstPbp08Wfl9cbVl0@DSWp2q8In0QP@r7eJYf1LPod0eZhFm0hepxb@4xorZ5bvIjhRhZexvBRFnaUwRy6g2hjrWKZvgtV8EO1YCM6v28kAZKjZvWwaW58WtEDdD@cTCXyKmCYVqQVDwfoPfIRFEV1e0uGzX3EN7ClltGnXCxUu3Ymx@Vy3mFCdENfZBXo03BMpTtEJhnvOLLtxUrhjrHOgZnXuhEmNklJ/VDgYuwBvgfukEbUxSISv2YQy1yLazGkQfAD1aDoJGL4r3GvNyBV4L1pn9Q0Q1vXYKcTYhlidWIbVn2BYXPnyNszCKHyBBUJ05TBquraAqrIk8Oj498@NpVo6aET7nfTGkgIrpnJTPEbNcwlxsDQNo5nNAodPpW873AX@Z3wf4v8fsr6OHsWerMuRkpc4r3WRJ9Hhm1vZrRNMIwHd3OPkWmJ/QzHXIe4tucQz36Leli4@gE9cA@8g/aB0ul1387/Bst2Aatzy3CbYK2aW/o9Uk7U2VuC33OCzcNtQfdtwVZO8DhjkZJEjmBgRjK0GmaqbK@xX2sef2xsK33OKcWGkcmfv9Wb0t0YkZo9OlUaD@3RPmlse6KkysRQflBrZO41KhsuqXm5gX/7I/sd/99N@@INfzO2EaZJs/mYcyquoUw0DI9eJbTNV7wbtOpHRzkNKWvuIx97Ax4B8RwJ9H63QvVvKumD3sFnj3dClN/eluUbYR7lwsS7ljqAgZ6Sas5RmqRgW6@jnzSPQF3VuBxiqwEa4QWDT7YW7eSMNzIpzqXxvdJLs4VXmFWNxVXrdJNKw/fN7d3/lptLDLdcM/eyAXnE8HL4ct1QVq4oU36XFNYO@@lBoI5zcNXFqKBapurbRpLIFMQGmoKISNs29s318f9EIwhU1w4HyARvqk4ukNhWAS85OOMhSJ9vHP/YEgNyWG0eZy4CFMtLEF23AxJY9Uqtvoo8YOFADg1BBJ5TZosEiySdwl6JpCsvrs9XnzAkhdk2E9SNO/OcRgO84l7CfEW7uRZHkoSk1r08ehyvXsJ/nI1ED9/CB0QYxzj4DMSIPYqe9hMPKzGa@fh9hiEO/wM"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"230533","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 1 byte.</h1>
<pre><code>{
</code></pre>
<p>Outputs infinite amount of NULL characters; may be slow, depending on the implementation.</p>
","","user100411"
"230905","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 113 bytes (filename).</h1>
<p>Here is filename (some characters as backslash with its code point in three-digit octal):</p>
<pre><code>xHJG\071\070b\015\001\021\001\242\005\001l\215\400\344\236&amp;kl\005\262\065&amp;-\001\001\001\001\015\001\021\001\001\003\067\205\210i\014\352k\205\015B\005g.\326\030e\317z]&amp;\012\015\206S\231\061\225\215\311K\256\005\264J\252\262\002\263\220\374\224\373&gt;\007\253\007%\262q&amp;j\271\226\245\001\001&lt;.w\001.-.o.c.c.z.d.aX.a
</code></pre>
<p>Outputs as GIF.</p>
<h2>How it works</h2>
<p>Just as <a href=""https://codegolf.stackexchange.com/a/39926/100411"">@nietthedarkabsol's</a>, but had to add one to every byte, as the original GIF contains null chacters, which is illegal for filename. Then I just decrement each of them to output them. If I had an implementation whose <code>.w</code> breaks from the loop when stack is empty (nk. actually specified on the original page but no one has ever complied with it, including himself), then the final part could be golfed to: <code>.w.o.c.a</code>.</p>
","","user100411"
"231143","<h1><s><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl</a> <code>-p</code>, with the following restrictions</s> <a href=""https://esolangs.org/wiki/ppencode"" rel=""nofollow noreferrer"">ppencode</a>, 15 bytes.</h1>
<ul>
<li><s>Use only keywords with lowercase alphabets only</s></li>
<li><s>Separate each of them with just a space</s></li>
</ul>
<pre class=""lang-perl prettyprint-override""><code>print while sin
</code></pre>
<p><a href=""https://tio.run/##K0gtyjH9/7@gKDOvRKE8IzMnVaE4M@//fwOuf/kFJZn5ecX/dQsA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<ul>
<li><code>sin(0)</code> is zero</li>
<li><code>sin(1)</code> is not zero</li>
<li><code>-p</code> is for implicit I/O for line by line</li>
</ul>
<h2>Alternatives</h2>
<p><code>sin</code> can be replaced with one of following keywords:</p>
<pre class=""lang-perl prettyprint-override""><code>abs int oct hex
</code></pre>
","","user100411"
"231156","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a> using only keywords with lowercase alphabets only separating each of them only a space, <s>227</s> 129 bytes</h1>
<pre class=""lang-perl prettyprint-override""><code>eval q y print chr length xor s qq q while uc le q q q x length q q truncate tie q x length q q foreach q y for q q q x ord q q q
</code></pre>
<p><a href=""https://tio.run/##XY1LDoAgEEOv0kt4IDKOQkL4jIPi6RExujDdtHltmlj81BrvxiPjRBIXFGQFnsOqFjUKNuTc6WGdZxTqCHmovq07qJRARhnq@M@WKGzIjovuv3mU@fGtXQ"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre class=""lang-perl prettyprint-override""><code>eval q y
      print chr length
      xor s qq q
   while
      # default variable has spaces only; equibalent to $_
      uc
      # instead of &lt;=126
      le q q q
         # 126==14*9
         x length q q truncate tie q
         x length q q foreach q
# just noticed i could golf the word
y for q q q x ord q q q
</code></pre>
<h2>Previous: 227 bytes.</h2>

<pre class=""lang-perl prettyprint-override""><code>eval q y print chr length xor s qq q while chr length lt chr length q q length length length length length length length length length length length length length length length length length length q y foreach q q q x ord q q q
</code></pre>
<p><a href=""https://tio.run/##xY9RCoAgEESvMpfoQGJbCou6m5SdfkskqBP0NQPvfcwUUp7MaHcMwYmiMVX4oGBKaw1oWbFB5KZHiExvxh@zKw/4J/qBJSs5P9YIGrLOo5td"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h3>How it works</h3>
<p>Using length of default variable to be accumulator.</p>
<pre class=""lang-perl prettyprint-override""><code>eval q y
      # print chr($accumulator)
      print chr length xor
      # increment it
      s qq q
   while
      # instead of &lt;
      chr length lt
      # 127 is unfortunately a prime; any efficient ideas within the restrictions?
      chr length q q length length length length length length length length length length length length length length length length length length q
# $accumulator=32
y foreach q q q x ord q q q
</code></pre>
","","user100411"
"231172","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (ぬこ's intended specification) and Pxem (pxemi.7z: his actual implementation), 16 bytes.</h1>
<p>Filename:</p>
<pre><code>.wcba.p.d.aabc.p
</code></pre>
<p>Content is empty.</p>
<h2>What it does</h2>
<p>ぬこ, the designer of Pxem, originally intended that <code>.w</code> should NOT get into the loop when stack is empty, but his reference implementation does not satisfy it: it gets into the loop when stack is empty. This is why none of we, implementers, have ever complied his intended specification at all.</p>
","","user100411"
"231255","<h1><a href=""https://www.vim.org/"" rel=""nofollow noreferrer"">Vim</a>, 6 bytes, cracks <a href=""https://codegolf.stackexchange.com/a/231057/100411"">Aaron Miller's</a></h1>
<pre><code>&lt;C-w&gt;n&lt;Esc&gt;&lt;Esc&gt;ZQ
</code></pre>
<h2>What it does</h2>
<ul>
<li>Make a new window first.</li>
<li>Close it by last four keys.</li>
</ul>
<hr />
<h1><a href=""https://www.vim.org/"" rel=""nofollow noreferrer"">Vim</a>, 5 bytes, cracks <a href=""https://codegolf.stackexchange.com/a/231056/100411"">Aaron Miller's</a></h1>
<pre><code>&lt;C-w&gt;n&lt;Esc&gt;ZQ
</code></pre>
<p>Same as above.</p>
","","user100411"
"231532","<h1>Perl 5 <code>-p</code>, <a href=""http://oeis.org/A005843"" rel=""nofollow noreferrer"">A005843</a>, score:16, safe.</h1>
<pre><code> .0123456789aelv
</code></pre>
<p>A simple problem. You should solve this easily if you are familiar with the language well.</p>
<h2>Intended solution</h2>
<blockquote class=""spoiler"">
<p> <code>eval 36.95.42.61.50</code>

 How it works: version number such as <code>5.10.3</code> is represented as a string.
 So, you just need to construct a version number to be <code>eval</code>uated.
 Example: <code>v33</code> is <code>'!'</code>.</p>
</blockquote>
","","user100411"
"231538","<h1 id=""dis-score-1-cracked-by-dingus-vhn4""><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, Score: 1, <a href=""https://codegolf.stackexchange.com/questions/207560/print-x-without-x-robbers-thread/231693#231693"">cracked by Dingus</a></h1>
<pre><code>{
</code></pre>
<p>I have never thought of constructing the  program when I posted this.</p>
<p>PS. Rule clarification.</p>
<ul>
<li>Output exactly a character whose codepoint is 123 in decimal integer.</li>
<li>Do not output else.</li>
<li>Then terminate the program.</li>
<li><s> No Dis implementation whose <code>{</code> command does <code>putchar(codepoint of (a%256))</code> rather than <code>putchar(codepoint of a)</code>; if your implementation is so, reguster A must be exactly 123 when <code>{</code> is executed. </s> deleted as reference implementation, implemented in C, uses <code>putchar(char)</code> and <code>char</code> stores eight octets (maybe not on some machines).</li>
</ul>
<h2 id=""intended-solution-tqtk"">Intended solution</h2>
<blockquote class=""spoiler"">
<p> <code>*|||*__&gt;*__&gt;_||^___________________________*!**}}*!</code>

 <a href=""https://tio.run/##lRZrU@JI8Ht@RRsRAgghgN5idqhz0d21ylUL9GrvBFNjMkDKkHCZRHCB3@715AFB3LvbVCWZ7un3a8aifPy6v6c@2q7Kx5K0D5bNq2zyWJ163J7bfFKFnhf6JquYnsUAd5hlMQvObA62GzB/6jP8VpHzNAzGnl@F2ylln@nsB3MF9tI2mctZFTqdGsKIueN0xMQWaFXosqlDTQayAjd3t/Dn9V0Xzi56cNO9/tI9/QZfz7vnUJRhZgfjSOnU90Y@nUT89Sqcz5kZBgyCMe7xMXMc4KZvT4OIoIHWjFnKA37o8ipcuNMwACSnzoy@cPDZ36HtM0sHgacunF9/BnsIL14IlucWAphRF@VJnAVQYaEUTih/glqtXpfYfOr5AVx2jNPLS9KRFhIABC9TBiMWmJ47hHx@jTK9yYS6lrSCtmqxZ9UN0dp6O68lRImwm9Pbr0TOKQk5VKZrYWKrmFuIX/lkFS9OKis5tePmunfx/fJPo3Pd7Z53bomWbtxdXXw3erdnpF6rNaR7kHOLT6e9r8Yf593exfWVkAGDfD7y0IMo9zFU/hRT/7VLzCahQzH0fByRetMAlzPPt/jUsYN8njo25VAZQSG30Mpy7nd5VSAF8S/k81d3l5edb2fkJBKvCFWWzsf2MNCjNQi6BMHMsQe5fawCAprQrOxBhCvcOIxyBiG@LpsxP66AQlFr5zE3z9QBeQ@G1OFMXi7/H1dkTkQ3X3Is9AJX5@qLqnP8/FALkRE/YPC@uN5d77lRBuRLpGERXnmoBQUFGFefceY/Y7X61HZsdwT4YRy8Ydx43DdPskUOPGo93BzaLjojqJEYxoxaaPYjc7yZFPNFBUODjx8LhsFc48wovCq1IpSWy2XJMNriNZbLB0nRjk9gNsa8PTNfOv7tQ6um1RvNo51VUTJ@/khKs4HC90ql1aq095qolIpyZKrPAwhm3to5GHoezgigj94zk6QJmwhrRcVPfZwhQzjg/b6LcY9dkWEp9vDZx96cIA/wKc4Ijg1iMqyyy888IQh8qGCK@kH/uT/s@1DIsIr2YW6QiPATfJTSZH1CU6Sq3D8UB6Wiqo4SlKqoi2SJT@5xs77aLB9TAausYkw0epGAQ8/BDp5p6/2Rz6ZQXYNZe7h6/1B6aC8XK2NPGaiVurre6JfUZhZ8UFvNDdhWjzObS1WrZzYXCDY24ArBow1oqK0MtKc2MqSKWtHUjWd09gSVZ4xr6AaktrY6VyOkomWCFSUV5NCd0MAco3@KvJSxNkF0hKxvCNncRmSKWGXl1Xfl2dHYHtqOGKRuQG1XnEDY47YF5pj61MQa47@kKnaFHLVqzda/Kgw8rGbPHf2S9B2JuVqGJ9JdLq@ZcLJIaaM7L9mzVfKsxxEG3HsMhzjRFelN12A/4QEgRhHDw8XDcjsFV2SqEkCYFJ5olA6HTYcL1sJ93y0NkgTHdSkVYyjJ9RwHlclQN65n1HcNLwy8oeGZAdHiAvh0/uXiKvXUJrGHUQRUtGbdQ5SYxCJr/4eer@h6MROhDimjH/fmIBMie6jEBmQJRegMYuqWQSx9C52kDRtOPqSH5qF12DmMhFqD99O22iz3QS7JW5o7hDRxCGYVWCQRp28xPuwwtprbjOb7jO0dxuM3GimJ@Qh6psRLtVFMhB00Slrr@ENjW@hyRyhOgzcBtEltO3QiH09E058@ColN/alEGtuWCK4yUYQdVH0qHjQqGZMEXG7gp/Sk/8T@n4Z98Y69b3QjmsZd@mHHqKj13njD8LwXTNsVixeSdv3oaEdCUja3vp0e0ghjBb1fM4n4d4UMQe7jc@D1XeTfTsvqHTePdtzEe150xtOPpLZjKI1DsC3XkE9aRyCuiV4wxvkH1MdbjTfdItrbUd54E@KdMP6s95Jo4b0pbbK4b41B0mu4uO72/rPhTKKYZa148NYliyjWDn61HiqpMUKVPSCbiWono1ScxGCK@1hOjE2co6DEoUyQOEQTJGICXVdKxe3zzRGXk/TCfdr9Ynw7/b5cRvO1WWsd4wUwPfni2UexmTiRZd0hjlqvaPXUS4e5o2CscMJx8hfbxFnEweN6ypJSnl@dpXtov0DqOuPUjEbxnPojvEZfwDytsrkUmR3bL@he/wE"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a> Link to <a href=""https://github.com/GH-TpaeFawzen/dis.posixism/blob/main/dis.emb.posixism"" rel=""nofollow noreferrer"">my interpreter</a>, with comments.

 This uses that 123=11120t=1-11122t-11122t.
 To produce 1 I had to make 00100t first by 0-01020t-01120t-01120t.
 Then I did it <code>&gt;</code> twice.</p>
</blockquote>
","","user100411"
"231566","<h1>Perl 5 <code>-n</code>, <a href=""http://oeis.org/A000290"" rel=""nofollow noreferrer"">A000290</a>: the squares, score:18, safe.</h1>
<pre><code> ;cdeghijklnopqrst
</code></pre>
<h2>Rules</h2>
<ul>
<li>Input from stdin, as a string of decimal integer.</li>
</ul>
<h2>Intended solution</h2>
<blockquote class=""spoiler"">
<p> <code>int or print;int or die;int ne length q q q or print;int ne length q q q or die;s ss s;chr sqrt length eq chr or redo;print length</code></p>
</blockquote>
<blockquote class=""spoiler"">
<p> <a href=""https://tio.run/##bYxBDsAgCAS/wgd6bHrwOZVUEwMKvL9UjT00adjDws5SUcrunsmABap0E9YSM05LCAXpsgRtzof7CUdPQbvCmQS0ib0MNhinDglGDvPNytyPm6tlJvWNHg"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
</blockquote>
<blockquote class=""spoiler"">
<p> Usage: from stdin, as a decimal integer. 0-indexed.
 Can accept only a line.
 Input shall match <code>/^\d+$/</code>.
 No trailing LF to your input.
 Output from stdin, as decimal integers.
 If your input is 0 or 1, the program dies but please don't care for such thing; this specification is just for this challenge.</p>
</blockquote>
","","user100411"
"231571","<h1 id=""pxem-53-bytes-filename-eqng""><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 53 bytes (filename).</h1>
<p>Been a while since my last post of Pxem.</p>
<p>Backslash followed by three digits of octet: a character whose codepoint is so:</p>
<pre><code>._.c\001.y\001.r.-\002.!XX.a.c\003.x.c\004.%.w.d.a\004.$.c\003.a\001.z.d.aY.o
</code></pre>
<p><a href=""https://tio.run/##fVdrV@JIE/7ur2gykXQDuTSiIjE6DLjKjqKi4@sl6AkQFIwJS4Kigf3r81Z3Eklm54znSPqpqq573579p59fUFkrU6RtIVpV0M72xqZFt7a2ymtf0Lcfl@io3kT1NjrodE476PKofokUEf3vtPP9ArXajdNO56BxeXyjo79a1wdNdHTQOVhzPUxwDtn9Jw@JIZX9p2XZcwZ7@TLRGcsbILnuIvk1mNFFMEVyw0fmnSbvdJF0Z7qFrrR4nNoTpBDdtwMk2zN99mL5z0jTymXdnk@8aYCOGw/142OjoePgfWKjRzvoe@4wn@eo7728WO6A7KkD@1V1Z46Dynt5ms/Hk8/ql0eGIOJYDsmTRAFnETFkn2JtGQ3kpZCY/dFuXT9cXDaNsqZtJMSz04vW9fHNQ5wOg@p3SBDDb/WLo4erg85F67RdAx2om8/zgDw08fzRPELFb5H07X@F7ZeZYwU28p@4qDcJYPjmTQf@xBkF@bzljCwfyY9IgjQXBfGrsJQMiX2lfL794/i4cdI0alw9ZqYGuv80GgY8qwPE5GJCVKovREAGosyy6@n2q@UgIYeGluPbwmIBJK6Iy84Xvj1Akq/O1XdV9@HnQ5X49A/UZbII@Hofis3FpaE3xY7Vsx1DAKM6CcFL7C0w16LeV7ZENazVdbGnt3XVdDk@A733imK6qqr36voyggqlZVGdqHoQ46qWgZRSUfVWeHsnAykFcTfFrmYg1TZFdZRib2TgDnAfUhB091dwazsDKQVpP@XoRgZSCqZfU@ytDKQahDlMeaJlINUgTDtleycDKa2I6jSlvJyBlIL4W4q9nYG0DMbmKXY1A2kZbL@n2DsZSMtg7COVJS0LwZaVcnwzAymFNAQp3ZUMpBrYekllZTsDqQa2Binl1QysQAWKKQim5RXcAG4uBcERMQXB0jqDSylaLgMSrQGV71xqeMi6d64PoFEP2RwTKyYxsemyX6VgElE1N8yySVWQ8lWlAG09T3a6SFXN0cVcqN69zd8/rEFXzYVtveeAwqX@DqtCRaqu3t3HXNZMoooGakaH7CIpNn93/7XUBbvgAb6LhuBC@StiLjzFMhEdKQVgcc8i6xDPhLspqiVG7YELUKYQUC70YVRXJ3rvHKiRWOkrKPgUHHwKDtRmIpgRSzhxHmpTXQwjc18RUw17AZdG9YQS1HlqxVwbOKZ7h@SPbmHAtAXTFAVC4vnpRsGqnGWB2IRXMgrOimYtwdva@adKhfsWnGdrkuTjCDLTrENe5nFxeWZXeYvycxhr4v@RK5EncdV/N1FK9tJUPdTRMN4vDcGkAgl5IPhu4rmjh77/OrSnwUsxJ67LXSZtUkx09TGSYe1ohrRkLhnrDJs05llpj/xZDwusHkKJzd6HsVCDzbnEzZJlbDAr/yfhpqj2prb1zAGUrY4Fx/MmyPUC9GIF/aeR@yiA6Ge4oL3I3MdE7YGTmBLC3cxxghYBEcA/CVjngAKQyFIgaz//atdPDgxJeVD6pqZR5Z3/ThUZvmUld32tWJyzocz5t6KsrytvykCxOBBjpsWnfTD6jeJJa43T9uVB@9JYW@tbvg2HHrcjoJGLcEEtLAqmqW1uF0h0xZFUxuAiEtxxdN32rf7aZDpyg@Hn3MVbH8l9BPyfQ2M4c/vByHNNpPvTviF9OzhstUN/ClcROBHtAVnC8TgUpDPcJOHF3XPpOyZdo6nDsFssxswDTMKpHcymLsoVQSAm/70iA3GPxuTvKzLTElMvM1RmRqYJ7xp3SNgxQITblWU9luzEAjPcIGEUpmDC37onlBox7xB3SrefuuFu5Yxce0/bF7WanLh0FBkQqc576543bhFaTBBIhoQi0i/mfzDzM9dITNbxSewOOlkIfSuAXLNr2yhAicUJhPv2NHJsnIPsEe8zaTAKgbJYzPA1MGKqi1ulq1Kz5JAQliOfEl4ZIKA7hmO7j8ETviI6u9rorV1HJzOMmwY47gdTfFUqFlslaOl/BR6EsN8sVqq1yiZZxtpHYPMMH67MPeCTUqN0W7oh4YkhKA811IalY6GB3R@9wF0MIrMf7Sl8J7NA0BsGzNVv4bLJPdC5k5Xt3UY@39jdrBK@GHWgNf4V7it3G5tdEfaRW6NSkRvx5Gi9ggiuRtNoBXLQMIyNMgkjEbgTByN3Zi9ZeploY7dSBZm9zW3CSJHxldlIM7kx8A1BDblS1Vmd9DN8W7hJAu0n2T7Dl6vw/YR6/VmWVyjAuHRFwpahcUNjg7copHvMmrI0luWuccWqwlCry4mtYrHL8bib5Hq6sghZxHyhkQIrdWLqbbUSfnFijs9L3EQOlhbLZw7QOW@DK@N8lwnGE6/iGe9/nLH3mxkfn9bZFG5dXnkQJN4/wTo0VvQXoD@zvQeeB2eYMRNOD1uQuKhv/2Zte4atfZhYtFjQtes4eH216AsGlcsFbO1qpMCqAt8kef/8qmwcr4HrODo8LjgEugFsCMo6HAwKdJpQQ7f2FK5Jo9eRD3udwJqAJd/aH@85@@N1p@asj2t8rMJYHUMtltFOCG4ZWhdqzl4Jv26kfSJIsWdDHD0kPkXijVtYePyQMaKjJjre4fYERw97rslT95ku@jMYDSQkIXlYTs4kuI2c4Txhb5nEiM2bMDroQmg43ojPxaJeLI53MdsaWbNBCqN0jmMIA6L/3jkWwcB2bHjZQdGghbnKlgGNDZvGLkwv0qiV@Ybf4hqLFPo72oqLEYaNWvcW1tszvKQROzbYi/aOnTL81TtjXe69sNccEKf/Ia5e4YMKktuVjMBigSfwsqzDS3U0KNnB6MUuTfqTWenV/9AH8CYli9QrvvLHV/wisEYOXEwrqSyzy3FYZTcUfg2SFhg0mKaLitHlWi7TynalurFVqZJFDxIG@YOjUkjChe3XEDFGIk7e7fXO4cNJ/Xqx4PMr2s4WUcsyLSNCkBTv1j2jh0SN7AGMT4qe3jMEYXnQbiaEpYQWc2v6CNG35igu3vynXP4/"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a>
Through this problem I noticed a bug in my interpreter.
Maybe I need to redesign the interpreter; shortening the code makes maintainance difficult.</p>
<h2 id=""usage-mah0"">Usage</h2>
<ul>
<li>As a string of decimal integer from stdin for input.</li>
<li>Outputs a letter Y for truthy; nothing for falsey.</li>
</ul>
<h2 id=""how-it-works-with-comments-hxuf"">How it works: with comments</h2>
<pre><code>XX.z
# push an integer of input
.a._XX.z
# NOTE Pxem does not have negative constants
# So negative inputs must be changed to positive
# and then get multiplied by two
.a.c\001.y\001.r.-\002.!XX.aXX.z
# Pxem does not have log() nor something similar
# Just keep dividing by four
# And exit if it seemed not to be 4^n
.a.c\003.xXX.z
  .a.c\004.%.w.d.aXX.z
  .a\004.$XX.z
.a.c\003.aXX.z
# final check for &lt;4
.a\001.z.d.aY.o
</code></pre>
","","user100411"
"231692","<h1 id=""dash-susv2-compatible-202-200-193-169-138-137-bytes-w1nd""><a href=""https://wiki.debian.org/Shell"" rel=""nofollow noreferrer"">Dash</a> (<a href=""https://pubs.opengroup.org/onlinepubs/7908799/index.html"" rel=""nofollow noreferrer"">SUSv2</a>-compatible?), <s>202</s> <s>200</s> <s>193</s> <s>169</s> <s>138</s> 137 bytes</h1>
<p>Usage.</p>
<ul>
<li>Requires input from positional argument.</li>
<li>Outputs to stdout, without trailing line.</li>
</ul>
<p>I think I should change the language for golfing off.</p>
<p>Notes about 138 and 137 bytes:</p>
<ul>
<li>May not SUSv2-compatible because it gives floating value to second argument for <code>substr()</code> in AWK.</li>
<li>It ran successfully on GAWK.</li>
</ul>

<pre class=""lang-sh prettyprint-override""><code>s='for(;++i&lt;7;){D=substr($0,i,1);printf substr(&quot; .'\'':&quot;,(h?D%4:D/4)+1,1)}i=h++'
echo ${1-`date +%H%M%S`}|tr -d :|awk &quot;{$s;$s}&quot;|fold -w 6
</code></pre>
<p><a href=""https://tio.run/##LY7RSsMwGEbv8xQ/JSUNabWRzWliEWkFhcrG5oWCsFXb0KA0I6ms0PbZa5Hdnu/Ad8rC1VPVHY1tYbPePb/l7/t0vd0@pq8JR@chT/cPeZ6kSAU0mFxClLGBZEzfrSTts8T9frrWBjgOdcipPFrdtArO1IML8kGI8MKgvs/8hcguF5TxWRx1UjNGUPVVG8A9jw5l0VbA/Cf/xd8dxqG1EJUghuL0DV6PncRu9AZlfkqITnA9UTSHQAe6AUKAr8TyVlzFEHMR34iYy9KAAtzJ/wOCyAyaavoD"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
","","user100411"
"231696","<h1 id=""pxem-esolang-box-notation-21-bytes-k4we""><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (<a href=""https://github.com/hakatashi/esolang-box#pxem"" rel=""nofollow noreferrer"">esolang-box</a> notation), 21 bytes.</h1>
<p>I originally posted this as a cheating quine, which I noticed it disqualified for the problem.</p>
<pre><code>.fak.-.f.p
.fak.-.f.p
</code></pre>
<p><a href=""https://tio.run/##jVh7V9rKFv@/n2JII5khCckgKhKjUvBazlGq1rqsgK4QgoIhcJKgaOB89d49kyAQeruua2lmfvs5@zEPn4OnX58/25Zl79pOZ69X2C9Qy@o525Zd2rZ7RVrQqb1T0vec3UKv8ClwQqQ6E2MytIJnpOuFguFMxyM/RGfVh8rZmVk1cPg2dtCjE9ojr5fN8pk9Gg4tr0sOta7zonkT10WFwyzNZhPhi8r1V1MQccKH1PFCAScRMWIfuTyPB@pcWJj90ajfPny/rpkFXd9egBffvtdvz34@VL9dXZ1Ur01qNJEgRl8q378@3Jxcfa9/a5Tlt7mATPSG2tksX9UIjUdBfxrP5C@xyN3/kHCGE9cKHRQ8cf7ROITh68jvBmO3H2azltu3AqQ@IkmMqCyIx8JcMiX2lbLZxo@zs@p5zSxzG5jZ6xrBU78XGnyMGF8COPbTCImfCbNMmeUMGCqM3O5hFkL/YrlIyKCe5QaOMJut0rhqLj2dBU4XSYE21d40I4A/75rEFb6jNhPiXMCzELUxwSNIQsVD6ks4obPQR2o1QK2mru63kdRsebm2NHv0nTHKx8q1@@KuqEXliiF2jIahtTw@vwBz9/l8y9M0o1Mx5vG0ec/0UFoQtbFmhKtgSd/EKKWiNkqBe/ubGKUg7aUZS5sY1XdErZ9m3N7E9oHvIY2BZTuF7e5tYpSCcJBe3/YmRim4@JJm3N3EqA4R66Xd1jcxqkPEnLSP@5sYpUVR89OmC5sYpSD9mmbc28RgvxCh0FKMpU2MFsDHtzTj/iZGC@DPezoJ@m8wcMdKL3pnE6MUYhumLRc3MaqDO8N0vPc2MaqDO9206dImVoT0y2kMXFRT2DbwZdIYeC2mMXBmi2FzaYZtK9kuuiRpSt6vWnTKmnJqdKH/Tpl0C@dbpIVbHvubz7WIqLW2W4UW1YAr0PI56Nbpen@XXUPMRFrzdfr2bnXbWiZqGB0XFM6NN2h2DWmG1rxPqKzERQ11tTUdqoekxHzz/lhpg13wADfjIbhQOEbMhaeEJ8ZRPgck7llsHdYz5m6KmsLQDrgAKY5glokCGFW0sdG5BDRmU45BwQdj94Oxq9UWjGtsC0oSh7JviFFs7hgx1bDFcW5UWSBhhYdWzDSA0vKaSH1v57pMW@ivILAkHp92vFiNkyxgG/OcxouzYqk5eFu@/FCZ576Fl6k9N4nHV4hMrQJxmSbJ5ZFdxi2Oz2miif/GrsSeJFn/naCEFkfHSkK0fg@7VsdxTVNoUYFEfCW4OR55/Qc7eOk5fjiUM@KW2mbcLYqJoT3GPKweWxFVWnNGusAtmtCsVZeCSQcLLCGCwqSPYCyUhWNB4WbJPDG4zv8n5pqodXzHeuYTyFsFC@5oNEbeKERDK7Sf@t6jAKzSYrkyJloHU8L4VT5W40mGT3Q@FmH8TzLe4mPggT7kPSj1Rn4SJnDGMEgkGR8NKs0lQn79p1E5PzGlfM96zqv5Xn4sfap@a1yfNK7hKsSJwic89vte2EMJ0PLEhEWYvdpItQmc178C3zalLyen9UYEuZEDx@mSwId7FObDeW/i2WF/5KELXCPR9@az8jcmbbNmwLAty0v6CSaR74QT30MZGXiWlL@WFMAP6ZLy95LC1C0J12sEZlKlK@RbfEWiKxO4uBuqaiTMV0ueCa6SiEcAVZfoKb5S7j50wz3R7XvOoX4k6mV1xbGvsQGRGrw@7nnxyVAmgkDWIBRDm@Z/MPMTz1yxXcHnC4/OZwIkFOLP7qL9EK2YHsPSX5/6roMzEFIyWo0kTCIAZ7MJvgXakuDhunKj1BSXsCxywejGBB7DNV3Hewyf8A0xWFnV4UJbPzBdg0wwrpmwliD08Y1Sl2WFEvKvwNclHNXkYqlc3CHzpZE@WL/Ap2uGH/C5UlXulJ8kOjeF/EMZNaAvLNR17P4QLpiwWOfR8eE7noSCUTVB3LgDH5gvrLLB3eLeQTWbrR7slAjvNAOw6r/CfbG5vdMWYZO4M4tFtZoIx80ILLgUi9EiBKRqmtsFEsUscPcP@97EmbOIM9bqQbEEPIc7e4RBsfGl2Vgz@WninwRV1WLJYNkzLvBd7ufKWu1F9C/w9VoQggXhdjVZL5CTgXJDorqpc4sDk9cxhH/AylYZqGrbvGGJYrN6m4OQhzafD9orofeXpiGimPcnybEaWDH4umyaTW@m@FLhtjLQjizCGZhd8hK5MS8PGG8ie7MUevuj0OHvhd4/3GBS3A11zZVwsZgn6F1zjTQE0jMUC4Kn0QVm9BViB1sQ0LjE/2IVfoGtIxCXLRaJ8m0SEWO5Y@RMqhZy2DrQSY7lDL4rQf0nrW@QdMxtslg8yLkEKgbMCPktOBnyUI1CGd05PlyU@i/9ANQIrFBYUqyjwaF7NNhyy@7WoMzHGh9DjubxDguemXobygFec6ndWZjZRJCWzvUgEmtcH3v35uvqD48rMz6V4qsA3LTglGKPXNX3nunMnsCoKyEJqb3C4viCm8sFzhL2yltxx@HFHB@LERQuL@hnWTZkeXCA2SbMihZCHod/kExhQIzfL4Mtt@u4DjyEIc/QCsn2BA0iy/UDEJdp3BL8pKlzjTKFPok3fTmet@eSwU4q9h8AuCvZiP@XYMI6ZDRkb14A/Q1wGcNuEamN4hrDbIbH8P6uwKO@31WcsD90lLE9nigvwbvRhZc7Wc1B8c8vXBRafRfur8WVALM7dFRi9xh@W5Jm1usz6EKWqRZoca9Y2t4tlpAUWbIp6vOTRi05NSw4@oVP/3f@E61JdNhHgATAgS9wkiTqcAmDHwEFcXqwsDUSFFEn0mxq@Y8Qg/oUJZmbok@//gs"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
<h2 id=""how-it-works-k3oy"">How it works</h2>
<p>In this notation,</p>
<ul>
<li>1st line is main routine.</li>
<li><code>.f</code> is for <code>push its own content from 2nd to final lines</code>.</li>
</ul>
<p><code>ak.-</code> is an idiom to push LF; <code>.p</code> pops each item to print them.</p>
","","user100411"
"231697","<h1><a href=""https://www.officedaytime.com/dcaslj/"" rel=""nofollow noreferrer"">COMET II (&quot;CASLシミュレータ （CASL II 対応）&quot; by Daytime)</a>, 28 bytes.</h1>
<p>The leftmost column shows an address, and one word is two bytes.</p>
<pre><code>0000: 7001 0000 7002 0000
0004: 1210 0012 1220 0014
0008: F000 0002 7120 7110
000C: 1210 006C 1110 0012
0010: 6400 0000 004C 006F
0014: 0002
</code></pre>
<p>The simulator seems to output an LF automatically every time <code>OUT</code> is executed, and it requires you to set a break point to see how it works by step by step.</p>
<h2>Original CASL II assembly program (63 bytes)</h2>
<pre><code>A START
 OUT Z,=2
 LAD GR1,108
 ST GR1,Z
 JUMP A
Z DC 'Lo'
 END
</code></pre>
<h2>Usage example</h2>
<p>Run just for a few steps, as I have no ideas how to scroll back the console.</p>
<p><img src=""https://i.stack.imgur.com/xND1M.jpg"" alt=""Run just for a few steps, as I have no ideas how to scroll back the console."" /></p>
","","user100411"
"232985","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (pxem.mktemp.emb.posixism, <code>BREAK_LOOP_WHEN_INSUFFICIENT=1</code>), filename only: 33 bytes.</h1>
<p>The <code>\0001</code> is an unprintable whose codepoint is 0x01.</p>
<pre><code>[&lt;&gt;+-,.].i.t@.w.m.-\0001.yT.o.d.a.c.a
</code></pre>
<p><a href=""https://tio.run/##pTp7X@LIsv/nU/REFCIkAXRGR4yz6KDDGQWP4p3ZI05@MTQShYRNB8EH96vvrerOG2d2z152ZUjXo6vr1VWdfrLY6M@1d/qt4@psJElrZLqgE23yENDJVKOTW23qMWfhsIlGHFe1vQEl54ABDwH1pz6Fb01aA7pjagUznzJ4Iio58iZTK3Bux5TMnWBE3AetyDiRO6ADwqZ06AwdG1A8lxMcPgVUnblOQOyR5Vs28OXjHY@wMQhJXM8n7mw8JkP4MXTG1LUmlKNcBj61JqrnOxT4D0hb73KJvvlOAPOR2yeN9KYWPbbmz9RF@Y4d1xqT2XRgBVQj9Wq9plV3tK0aueodlT8ixqljU5cB8Ah4B84jxRVNPJeR/1DfI49AoKG27mhAzruX7e/jJ8JmoBCH0TFljFD30fE9dwIiSQyQVDqTZhOLPZBqdWeHrMF6AvhZrzeIxfiahM4luph6fkBOj8zm6alxJAVPU4rT2J47JAf6gD7qXA31g40a2dgQcBuEs9zBW/CQ33mz98WQC6UIU53GTBEE6DGpUnjBofLeUvxQl3LE5arT/m5e9j4b9Wp1CxaBcn85V6@@x9OgLk5/N4@6Fxeto55RC5FOOld/rpHzqx75vXt1Qc6/t87IJfw6apEvrYuWdNw@bXWaZy2jeL1/UFYr2o3maMFv2lybaGq/Wq3WtKee5mkDzdJszSpKR91Or9XpGcDVHlH7wXHvEq9whhIhBIzhBkOyzvp9l8iFaAqZvCL0zqdTov5B1Bbp4zN8iqUfr9c/@v0bpd8vVV@r@D//qyql6x9VdffmtaAUiRSMqIsk1B55pIPKjn0WXDwWg9QONuocbwFuXZOGjvTPJdNf08K933mt4h98pURTilnRLnng/IVEoD9v5gYgk3fnWxMJrbVAorRcciHUt5wajscaZOCll3ULSAtYDJnbRLXFpAPPpZJwVuHoK776@kpekIsAl5RSuHYePUfhw8Dxg8kUHPmld3b@uX2xh84pQLbFKEwsMGRcQalYVEJgQqrDVzjYaJT0NxC0BLy5Coapxa91PZ660aDMssMHnp@4tkGEQrSKUsLIGZJrovqEr3/mQzR6E3IDsYrDdm64QSKTxh8PordJXKIGZLBN1A6Br8cMWYJOx4xmiEtThtSqR6bOoEIDZ0IrU3s6qzyyZ7AjJERFeOFb0834TFlw4IN1GKnW6lvb7z/s7H4kxeu@u3lTzOFxr9byxJYzJqpLtus5AIM8XmT6D22zX9L6L7v9ZV8p6P2anmdrzR9QJstQ67Xtne3drQ/bu6SYQXmxykah2li2Op9fuIsSa5nCgCAQP5KFI9PiS4LCUK2lQlVppMjQxOCbhmzd2gM6vBs59w/jietN//BZMHucL56em4dHn1vHJ1/a//p6etbpnv/74rJ39T/fvv/@n0RdppxiempAoN4Fo1LEPTOj55cco9Zw9o1ateGUy8pLZp0Ivwf4PcC3G/cAz4CTAGWzWxb48RwVGCzxFSqbp0qllp4zIiJyWsxl@DNWoxKlAPHZIwdxJOoFPo@Me1FekCgB/gITKoyZ75JqFP@YRkLXxhQni2yxR4bgSeAzgQfbmkt98GNiEQR5vuU/8Qwox@kv4VvDR0VaSpI9ppZrghhciJLQLc89Kim81CDRkMIniTu8NSXFIml9b/fIl6tz0u70yL@v4OG8fd4izdOLM9JrXZwhrj8h6hAWGLGVYwbq36LnebpQA/kiDriHizUrcri3orcy23emgcRZZ1fy1/NIUIaRg4OUlGR/vwjJ/bh9UpQOWyftDlfG1WXLPDwyqtwRDi9aza/mabd7bn770uqY7c7l1fFx@6iNm3KNozQPuxc98/Ci@xXgiJkZb5@etk6ap0DYa520LhC2lMSkIBGUj2Cx0ArpfaUWbpLprFSLs9JKMkL/yuSjdBpaI55/Z7nOMyVjBzZvqAkhLqCSEECf2t4dhz5aYwd96wFqQilJOp@7PWP7g8g2iZrgM2ZAFSoKd6bJ4LpWq98Y@GO3emPIUzkLqwnYzkeAeTlYNYTtAszNwqrvQ9gWwJwM7COAZDM79FFgf9gBkJ2bJeS0i5xYDrYbwj4A7DEnQbiqHVzVMAcLV/UBV0VzPLdDnkAv@zlYKOcuyjnPwuqhNnZRG4scLJxvF@d7ysFCOT@inM9ZteyEYqLGrJwoH0KWIK4c5JYXirmDYk5ysFDMDyjmIAPbRg2Xs0M4s5oZ2kKsd9khVH8hO4RTr8dDwh/5E8/QkTtCm/boeDNmhF5@zf3zJiKLRstlMY6bpRSVKqWY2AD2GxuFKpY1MHl688Gdh9OqRr3Bf4hvVVVWt5KhHAXb@qDvypW3hYo3HlxnoRqPL@PV4XaelFyln877dyddFqOsMB859oh4Q4J7OGw5lMFeMrECGMRm9pPAotqdRuZksVjgTuNFP@cCCkWeJUix0ePEFV7KEaZbelMn2IQ5d9DVUjKc@QDxBSHzSBNUPMDmGKhvfcw6xEqlHZeyYPxoVEXi0X9co5g3BT3SBp8MBQWLCty0Sbk6Gi5dBImj6D@shBxsHs5gVNNG5oRyU27wTamaMUia7GCVaihb6zaqPRFN4Kpq2uCxUBk71xqxYazBgIytWyhq@bMYbJ@1e81eu3NCTrq9LrmEh9YZ7EKX5FsbGtvj7ulp9xuCm9@@kstO@/y81dsTpNxvGkLcNbEGzt6A3LJYyMoLfC8jIJbSv8bQNC2NzGHw1POdsDLx8NuFEmbhsAA7Vs5L0CxTS3JcJ3Cs8fgJyi4xAu4BBQ38jbw58Ak8FcjDVXAvRXeChp5zhQAFfyJjz4PCiOkFvaLnMLnjIWqCRzjmbyGmNbcW8ydLYNueC3xnWXymV37bTFgjgRUR3PrUelhlzwmiGZp7qAzc6Mc0oLDUgTMcwioh5MMab410D3vfoggQbHDpoME56iMKidT@K2wjy0t@wCLUC25F8cxJnBtBbU6mlh8Iz3o7gIRvlsuRL0K9XILMW8H/OEslE0xEFvPIYr5MWL3NWlUzrFEvwPu3v889jghQBdaTLhtjxRse7jDUrDWFjh444DgolElRVyUkE0xjuZiuL/MOrsewgg6eHj3eptYXJdU0n@mMjUppWmWVEjq7aUGHPAs13juoZYOnkqJMZwGeo5SmHnT/ggjwvIIOMv0FkruChEeNdzSP5xSEeHj0hVwSiJlAItIEaOfZA2KQYcxyGAiMYI8FHfZQ6jOajA0LeqqdwwADxzf5DoaNHZ8hHL12bmIyWtDBY3wP15fi5r8hX6qpEzqIsSOfRFNDUJkwz6Akb8iK8oajc6eIx2MXjXhZ/ZJgh@15lmG/FnEM/fstpnnXj/g2C3oYy5/kRph/aAQMsssNvBG1pjlLTzgOB4QKGfreJHyOkAYFnaeqWDPld4V1VagGbVFSDoy6YvmwYU3AL2yuJY4cByBwHIBpedobeh6EA4@0UnwIV@TFUZiXcLNJRRhEFQ9H2OoTfC5RHIwrTZRi3Xp@YKKiBR9FdOG8iX1JTTtzbTxdh3LAcUPMFxZY9sO1MzCgPq2KqUWnlT7tS3gsYyYpr@OsKize5JkhVNUQzMtlZwDMpfSZRRWcnHHHThUGaJNIHrVWAS/PCRQdLybyxFMNKG4axER7Irl689/NV@bzgeKW2caXH4dCN5waavAmXJJgu4LcLU4p4zPSYpEUR442XdAiaWrwH/GINn@@Z552ry20Z22uWURbEO2JWA8Uj6/n8Ec1KzovEYcYhYWcXfoiXrQ4OF3@pEk/vuoc9drdzmVRik3F/aM0YXep5pnA46uMLPAIRDQM4gwYu25YdKSYG@IwgkpOjYGqyMhiBHL9hFVIFUqPAV3QQYQCHuY609lYvMyJ5QjD8yU8aYlngLJymWAJg64gpTC44Uwncd5KjFUu3ximk8bFHJBnVlHVmCLNOHgTOUZVa2nkKIObTsW8F5pFXzPR2UzwtohKr8Nj6mjOvDdi1qYTV7vpMeOtudW3kHNww7wPiw1uQwwG@GcyAzcNA2SODYdYIX9BAikwFcrJ6kRejHThDNC3eXClNJDkzwgvCr@sUjkO2isGcxuBZI4HX/coHuOv7Hityss5GLfG0Plw4O0TSM7oHzPq2jSE3s6wiXq6peLFo2Xzd3JAjG83ZvjiMe0wYnNHGVLHR3IfPusetiGmI2UcLN7y0bq2oILcC3ZNepmI6/Z7pYFtGpTQkYmdTUOtJWUf9wsbdnbT3o/Oc0EWeEz5RcQuPIvlE1dqSnl7l7O3GJtx/TQvj9rtyMixyFH9YvqxsLwvN2cugG5nw8T/fCMevE7a6CiBvgGKjOsnKwL2WBiNwWdgXNmHxjCLHC4/RZoSls8RWyQ9ZTZ4Hcamlk05Vsip9HEfcDY2TDzz3lZeXyHejK36kvvLncc3ZsLwlBPyk7BzSV4fyJUN0DcgZTQWGxltV0GN@0kgNzCUk7LwHVh0YyMlUSNaMV8oZ2GEZ@LcUwxje0uIBw6SaqXDkYgiOeVJT5fRNKx1e/f19f3OfuTAYvzNY9PUBifyvqyZe/zIwXJJuGD4F7xNjtsK3psmdGtkMHOhWXKGYL87SOM@tg@J0RTu67zACUbgkozgm3gvSHPofm3@TsCjWBaQsXxj9VB/tdlfI/hGivdqA@fOCXgxhT6MMjRiY23vJn7xfqeRMV3a831ooAlMrmJYxZOsipVxXP5K1B046DfWOLexpguvKPSicu6THJkjsoW1RybgRBjI2rwClQD8PVVQgdpzaJDUG7qISibm2GIBr6OJnGJhIU0qYpJqm39XTN7fVkxG8VHIl7Ay@HfssnwID1jTThbV1Cu2everA/9c6uC78Lvw/Hsp5Vwurq336/9wGrFMg08Tj4k1ZwdTy1zISmxlTr4fUryB@5THPfg57nMe952RRg635vnoiTjEmsAeFp6LOHimGBlyj59NjSDExpSRsTNx8B4LdG93FI8hwzhmFeBE2ZTa4mwI8v2xT@nh5ecGqS52jsUHCzg8dplYC8IbbIDtVsUHYbCrSOHJCk7q8MMCMTWB@nBMwV3IabdzwsOeDpLZw3NRoDgwyFad3EJ44l2Zs@bvhy3YqL7iG6KLS9Lrks@to/bnFgEL9r60LnAEQOTwKBVMSVNlelOeje8r5kMcU@JlUxLMTmhZqKdWTOzsRyVZiPwAyQGTAtRHgG8@5M8qAcSi3YJX4OusL6/b8MfIK75E6vff9fsF@GdTh4FbW@YCopz3icfdGzA1gOOd8SEj1f0buRki25tiSCfLD99cJulZ1LsPyk@jB1gY@ApBIXGjz1VSDvv8Rh713Qrq5s9QVTlzeJshUnNEgo5X0fvV3EF/dja1llAtM1P@r3xdWL/JTPpTU0fW3gSAkZtwRcHP1PfUgfPoMPA2eYVHzmN@5TQpmdMrE/oqyJ9MRzfv90xnHVgquR1tKcUd2k86uHan3StKnQvDqL0k1wxMKI8HZngABJUknowvAevAqMOmlwZG8aJTd2DrSvIOAJp@JX1UvxQdpjhSKpfTR0789YA4fF9KKBB2u0XvNgAmhHkz34b2lje@pT1sILeU9HWx8HV9rm3meED0xnWnl@ra2qa@JFsHeOSA6SecKnpzPwhfZ4cv7HkGHeKVvfGTVArfkoijLWgToA/9f92pyd2meRQXavK3aVK79H9zg@and2f@@kX16pWZNy7LvHVNJntL5pf3Y8TNmNWLMeJKjLhdoA3zr@Djq2D/8EV8fO6BLhtOJKwbXUITFes/5K5gSg41xzupmMnEuRtBe0nvwNf4rVRe3UtcRZlbGpwQHJrHDzgftMsgD6pjYgV4yw8VI3pYbGpDHZ/h3YzoUmXz4sQ8a37PBAqEEF/3dvXjB0Um0d2KM92oN85UYxffWoh@EXd9OdQ5NKxS2EUyAsnh4Cw0FmswfNUhvTADAUspsSPjbwgWlg/Vutomz5H9nv@s/B8"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
<p>Accepts one character from stdin as an input. Outputs a T for truthy, nothing for falsey.</p>
<hr />
<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (pxem.mktemp.emb.posixism, <code>BREAK_LOOP_WHEN_INSUFFICIENT=0</code>), filename only: 42 bytes.</h1>
<p>The <code>\0001</code> is an unprintable whose codepoint is 0x01.</p>
<pre><code>[&lt;&gt;+-,.].i.t@.w.c.c.z.d.a.m.-\0001.yT.o.d.a@.a
</code></pre>
<p><a href=""https://tio.run/##pTp7X9rKtv/nU4wRhQhJAG21YmzRouVUwaN42x6x@cUwSBQSdiYIPrhffd@1ZvLWdu@zr1ZKZj1mzXrNWjN5tNjoz9UV/cZxdTaSpFUyXdCJNrkP6GSq0cmNNvWYs3DYRCOOq9regJIzwICHgPpTn8KnJq0C3RG1gplPGTwRlRx6k6kVODdjSuZOMCLuvVZknMgd0AFhUzp0ho4NKJ7LCQ4eA6rOXCcg9sjyLRv48vGOR9gYhCSu5xN3Nh6TIXwZOmPqWhPKUS4Cn1oT1fMdCvwHpK13uUTffCeA@cjNo0Z6U4seWfMn6qJ8R45rjclsOrACqpF6tV7TqtvaZo1c9g7LHxDjxLGpywB4CLwD54Hiiiaey8h/qO@RByDQUFu3NCBn3Yv29/EjYTNQiMPomDJGqPvg@J47AZEkBkgqnUmzicXuSbW6vU1WYT0BfK3XG8RifE1C5xJdTD0/ICeHZvPkxDiUgscpxWlszx2SfX1AH3Suhvr@eo2srwu4DcJZ7uAteMjvrNn7YsiFUoSpTmOmCAL0mFQpPONQeXcpvqhLOeJy2Wl/Ny96n416tboJi0C5v5ypl9/jaVAXJz/Mw@75eeuwZ9RCpOPO5Z@r5OyyR350L8/J2ffWKbmAb4ct8qV13pKO2ietTvO0ZRSv9vbLakW71hwt@KTNNRt@n7SBZmkTTe1Xq9Wa9tjTPBz5pFlF6bDb6bU6PQPY2yNq3zvubeIezlAihIBV3GBI1li/7xK5EM0lkxeE3vp0StQ/iNoifXyGn2Lp58vVz37/Wun3S9WXKv7jf1WldPWzqu5cvxSUIpGCEXWRhNojj3RQ67Hzgq/HYpDa/nqd4y3Av2vS0JH@uWT6S1q4d9svVfyDj5RoSjEr2gWPoL@QCPTnzdwAZPJufWsiodkWSJSWSy6E@pZTw/FYgwy89LJuAGkBiyFzm6i2mHTguVQSXis8/pXTvryQZ@QiwCWlFK6dh9Fh@DBw/GAyBY9@7p2efW6f76KXCpBtMQoTCwwZV1AqFpUQmJDq8BEONhol/Q0ELQFvvAbD1OLbmh5P3WhQZtnhA09UXNsgQiFaRSlh5AzJFVF9wtc/8yEsvQm5hqDFYTs33CCRSeMfD8K4SVyiBmSwRdQOgY@HDFmCTseMZohLU4bUqkemzqBCA2dCK1N7Oqs8sCewI2RGRXjhW9PN@ExZcOCDdRip1uqbW@/eb@98IMWrvrtxXczhca/W8sSWMyaqS7bqOQCDhF5k@k9to1/S@s87/WVfKej9mp5na83vUSbLUOu1re2tnc33WzukmEF5tspGodpYtjqfn7mLEmuZwoAgEF@ShSPT4nOCwlCtpUJVaaTI0MTgm4Zs3dgDOrwdOXf344nrTf/wWTB7mC8en5oHh59bR8df2v/6enLa6Z79@/yid/k/377/@E@iLlNOMT0xIFBvg1Ep4p6Z0fNLjlFrOHtGrdpwymXlObNOhN8B/A7gW407gGfASYCy2Q0L/HiOCgyW@AqVjROlUkvPGREROS3mMvwaq1GJUoD42SX7cSTqBT6PjJtSXpAoAf4GE0qNme@SahT/mEZC18YUJ4tssUuG4EngM4EH@5tLffBjYhEEeb7lP/IMKMfpL@Fbw0dFWkqSPaaWa4IYXIiS0C3PPSopPNcg0ZDCR4k7vDUlxSJpfW/3yJfLM9Lu9Mi/L@HhrH3WIs2T81PSa52fIq4/IeoQFhixlWMG6t@i53m6UAP5Ig64mYs1K3K4yaK3Mtt3poHEWWdX8tfzSFCPkf39lJRkb68Iyf2ofVyUDlrH7Q5XxuVFyzw4NKrcEQ7OW82v5km3e2Z@@9LqmO3OxeXRUfuwjZuyQGkedM975sF59yvAERN8Mxlvn5y0jpsnQNhrHbfOEbaUxKQgEdSRYLHQCul9pRZukumsVIuz0qtkhP6VyUfpNLRKPP/Wcp0nSsYObN5QHEJcQCUhgD61vVsOfbDGDvrWPRSHUpJ0Pnd7xtZ7kW0SNcHPmAFVqAXcmSaDq1qtfm3gl53qtSFP5SysJmDbHwDm5WDVELYDMDcLq74LYZsAczKwDwCSzezQB4H9fhtAdm6WkNMOcmI52E4Iew@wh5wE4aq2cVXDHCxc1XtcFc3x3Ap5Ar3s52ChnDso5zwLq4fa2EFtLHKwcL4dnO8xBwvl/IByPmXVsh2KiRqzcqK8D1mCuHKQW14o5jaKOcnBQjHfo5iDDGwLNVzODuHMamZoE7FWskOo/kJ2CKdei4eEP/InnqEjd4R@7cHxZswIvfyK@@d1RBaNlstiHDdLKSpVSjGxAezX1wtVLGtg8vTmgzsPp1WNeoN/EZ@qqrzeSoZyFGxrg74rV94WKt54cJ2Fajy@jFeH23lScpV@Oe/fnXRZjLLCfOTYI@INCe7hsOVQBnvJxApgELvajwKLarcamZPFYoE7jRd9nQsoFHmWIMWOjxNXeClHmG7pTZ1gN@bcQntLyXDmA8QXhMwjTVDxALtkoL7xMesQK5V2XMqC8YNRFYlH/3mFYl4X9EgbfDIUFCwqcNMm5epouHQRJI6i/7QScrB5OINRTRuZE8pNucE3pWrGIGmy/ddUQ9las1HtiWgCV1XTBo@Fyti51ogNYw0GZGzdQFHLn8Vg@7Tda/banWNy3O11yQU8tE5hF7og39rQ4R51T0663xDc/PaVXHTaZ2et3q4g5X7TEOKuijVw9gbklsVCVp7hcxkBsZT@PYamaWlkDoOnnu@ElYmHny6UMAuHBdixcl6CZplakuM6gWONx49QdokRcA8oaOBv5M2BT@CpQB6ugnspuhN09pwrBCj4Exl7HhRGTC/oFT2HyR0PURM8wjE/hZjW3FrMHy2BbXsu8J1l8Zle@bSRsEYCKyK48al1/5o9J4hmaO6iMnCjH9OAwlIHznAIq4SQD2u8VdI96H2LIkCwwaWDBueojygkUvuvsI0sL/lJi1AvuBXFwydxgAS1OZlafiA86@0AEr5ZLke@CPVyCTJvBX85SyUTTEQW88hivkxYvc1aVTOsUS/A@9Pf5x5HBKgC60mXjbHiDU95GGrWmkJHDxxwHBTKpKirEpIJprFcTNeXeQfXY1hBB0@PHm9S64uSaprPdMZGpTSt8poSOrtpQYc8CzXeCtSywWNJUaazAM9RSlMPun9BBHheQQeZ/gLJfYWEZ463NI/nFIR4eAaGXBKImUAi0gRo59kDYpBhzHIYCIxgDwUd9lDqM5qMDQt6qp3DAAPHN/kOho0dnyEcvXKuYzJa0MFjfA/Xl@LmvyFfqqkTOoixI59EU0NQmTDPoCSvy4ryhqNzp4jHYxeNeFn9kmCH7XmWYb8WcQz9@y2medeP@DYLehjLH@VGmH9oBAyyyw28EbWmOUtPOA4HhAoZ@t4kfI6QBgWdp6pYM@WVwpoqVIO2KCn7Rl2xfNiwJuAXNtcSR44DEDgOwLQ87Q09D8KBR1opPoQr8uIozEu42aQiDKKKhyNs9Qk@lygOxldNlGLdeH5goqIFH0V04byJfU5NO3NtPGaHcsBxQ8xnFlj2/ZUzMKA@rYqpRaeVPu1LeCxjJimv46wqLN7kmSFU1RDMy2VnAMyl9JlFFZycccdOFQZok0getVYBL88JFB0vJvLEUw0obhrERHsiuXr9381X5vOB4pbZxpcfh0I3nBpq8CZckmC7gtwtTinjM9JikRRHjjZd0CJpavBLPKLNn@6Yp91pC@1Jm2sW0RZEeyTWPcXT6zn8Uc2KzkvEIUZhIWeXvogXLQ5Ol79o0o8uO4e9drdzUZRiU3H/KE3Ybap5JvD4IiMLPAIRDYM4A8auGxYdKeaaOIygklNjoCoyshiBXD9hFVKF0mNAF3QQoYCHuc50Nha3OrEcYXg@hyct8QxQVi4TLGHQV0gpDG4400mctxJjlcvXhumkcTEH5JlVVDWmSDMO3kSOUdVaGjnK4KZTMe@EZtHXTHQ2E7wtotLr8Jg6mjPvjJi16cTVbnrMeGtu9S3kHNww78Jig9sQgwH@m8zATcMAmWPDIVbIL0ggBaZCOVmdyIuRLpwB@jYPrpQGkvwZ4UXhl1Uqx0F7xWBuI5DM8eDjDsVj/O6O16q8nINxawydDwfePILkjP4xo65NQ@jNDJuoxxsqbiAtm1/OATHebszwBjLtMGJzRxlSx0dyH37WPGxDTEfKOFi85aN1bUEFuRfsmvQyEdetd0oD2zQooSMTOxuGWkvKPu4XNuzspr0XneeCLPCY8ouIXXgWyyeu1JTy1g5nbzE24/ppXhy225GRY5Gj@sX0Y2F5X27OXADdzIaJ//lGPHiVtNFRAn0DFBnXT1YE7LEwGoPPwLiyB41hFjlcfoo0JSyfI7ZIesps8DqMTS2bcqyQU@nDHuCsr5t45r2lvLxAvBmb9SX3l1uPb8yE4Skn5Cdh55K8NpAr66BvQMpoLDYy2q6CGveTQG5gKCdl4QpYdH09JVEjWjFfKGdhhGfi3FMMY2tTiAcOkmqlw5GIIjnlSU@X0TSsdWvn5eXd9l7kwGL8zWPT1AYn8r6smbv8yMFySbhg@B@8TY7bCt6bJnSrZDBzoVlyhmC/W0jjPrYPidEU7uu8wAlG4JKM4JW8F6Q5dL82fxDwKJYFZCzfeH2o/7rZXyV4I8V7tYFz6wS8mEIfRhkasbG2dhK/eLfdyJgu7fk@NNAEJlcxrOJJXouVcVx@JeoOHPQba5zbWNOFVxR6UTn3UY7MEdnC2iUTcCIMZG1egUoA/h4rqEDtKTRI6oYuopKJObZYwOtoIqdYWEiTipik2uafFZP3txWTUXwU8iWsDP4ZuywfwgPWtJNFNfUrW6387sA/lzr4LrwSnn8vpZzLxbX1Xv0fTiOWafBp4jGx5uxgapkLWYmtzMn3Qoo3cB/zuPu/xn3K464YaeRwa56PHolDrAnsYeG5iINnipEhd/nZ1AhCbEwZGTsTB19oge7tluIxZBjHrAKcKJtSW5wNQb4/8ik9uPjcINXF9pH4wQIOj10m1oLwBhtgO1XxgzDYVaTwZAUndfhhgZiaQH04puAu5KTbOeZhTwfJ7OG5KFDsG2SzTm4gPPGlmdPmj4MWbFRf8Ybo/IL0uuRz67D9uUXAgr0vrXMcARA5OEwFU9JUmd6UZ@O7inkfx5S4bEqC2QktC/XUKxM7e1FJFiLfQ3LApAD1EeCb9/mzSgCxaLfgFfga68trNvwx8oKXSP3@Sr9fgP82dBi4sWUuIMp5l3jcnQFTAzjeGe8zUt29kZshsr0phnSy/PDmMknPot69V34ZPcDCwCsEhcSNPldJOezzG3nUlVeoG79CVeXM4W2GSM0RCTpeRe9Vcwf92dnUWkK1zEz5v/JVYe06M@kvTR1ZewMARm7CVwp@or6nDpwHh4G3ya945Dzmd06Tkjm9MqGvgvzRdHTzbtd01oClktvRllLcof2ig2t32r2i1Dk3jNpz8pqBCeXxwAwPgKCSxJPxJWDtG3XY9NLAKF506g5sXUnuAKDpV9JH9UvRYYojpXI5feTErwfE4ftSQoGw2y16NwEwIcyb@Ta0t7zxLe1iA7mppN8bC6/rc20zxwOiN153eq6urm7oS7K5j0cOmH7CqaKb@0F4nR1e2PMMOsR398aPUim8JRFHW9AmQB/6/3qnJvc2zYN4oSb/Nk1ql/5v3qD55bszf31R/fqVmTdelnnrNZnsWzK/fT9GvBnz@sUY8UqMeLtAG@av4ONXwf7hRXx87oEuG04krBu9hCYq1n/IXcGUHGqOd1Ixk4lzO4L2kt6Cr/HXU3l1L3EVZd7S4ITg0Dx@wPmgXQZ5UB0TK8C3/FAxoofFpjbU8Sm@mxG9Xdk8PzZPm98zgQIhxNe9Vf3wXpFJ9G7FqW7UG6eqsYO3FqJfxF1fDnUODasUdpGMQHLYPw2NxRoMrzqkZ2YgYCkldmT8hmBh@VCtq23yFNnv6c/y/wE"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
<p>Accepts one character from stdin as an input. Outputs a T for truthy, nothing for falsey.</p>
","","user100411"
"233000","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, filename only: 11 bytes.</h1>
<p>Uses reference implementation feature: doesn't break the loop of .w and .a when stack is empty.</p>
<pre><code>L.o.wol.p.a
</code></pre>
<p>OR</p>
<pre><code>L.z.p12ol.a
</code></pre>
<p><a href=""https://tio.run/##pTp7X@LIsv/zKXoiChGSgDqjI8ZZdNDhjIJH8c7sESe/SBqJQsKmg@KD@9X3VnV3njize/ayK0O6nl1VXV3V6Sebjf5ceWfcuJ7BRoXCCpnO6USf3Id0MtXp5Eaf@sydu2yiE9fTBr5DyRlgwENIg2lA4VsvrADdEbXDWUAZPBGNHPqTqR26N2NKHt1wRLx7vcQ4kedQh7ApHbpDdwAovscJDp5Cqs08NySDkR3YA@DLxzs@YWNQknh@QLzZeEyG8GPojqlnTyhHuQgDak80P3Ap8HdI2@hyjb4FbgjyyM2TTnpTmx7Zj8/UQ/2OXM8ek9nUsUOqk43aRl2vbeubdXLZO6x8RIwTd0A9BsBD4B26DxRnNPE9Rv5DA588AIGO1rqlITnrXrS/j58Im4FBXEbHlDFCvQc38L0JqFRggKTRWWE2sdk9qdW2t8kKzCeEnxsbDWIzPidh8wKdT/0gJCeHVvPkxDwshE9TimIGvjck@4ZDHwxuho39tTpZWxPwAShne85bcMnvrNn7YirFcoSpTWOmCAL0mFQtvuBQZXchfmgLJeJy2Wl/ty56n82NWm0TJoF6fznTLr/HYtAWJ79bh93z89Zhz6xLpOPO5Z8r5OyyR37vXp6Ts@@tU3IBvw5b5EvrvFU4ap@0Os3Tllk60X390R/rU90uFQ67nV6r0zPR1N2D3jeCCru3xPfIke9DjADTwYgO7l3vNgkKd1gghIAvvHBIVlm/7xGlGElQyCtCbwM6JdofRGuRPj7Dp1T@8Xr1o9@/Vvv9cu21hv/zv5pavvpR03auX4tqiRTCEfWQhA5GPumgreOQhQiP1SD1/bUNjjeHqK4Xhm7hn2tmvKaVe7/9WsM/@Eqpppayql3wdfMXGoH9/JkXgk7@bWBPCuisORKl9VKK0hFKajgeaxDHT0/rBpDmMBnyOCDaQAh1fI8WRKyKOF8K1ddX8oJcBLisluXc@eI5lA@OG4STKcTxS@/07HP7fBdjU4AGNqMgWGAoOINyqaRKYEJqwJccbDTKxhsIegJeXwaDaPFr1YhFNxqU2QP5wNMTtzaoUIxmUU4YuUNyRbSA8PnPAliM/oRcw1LF4UFuuEEil8YfHxZvk3hEC4mzRbQOga@HDFmCTseMZojLU4bUmk@mrlOloTuh1elgOqs@sGfwI@RDVUThW@JmXFIWHAbgHUZq9Y3Nrfcftnc@ktJV31u/LuXweFTreWLbHRPNI1sbOQCDNF5ixg99vV/W@y87/UVfLRr9upFnaz/eo062qW3Ut7a3djY/bO2QUgblxa6YxVpj0ep8fuEhSuxFCgMWgfiRTByZll4SFIZmLRdraiNFhi6G2DQV@2bg0OHtyL27H088f/pHwMLZw@P86bl5cPi5dXT8pf2vryenne7Zv88vepf/8@377/9JzGUpKaYnJizU23BUjrhnJPpB2TXrDXfPrNcabqWivmTmifA7gN8BfKtxB/AMOFmgbHbDwiCWUYXBMp@hun6iVutpmRERUdJqLuTP2IxqlALEZ5fsxyvRKHI5Cm5FeUWiBPgLTCgwZoFHatH6xzQiQxtTnCKyxS4ZQiRBzIQ@7GoeDSCOiU0Q5Ad28MQzoBKnv4RvHR/VwqJQGIyp7VmgBleiLGzLc49Gii91SDSk@KnAA96eklKJtL63e@TL5Rlpd3rk35fwcNY@a5Hmyfkp6bXOTxE3mBBtCBOM2CoxA@1v0fM8XayDfhEH3MLFnFVFbq0YrWwQuNOwwFlnZ/LXcgpQhZH9/ZSWZG@vBMn9qH1cKhy0jtsdbozLi5Z1cGjWeCAcnLeaX62TbvfM@val1bHanYvLo6P2YRt3a4HSPOie96yD8@5XgCMmxGYy3j45aR03T4Cw1zpunSNsURBCQSOoHsFj0gvpfaUuN8l0VqrHWWkpGWF8ZfJROg2tED@4tT33mZKxC5s3lISwLqCSEMCADvxbDn2wxy7G1j2UhIUk6Xzu9sytDyLbJGaCz5gBlbQC7kwT56pe37g28cdO7dpUpkoWVhew7Y8A83OwmoTtAMzLwmrvJWwTYG4G9hFAipUd@iiwP2wDaJCTIjntICeWg@1I2AeAPeQ0kLPaxlkNczA5qw84K5rjuSV5Ar0S5GBSzx3U8zEL25DW2EFrzHMwKW8H5T3lYFLPj6jnc9Ys21JNtJidU@WDZAnqKmFuelLNbVRzkoNJNT@gmk4GtoUWrmSHULKWGdpErHfZITR/MTuEolfjIRGP/Iln6CgcoUt7cP0ZM2WUX/H4vI7IotFKRYzjZlmISpVyTGwC@7W1Yg3LGhCe3nxw5@G0mrnR4D/Et6apy1vJUIkW26rT95Tq20rFGw/Os1iLxxfx7HA7T0qu8k/l/l2hi1KUFR5H7mBE/CHBPRy2HMpgL5nYIQxiL/tJYFH9ViePZD6f407jRz8fBRSKPFuQYp/Hiau8lCPMsI2mQbAHc2@hqaVkOAsAEghC5pMmmNjB3hiobwLMOsROpR2PsnD8YNZE4jF@XKGa10UjsgYXhoqCRwVu2qXcHA2PzsMkUIwfdkIOPpcSzFrayZxQaSoNvinVMg5Jk@0vUw0Ve3WAZk9UE7ialnZ4rFTGz/VG7BjbccjYvoGilj@LwfZpu9fstTvH5Ljb65ILeGidwi50Qb61oa896p6cdL8huPntK7notM/OWr1dQcrjpiHUXRFz4OxNyC3zuaK@wPciAmIp/WsMXdfTyBwGT73AlZWJj98elDBzl4XYsXJegmaRmpLruaFrj8dPUHaJEQgPKGjgb@Q/Ap/Q14BczoJHKYYT9POcKyxQiCcy9n0ojJhRNKpGDpMHHqImeIRj/iYx7Ud7/vhkC2zouYHvLIvPjOpv6wlrJLAjgpuA2vfL7DlBJKG5i8bAjX5MQwpTddzhEGYJS17WeLLjlytAsMGpgwUf0R7Rkkjtv8I3irLg5yvCvBBWFI@cxLER1OZkagehiKy3F5CIzUolikWol8uQeav4H2epZhYTUYQcRcjLLKu3WWtahjXaBXj/9ve5xysCTIH1pMfGWPHKsx2GlrWn0NEDBxwHg7JC1FUJzQTTWC9mGIt8gBsxrGhApEePN6n5RUk1zWc6Y6NymlZdpoTOblo0IM9CjfcOatnwqayq01mI5yjlqQ/dvyACPL9ogE5/geQtIeFJ4y3N47lFoR6efCGXBGIlkIg0AQ7y7AExzDBmOQwERrCHogF7KA0YTcaGRSPVzuECg8C3@A6GjR2XIEev3OuYjBYNiJjAx/mluAVv6Jdq6oQNYuwoJtHVsKgskOOUlTVFVd8IdB4U8XgcohEvu18W7LA9zzLs1yOOMr7fYpoP/Yhvs2jItfxJacj8QyNgmJ1u6I@oPc15esJxOEAaZBj4E/kcITlFg6eq2DKVd8VVTZgGfVFW980N1Q5gw5pAXAy4lThyvACBowOu5WlvyE8k@Uorx4dwJV4cybyEm01qhcGq4ssRtvoEn2sUL8alJkq1b/wgtNDQgo8qunDexL6kxM68AR6uQzngehLzhYX24P7KdUyoT2tCtOi00qd9CY9FzCQVdZxVlcWbPDOFqRqCeaXiOsC8kD6zqEGQMx7YqcIAfRLpo9WrEOU5haLjxUSfWJRDcdMgFvoTybXr/05ehcsDwy2yjS8/DoVuODXU4E14oQDbFeRucUoZn5GWSqQ0cvXpnJZIU4f/iE/0x@c75ut3@lx/1h91m@hzoj8R@576ugMDjk51OzovEYcYxbmSnfo8nrQ4OF38pEk/uuwc9trdzkWpELuKx0d5wm5TzTOBx1cFWeARiGgYxBkwdt0w6cgw18RlBI2cGgNTkZHNCOT6CauSGpQeDp1TJ0KBCPPc6Wws3uXEesjl@SJPWmIJUFYuEizh0CWkFAZ3nOUmwVuNsSqVa9Ny07iYA/LMqpoWU6QZh28ix6haPY0cZXDLrVp3wrIYaxYGmwXRFlEZG/CYOpqz7syYteXG1W56zHxLtvYWcg5uWney2OA@xMUA/0xmEKZygTxiwyFmyF@QQApMLeVkdiIvRrZwHYxtvrhSFkjyZ4QXLb@sUTkO@isGcx@BZq4PX3eoHuNv7Hityss5GLfH0Plw4M0TaM7oHzPqDaiE3sywiXq6oeK9oz3gr@SAGN9uzPC9YzpgxOaOOqSOj5Q@fFZ9bEMst5AJsHjLR@8OBBXkXvBr0stEXLfeqw1s06CEjlzsrptaPSn7eFwMYGe3BnvReS7oAo@puIjYybNYLrhaVytbO5y9zdiM26d5cdhuR06OVY7qFyuIleV9uTXzAHQzGybxF5jx4FXSRkcJ9A1Q5NwgmRGwx8JoDDED4@oeNIZZZDn9FGlKWS4j9khaZHbxuoxN7QHlWJJT@eMe4KytWXjmvaW@vsJ6Mzc3Fjxebn2@MROGp5yQn4Sfy8qqo1TXwN6AlLFY7GT0XRUtHiQLuYFLOSkL34FH19ZSGjWiGfOJchamPBPnkWKaW5tCPQiQVCstRyKK5JQnLS5jaZjr1s7r6/vtvSiAxfibx6apDU7kfUW3dvmRg@0ROWH4F6JNidsK3psmdCvEmXnQLLlD8N8tpPEA24fEaSqPdV7ghCMISUbwRbwfpjl0vzZ/JxBRLAvIeL6xfKi/3OyvEHwjxXs1x711Q15MYQyjDo3YWVs7SVy8325kXJeO/AAaaALCNVxWsZBltTKBy1@Jeo6LcWOPcxtruvCKll5Uzn1SIndEvrB3yQSCCBey/liFSgD@nqpoQP1ZOiT1hi6iUog1tlnI62iipFjYSJNaMUm1zb@rFu9vqxaj@Cj0S1iZ/DsOWT6EB6zpIItq6iVfvfvVgX8udfBd@J08/14UciEX19Z7G/9QjJimycXEY2LO2cHUNOeKGnuZk@9Jijdwn/K4@z/Hfc7jvjPTyHJrfhw9EZfYE9jD5LmIi2eKkSN3@dnUCJbYmDIydicuXmOB7u2W4jGkXMesCpwom9KBOBuCfH8UUHpw8blBavPtI/HBAg6PXSb2nPAGG2A7NfFBGOwq0V0KFOrywwIhmkB9OKYQLuSk2znmy546iXR5LgoU@ybZ3CA3sDzxqsxp8/eDFmxUX/EN0fkF6XXJ59Zh@3OLgAd7X1rnOAIgcnCYWkxJU2X5U56N76rWfbymxMumZDG70rNQTy252N2LSjKJfA/JAZMC1EeAb93nzyoBxKLdglfgq6yvrA7gj5FXfInU77/r94vwz7oBAzcDhSuIet4lEXdngmgAxzvjfUaruzdyM6xsf4pLOpm@fHOZpGdR796rP109wMLEVwgqiRt9bpKK7PMbedR3S6jrP0PVlMzhbYZIyxEJOl5F79VyB/1ZaVo9oVpkRP6vclVcvc4I/amrI2@vA8DMCVwy8DMNfM1xH1wG0aYs8chFzK@CJqVzembCXkXlk@Ua1t2u5a4CSzW3oy0KcYf2kw6u3Wn3SoXOuWnWX5JrBhaUx44lD4CgksST8QVg7ZsbsOmlgdF6MajnDAw1eQcATb@aPqpfiA5THClVKukjJ/56QBy@LwqoEHa7Jf8mBCaE@bNgAO0tb3zLu9hAbqrp22LydX2ubeZ4QPTGdaeX2srKurEgm/t45IDpR4qK3tw78nW2fGHPM@gQb@yNnwpl@ZZEHG1BmwB96P/rTk3uNs2DuFCTv02T2qX/mxs0P70789cvqpevzLxxWeatazLZWzK/vB8jbsYsX4wRV2LE7QJ9mH8FH18F@4cv4uNzDwxZKUh4N7qEJirWf8hdxZQsLcc7qZjJxL0dQXtJbyHW@KVUXt0XuIkytzQ4IQQ0Xz8QfNAugz5ojokd4i0/NIzoYbGplTY@xbsZ0Z3K5vmxddr8nl4or6981lu1jx9UhUQ3K04Ns/4e31eMbP6SaOI77vCJS5jbAVTbooMsyEaSEcgP@6fSX6zB8G1H4YWZCFgUElcy/pJAsNDa5Dly4fOf/wc"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
","","user100411"
"233001","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a> (ppencode-cpmpatible), 87 bytes</h1>

<pre class=""lang-perl prettyprint-override""><code>print q pop xor print chr ord q else while length or print uc chr ord q else and s qq q
</code></pre>
<p><a href=""https://tio.run/##XcpBCoAwDAXRq/xLeCBpgymENElb9PZREFy4nOEZhWyZFk0nHNYNVw@8XTjQoz6fZBBObkIQ0mMyPrTK3@1aMeAOz7wB"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre class=""lang-perl prettyprint-override""><code># NOTE: q x STR x eq ' STR '
# chr ord STR to obtain first character
   print q pop xor
   print chr ord q else
while
# default variable is initially empty string
   length or
      # print first L
      print uc chr ord q else and
      # make sure not to come here
      s qq q
</code></pre>
","","user100411"
"233018","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a> (ppencode-compatible), 64 bytes</h1>
<p>You didn't clarify that I must separate each with exactly one character, so here it is mine.</p>

<pre class=""lang-perl prettyprint-override""><code>print length uc xor s qq q xor print while length ne ord qw q eq
</code></pre>
<p><a href=""https://tio.run/##K0gtyjH9/7@gKDOvRCEnNS@9JEOhNFmhIr9IoVihsFChEMyESJdnZOakwhTlpSrkF6UoFJYDlaQW/v8PAA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>Explained</h2>
<pre class=""lang-perl prettyprint-override""><code>   # print(length) did not work for zero as $_ is not defined at then
   print length uc xor
   s qq q xor
   # delimiter
   print
while
   # equals to: length ne 101
   length ne ord qw q eq
</code></pre>
","","user100411"
"233029","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a> (<a href=""https://esolangs.org/wiki/ppencode"" rel=""nofollow noreferrer"">ppencode</a>-compatible), <s>1232</s> 690 bytes</h1>
<p>Today I learned that <code>and</code> has higher precidence than <code>or</code> or <code>xor</code>; I suffered from making a proper control flow</p>
<pre class=""lang-perl prettyprint-override""><code>eval q y eval q x ord or return cos while chop and chop and chop x and print chr ord uc qw q for q and print chr ord q tie gt and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc y xor eval q y print uc chr ord q dbmopen and and print chr ord q dump and and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos if length q q s s q eq chr ord reverse length or not chr ord reverse length y or eval q x print length unless length q q s s q eq chr ord reverse length or not chr ord reverse length x xor print chr hex qw q and q while s qq q and length ne ord qw q eq
</code></pre>
<p><a href=""https://tio.run/##vVLtCsMgDHyVvMQeqNO0CtZvW/v0LrVujtL9GWNIIORyyV3Qole3UnAZFDjYoCUZjOcU4DEmr4GZAKuQCoEJY2HQ/JTkmlovdaSCr/TEwK00bKQ57gJ3ECXCFE@QQj1FQSiqgLsSFo@oFHTU8CXjzcyuifRtkCl5uT9GUr1L5PfZWNSVf2WBp9legH8xIcfOchDo1canOI8LeprVesioNvETukE/RG6yGpS0whB@tyrXo3fnAvPxUXZ7rv0zWuBaqdE0HrdY6@pSHg"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre class=""lang-perl prettyprint-override""><code># fizz part
eval q y
   # if(length%3==0)
   eval q x
      # instead of length or return 1
      ord or return cos
   while
      # instead of s/...//
      chop and chop and chop
   x and
 
   # print 'Fizz'
   print chr ord uc qw q for q and
   print chr ord q tie gt and
   print chr length q else x oct oct ord q eq le and
   print chr length q else x oct oct ord q eq le and

   # for truthy
   return cos
for
   # instead of $_
   uc
y

xor

# buzz part
eval q y
   # print 'Buzz'
   print uc chr ord q dbmopen and and
   print chr ord q dump and and
   print chr length q else x oct oct ord q eq le and
   print chr length q else x oct oct ord q eq le and

   # for truthy
   return cos
if
   # instead of length%5, /[05]$/
   length q q s s q eq chr ord reverse length or
   not chr ord reverse length
y

or

# this block is done when length%15==0 or length%3&amp;&amp;length%5
eval q x
   print length
unless
   # instead of length%5
   length q q s s q eq chr ord reverse length or
   not chr ord reverse length
x

xor

# newline
print chr hex qw q and q


while
   s qq q and

   # ord qw q eq == 101
   length ne ord qw q eq
</code></pre>
<hr />
<h2>Previous</h2>

<pre class=""lang-perl prettyprint-override""><code>eval q y eval q kill and length or return cos while s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and s q qq and ok and print chr ord uc qw q for q and print chr ord q tie gt and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and print uc chr ord q dbmopen and and print chr ord q dump and and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc y or eval q y eval q kill and length or return cos while s q qq and s q qq and s q qq and s q qq and s q qq and ok and print uc chr ord q dbmopen and and print chr ord q dump and and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc y or eval q y eval q kill and length or return cos while s q qq and s q qq and s q qq and ok and print chr ord uc qw q for q and print chr ord q tie gt and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc y or print length xor print chr length q q x x x x eq while s qq q and length ne ord qw q eq
</code></pre>
<p><a href=""https://tio.run/##7VLRDoMgDPyV@4l90IadGhEs4tSvZxWIm4t7WrZsyUIIhB7X67UdOX0IgS5HDcaMfGlqrXE0BTSZ0lewDo784AyU7TFWtSb0gmOOqO@92iYenauNh6qcVFJgUOBRMGcpi3fiDF8TSv8Qyl4wSPeECVb5tOMXYgG89ENk3RQUp9Z2ZGJ4T2ExtN1O8H0a7/q/@CZi52UsPjg5m17@zfqtEX/iSCLKJNP6sGFmoU1L6FZTONeVYYZSyjFmDeEK"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h3>Explained</h3>
<pre class=""lang-perl prettyprint-override""><code># fizzbuzz part
eval q y
   # length%15==0?
   eval q k
         ill and length or return cos
      while
s q qq and s q qq and s q qq and
s q qq and s q qq and s q qq and
s q qq and s q qq and s q qq and
s q qq and s q qq and s q qq and
s q qq and s q qq and s q qq and o
   k and
   # then print FizzBuzz, as in first ppencode
   print chr ord uc qw q for q and
   print chr ord q tie gt and
   print chr length q else x oct oct ord q eq le and
   print chr length q else x oct oct ord q eq le and
   print uc chr ord q dbmopen and and
   print chr ord q dump and and
   print chr length q else x oct oct ord q eq le and
   print chr length q else x oct oct ord q eq le and
   # cos is for TRUTHY
   return cos
 # don't change $_ outside 
 for uc
# buzz part, like above
y or eval q y
   eval q kill and length or return cos while s q qq and s q qq and s q qq and s q qq and s q qq and ok and print uc chr ord q dbmopen and and print chr ord q dump and and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc
# fizz part, like above
y or eval q y
   eval q kill and length or return cos while s q qq and s q qq and s q qq and ok and print chr ord uc qw q for q and print chr ord q tie gt and print chr length q else x oct oct ord q eq le and print chr length q else x oct oct ord q eq le and return cos for uc
# no special strings
y or print length
# print LF
xor print chr length q q x x x x eq
# pretty familiar, isn't it?
while s qq q and length ne ord qw q eq
</code></pre>
","","user100411"
"233077","<p>This problem is inspired from <a href=""http://golf.shinh.org/p.rb?Smileys+Triangle"" rel=""nofollow noreferrer"">shinh's problem</a>.</p>
<p>Given an input of positive integer <span class=""math-container"">\$n\$</span>, output a smiley triangle (see below) with <span class=""math-container"">\$n\$</span> rows.</p>
<h2>Detailed rules</h2>
<ul>
<li>Can be either a function or a full program.</li>
<li>Standard I/O rules applied.
<ul>
<li><strong>RULE CLARIFICATION: Output as exactly a string, rather than an array of strings whose item represent a line.</strong></li>
</ul>
</li>
<li>Standard loopholes are forbitten.</li>
<li>This is code-golf. Shortest code wins.</li>
</ul>
<h1>Valid output syntax</h1>
<p>Assuming ASCII encoding.
A smiley triangle with <span class=""math-container"">\$n\$</span> rows <code>triangle(n)</code>, where n&gt;=1, should be output. <code>&lt;0xXX&gt;</code> is a character with such codepoint, in hexadecimal.</p>
<pre><code>triangle(n) = triangle(n) &lt;0x0a&gt; | triangle_(n)
triangle_(1) = &lt;0x3a&gt; spaces
triangle_(n) = triangle_(n-1) &lt;0x0a&gt; row(n) spaces
row(2) = &lt;0x3a&gt; &lt;0x2d&gt;
row(n) = row(n-1) &lt;0x29&gt;
spaces = &lt;0x09&gt; spaces | &lt;0x20&gt; spaces | *empty*
</code></pre>
<h2>Example outputs</h2>
<p>If n is 1, then</p>
<pre><code>:
</code></pre>
<p>If n is 2, then</p>
<pre><code>:
:-
</code></pre>
<p>If n=5, then</p>
<pre><code>:
:-
:-)
:-))
:-)))
</code></pre>
","","user100411"
"233088","<h1><a href=""https://www.gnu.org/software/m4/m4.html"" rel=""nofollow noreferrer"">M4</a>, 88 bytes</h1>
<p>Just a port of the syntax in OP.</p>
<pre><code>define(g,`ifelse($1,2,,`)g(decr($1))')')define(f,`ifelse($1,1,:,`f(decr($1))
:-g($1)')')
</code></pre>
<p><a href=""https://tio.run/##yzX5/z8lNS0zL1UjXSchMy01pzhVQ8VQx0hHJ0EzXSMlNbkIyNXUVAdCqLo0ZHWGOlY6CWkIdVxWuukgBkj9/zQNQ00urjQNIzBpqvkfAA"" rel=""nofollow noreferrer"" title=""M4 – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<p><code>f(number here)</code></p>
","","user100411"
"233197","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a> (<a href=""https://esolangs.org/wiki/ppencode"" rel=""nofollow noreferrer"">ppencode</a>), <s>35</s> 33 bytes</h1>

<pre class=""lang-perl prettyprint-override""><code>print uc chr ord qw s abs while x
</code></pre>
<p><a href=""https://tio.run/##K0gtyjH9/7@gKDOvRKE0WSE5o0ghvyhFobBcoVghMalYoTwjMydVoeL/fwA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<h2>Previous</h2>

<pre class=""lang-perl prettyprint-override""><code>print uc chr ord qw s abs while exp
</code></pre>
<p><a href=""https://tio.run/##K0gtyjH9/7@gKDOvRKE0WSE5o0ghvyhFobBcoVghMalYoTwjMydVIbWi4P9/AA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
<p>Alternatively:</p>
<pre class=""lang-perl prettyprint-override""><code>print uc chr ord qw s abs while cos
</code></pre>
","","user100411"
"233227","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 2 bytes.</h1>
<pre><code>))
</code></pre>
<h2>How it works</h2>
<ul>
<li><code>(</code> to the nearest <code>)</code> is a comment.</li>
<li>But nothing can match the second <code>)</code> above in this syntax.</li>
<li>Thus it is syntax error.</li>
</ul>
","","user100411"
"233237","<h1><a href=""https://www.perl.org/"" rel=""nofollow noreferrer"">Perl 5</a>, score: 38, safe.</h1>
<p>No modules.</p>
<pre><code>&quot;#'$&amp;;)+!,-./%07*245@6|89&lt;&gt;31:?\]^_`}~
</code></pre>
<p>I think this is still an easy problem.</p>
<h2>Hint</h2>
<ul>
<li>Try making integers with allowed characters.</li>
<li>Then pass them to some functions.</li>
<li>Finally concatenate them with something.</li>
</ul>
<h2>Solution</h2>
<blockquote class=""spoiler"">
<p> There can be some solutions; one is <code>print chr length for qw xx</code>. <a href=""https://tio.run/##1ZTRDYAgDERXeUu4C/9GxcQoEhLdvo4godRGvu9ej7aQprwNIimve2GMmW3alxKZj8x5cRNeT4WkSlOtoyNL7aUrFZuQDe3ApGPYDaLZhyldexXNFmsA6roOmTWpccnbbufLkHjN039TCX/G2z9j13/CuXrgFnkA"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a> <a href=""https://tio.run/##RYtJDoIwAEX3nOKLSkWtiPMUh1u4wIFgtQYCWKs0cbh6BWNi/uLlT@GVa50cQFeIQSVuLugdT0MKkFyeF@fGz0IQp@U8DAAZP0esVnEptZGKcyyP5tosip@BabxIfqr9M5AvEXCBiMUnyXFMBC4ZFEgxC3xZgAU8gTJslDFXsCykTERQWptlUrGmdqPUpC2n2h7WO73@cvAcjWfzrjtZeJvtbv96fwA"" rel=""nofollow noreferrer"" title=""ksh – How to generate the solution"">How to generate the solution</a></p>
</blockquote>
","","user100411"
"233358","<h1><a href=""https://esolangs.org/wiki/Pxen"" rel=""nofollow noreferrer"">Pxem</a> (<code>ABORT_ILLEGAL_INTEGER=0</code>), 139 bytes (filename only).</h1>
<p>Backslash followed by four-digit of octet character means a character with the codepoint.
Also this uses a implementation-defined feature that &quot;pushes zero for non-integer input for <code>._</code>&quot;, which is adopted from nk.'s pxemi.7z (though the implementation is terrible).</p>
<pre><code>._\0012.!.i.s.i0.-.+\0012.!._.+.c\0030.x.c\0031.$.n\0031.%.t quarter .p.mBB.a.c\0011.x.c\0012.$.n\0012.%.t dime .p.mBB.a.c\0004.x.c\0005.$.n\0005.$.t nickel .p.mBB.a.c.w.n penny.p.d.a
</code></pre>
<h2>Usage</h2>
<ul>
<li>Full program.</li>
<li>stdin/stdout.</li>
<li>Input shall be a line and shall match this POSIX ERE: <code>^[0-9]+\.[0-9][0-9]?$</code></li>
</ul>
<p><a href=""https://tio.run/##pTp7X9u4sv/7UwgTSNzEdgK0UILpBhpoTnkdCLfdQ6h/xlbAkNhZy4HwyP3qe2ck@Qnt7tmbXdJY89BoXpqR9eiwmz8XF8wrPzDZjaIsksmMjo3xXUzHE4OOr4xJyPyZz8YG8QPdDT1KTgADHmIaTSIK34ayCHR71ImnEWXwRHSyG44nTuxfjSh58OMbEtwZVcaJAo96hE3o0B/6LqCEASfYeYypPg38mLg3TuS4wJePH4WEjUBIEoQRCaajERnCj6E/ooEzphzlLI6oM9bDyKfA3yM985hL9C3yY5iPXD0apD9x6J7z8EQDlG/PD5wRmU48J6YGWWmutIzmurHaIuf93fpHxDjwXRowAO4C79i/p7iicRgw8h8aheQeCAzU1jWNycnxWe/76JGwKSjEZ3REGSM0uPejMBiDSAoDJJ1OlenYYXek2VxfJ4uwnhh@rqy0icP4moTOFTqbhFFMDnbtzsGBtavEjxOK07hhMCTbpkfvTa6Gle3lFlleFnAXhHMC7y245HfS6X@x1EotwdQnKVMEAXpKqlWecai@ORc/9LmacDk/6n23z/qfrZVmcxUWgXJ/OdHPv6fToC4Ofrd3j09Pu7t9qyWR9o/O/1wkJ@d98vvx@Sk5@d49JGfwa7dLvnRPu8pe76B71DnsWlXDHjSbrRVjwfANZvhNQzfqyYht1A0XHlabxkz8aBkVIxA/loyY/DF1IvAcYkyM8c6O4XCkVktiAw@BDT8Q2/PHtIjaXJOozfcSlf@ISeC7d3SUQzYejIBMaBA8wphnOFVl9/io3z3qWwr@2uvtW1Vlp7vfO3pWCCHnZ117Z9dqtvFh57Tb@WofHB@f2N@@dI/s3tHZ@d5eb7eH5AKls3N82rd3To@/AhwxrVZuvHdw0N3vHABhv7vfPUWaeRX0695Q984PrrP48IdIBW4ZxEOyxAaDgKiVRNkqeUHodUQnRP@D6F0ywGf4VGs/Xi5@DAaX2mBQa7408X/@19RqFz@a@sblS0WrEiW@oQGSUPcmJEfodmn0QrCnYpDW9vIKx5tBgLeUoa/8c8nMl7xw79dfmvgHXznRtGpRtDOeQv5CItBfOA1ikCm8jpyxgn47Q6K8XGpF2lnNDadjbeKF@WVdAdIMFkMeXKK7YlIvDKgiwlaE/KuofXkh3GkEuKbV5Np5HtmVD54fxeMJhPRz//Dkc@90E8NUgFyHUZhYYKi4glq1qklgRmrClxxst2vmGwhGBn73GgxTi19LZjp1u02Z48oHnqm5tkGESrKKWsbIH5ILokeEr38aQV4Kx@QSshYOu6XhNklMmn5CyGMdEhAdYnmN6EcEvu4LZBk6HTFaIK5NGFLrIZn4XoPGkAwaE3cybdyzJ7AjbA2a8MK3ppvymYrgOALrMALZZXXt/Yf1jY@kejEI3l1WS3jcq40yseOPiB6QtZUSgMGOVmXmD@PdoGYMnjcG84FWMQcts8zWebhDmRxLX2mtra9trH5Y2yDVAsqzU7cqzfa8e/T5mbsoceY5DAgC8SNbODKtPmcoDNVaqzS1do4MTQy@aanOlevR4fWNf3s3Ggfh5I@IxdP7h9njU2dn93N3b/9L719fDw6Pjk/@fXrWP/@fb99//0@mLlvNMT2wIFCv45tawr0wYxjVfMiI/pbVarb9el17LqwT4bcAvwX4WvsW4AVwFqBsesXiKJ2jAYM1vkLt3YHWaOXnTIiImhdzLn@matSSFCA@m2Q7jUSzwudRcVcuC5IkwF9gQq01jQLSTOIf04h0bUxxqsgWm2QIngQ@E4ewwQc0Aj8mDkFQGDnRI8@Aapr@Mr4tfNSUuaK4I@oENojBhagJ3fLco5PKcwsSDal8UrjDOxNSrZLu916ffDk/IbAfkX@fw8NJ76RLOgenh6TfPT1E3GhM9CEsMGGrpgz0v0XP83SlBfIlHLCaEWvWVFlloLcyN/InscJZF1fy1/MoqTVEnoddXN3ezgutQP00AQ1KreTzfEtuWvks0UqzxKvkgPYu5Id8WlgkYXTtBP4TJSMfNlOoVsFPYWcXwIi64TWH3jsjH219B9WqkiWBz8d9a@2DiP6sCIHPiAGVrDFwpxh7F63WyqWFPzaal5Y6UYuwloCtfwRYWII1JWwDYEER1nwvYasA8wuwjwBS7eLQR4H9YR1AbmkWyWkDObESbEPCPgDsviSBXNU6rmpYgslVfcBV0RLPNckT6NWoBJNybqCcD0XYitTGBmpjVoLJ@TZwvscSTMr5EeV8KqplXYqJGnNKonyQLEFcNS4tT4q5jmKOSzAp5gcU0yvA1lDD9eIQzqwXhlYRa6E4hOqvFIdw6qV0SPgjf@IZM3FHaCDv/XDKLOnlF9w/LxOyZLReF@O4eSlJ6VBLiS1gv7xcaWKZAZPnNwPcCTitbq20@Q/xreva69Q@VJNgW/IGgdp4W6h0I8B1Vprp@DxdHW6vWQlU@@m8f3fSeTXJCg83vntDwiHBPRW2AMogt4@dGAaxzf4ksKhxbZAHMpvNMPOHyc8HAYWiyxGk2IJy4gYvrQgzHbNjEmwP/WvotykZTiOARIKQhaQDKvawbQfqqwizDnFyaSegLB7dW02ReMwfFyjmZcVMtMEnQ0HBogI3b1KujnZAZ3HmKOYPJyMHm8sZrGbeyJxQ7ahtvkk0CwbJk22/phqqzpKLas9EE7i6njd4KlTBzq12ahjH88jIuYIikz@Lwd5hr9/p9472yf5x/5icwUP3ENqEM/KtBy333vHBwfE3BHe@fSVnR72Tk25/U5Byv2kLcRfFGjh7C3LLbKZqz/A9T4BY2v4awzCMPDKHwVM/8mWlEOJ3ACXFzGcxdpCcl6CZ55bkB37sO6PRI5RBYgTcAwoM@LsJH4BPHOpALlfBvRTd6ZrGnCsEKPgTGYUhFCrMrJgNs4TJHQ9RMzzCMX@TmM6DM3t4dAS2GwbAd1rEZ2bjt3cZayRwEoKriDp3r9lzgmSGziYqAzf6EY0pLNXzh0NYJYS8rLkWyfFO/1sSAYINLh00@ID6SEIit/8K26jqnB/9CPWCW1E8DRMnWlArk4kTxcKz3g4g4Zv1euKLUL/WIPM28D/OUisEE1HFPKqYrxBWb7PW9QJr1Avw/u3vc08jAlSB9V3ARliBymMnhpp1JtBhAwccB4UyJelyhGSCaSoXM8152cHNFFYxwdOTx6vc@pKkmuczmbKbWp5We00JndakYkKehRpvAWrL@LGmaZNpjOcatUkI3bggArywYoJMf4EUvELCQ9BrWsbzK0I8PJRDLhnEziAJaQZ0y@wBMS4wZiUMBCaw@4oJeyiNGM3GhhUz115hgIHj23wHw0aLzyBHL/zLlIxWTPCYKMT15bhFb8iXa7KEDlLsxCfR1BBUNszj1dRlVdPecHTuFOl46qIJL2dQE@ywXS4yHLQSjtK/32Jadv2Eb6diylj@pLZl/qEJMC4uNw5vqDMpWXrMcThAKmQYhWP5nCB5FZOnqlQz9YXKki5Ug7aoadvWiuZEsGGNwS9criWOnAYgcPTAtDztDcMQwoFHWi09FKvy4kjmJdxschEGUcXDEbb6DJ9LlAbjqyNKzbkKo9hGRQs@muiKeVP5nJt2Grh47g/lgB9IzGcWO@7dhe9ZUJ82xdSi08qfvmU85imTnNdxVg2WbvLMEqpqC@b1uu8BcyV/htAEJ2fcsXOFAdokkUdvNcDLSwIlx32ZPOlUHsVNg9hoTyTXL/@7@ep8PlDcnJQ6z0U0Rr6DbvOmWFFgu4LcLU4N0zNLaMurN74xmdEq6RjwHwmJ8fB0y0Lj1pgZT8aD4RBjRoxH4tzR0PBgwDOo4STnF@JQoTJTi0ufpYsWB5l4XgBiFWQlW1vVvfOj3X7v@OisqqSm4v5RG7PrXPNM4PFFRRZ4JCEaBnEm20beUHVKxVwSnxFUcm4MVEVuHEYg149ZgzSh9PDojHoJCnhY4E@mI/GaKZVDhuezPPlIZ4Cycp5hCYO@QsphcMPZfua8jRSrXr@0bD@PizmgzKyh6ylFnnH8JnKKqrfyyEkGt/2GfSs0i75mo7PZ4G0JlbkCj7mjMvvWSlnbflrt5sest@bW30IuwS37VhYb3IYYDPDPeApuKgPkARsOsUL@wgJSYC6Us9WJvJjowvfQt3lw5TSQ5c8ELwm/olI5DtorBXMbgWR@CF@3KB7jLxN5rcrLORh3RtD5cODVI0jO6B9TGrhUQq@m2EQ9XlHxStRx@dtCIMa3DVN8JZp3GLG5owy54yN1AJ@lENsQ21cKDpZu@WhdV1BB7gW7Zr1MwnXtvdbGNg1K6MTE/jtLb2VlH/cLF3Z2291KzldBFnjM@UXCTp6N8okbLa2@tsHZO4xNuX46Z7u9XmLkVOSkfrGjVFjel9vTAEBX02Hmf5GVDl5kbXSSQN8AJcaNshUBeyyMRuAzMK5tQWNYRJbLz5HmhOVzpBbJT1kMXp@xieNSjiU51T5uAc7yso1n0GvaywvEm7W6Muf@ch3yjZkwPHWE/CTsXFOXPLWxDPoGpILGUiOj7Rqo8SgL5DaGclYWLoBFl5dzErWTFfOFchaWPKPmnmJZa6tCPHCQXCstRxKK7JQnP11B07DWtY2Xl/frW4kDi/E3X0rmNjiR91XD3uRHDk5A5ILhX/A2NW0reG@a0S0SbxpAs@QPwX7XkMYjbB8yo2nc13mBE9@ASzKCdwTCOM/h@GvndwIexYqAguXbrw/ZXzf7iwTfEPFezfOv/ZgXU@jDKEM7NdbaRuYX79fbBdPlPT@CBprA5DqGVTrJa7EKjstfUQaej37jjEoba77wSkIvKec@qYk5Els4m2QMToSBbDw0oBKAv8cGKtB4kgbJvTFLqFRijxwW8zqaqDkWDtLkIiartvl3w@b9bcNmFB@FfBkri3@nLsuH8IA172RJTf3KVgu/ep1eSh18F16Q599zpeRyaW29tfIPpxHLtPg06ZhYc3Ewt8yZqqVW5uRbkuIN3Mcy7vbPcZ/KuAtWHlluzQ83j8Qnzhj2MHku4uOZYmLITX42dQMhNqKMjPyxjzdsoHu7pngMKeOYNYATZRPqirMhyPd7EaU7Z5/bpDlb3xMfLODw2GXszAhvsAG20RQfhMGuosiTFZzU54cFYmoC9eGIgruQg@OjfR721Mtml@eiQLFtkdUVcgXhibd4Dju/73Rho/qK9y9Oz0j/mHzu7vY@dwlYsP@le4ojACI7u7lgypoqO5zwbHzbsO/SmBJXObJg9qVloZ56ZWJ/KynJJPIdJAdMClAfAb59Vz6rBBBLdgtegS@xgbrkwh8jL/gSaTBYGAwq8M87EwauXJULiHLeZh53a8HUAE53xruCVLdv5GaI7HCCIZ0tX75JzNKzqHfvtJ9GD7Cw8BWCRtJGn6ukLvv8dhl14RXqu5@h6mrh8LZApJeIBB2voreapYP@4mx6K6OaF6b8X/WisnRZmPSnpk6s/Q4AVmnCVwp@olGoe/69z8Db1Fc8Sh7zK6fJyZxfmdBXRf1k@6Z9u2n7S8BSK@1ocyXt0H7SwfWOev2qcnRqWa3n7LW/DeWxZ8sDIKgk8WR8Dljb1gpsenlgEi8mDTzX1LJ3AND0a/mj@rnoMMWRUr2eP3LirwfE4ftcQYGw262GVzEwISycRi60t7zxrW1iA7mq5S@yydfnpbaZ4wHRG9ePnpuLi@/MOVndxiMHTD9yquRNuidfL8sX6DyDDvEy4ehRqcm3JOJoC9oE6EP/X3dcSrdb7sUFl/Ltltwu/d/caPnpXZa/flH9@grLG5dX3rq2Ury18sv7KuKmyuuLKuKKinjbbwzLr@DTq1n/8EV8eu6BLisnEtZNLoWJivUfctcwJUvN8U4qZTL2r2@gvaTX4Gv8viyv7hWuosKtCU4IDs3jB5wP2mWQB9UxdmK8dYeKET0sNrVSx4d4VyK57tk53bcPO98LgQIhxNe91vz4QVNJcnPx0LRW2oe6tYFvLUS/iLu@KnUODasiu0hGIDlsH0pjsTbDVx3KM7MQMFcyOzL@hmDmRFCt6z3ylNjv6c@m0fo/"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
","","user100411"
"233361","<h1><a href=""https://github.com/TryItOnline/malbolge"" rel=""nofollow noreferrer"">Malbolge</a>, 271 bytes</h1>
<p>Generated <a href=""https://zb3.me/malbolge-tools/#generator"" rel=""nofollow noreferrer"">here (linear generator)</a>.
I tried other methods too but it took me pretty long time so I could not wait for completion.</p>
<pre><code>D'`_:pon}}kXyxx5R-,s0Npn9+k#(EgDU0zyba+u)]xwvunV3210/.-,+*hg`H^c\&quot;`_AW\UyxwvutsrqpJIHMLEDCg*@E&gt;ba`_^]\[ZY9y765.-,+O/.nmJIHGFEDCBAya}|{ts9wvunV3210/.-,+*hg`H^c\&quot;`_AW\UyxwvutsrqpJIHMLEDCg*@E&gt;ba`_^]\[ZY9y765.-,+O/.nmJIHGFEDCBAya}|{ts9wvunV3210/.-,+*hg`H^c\&quot;`_AW\Uyxwvutsrqp]
</code></pre>
<p><a href=""https://tio.run/##y03MScrPSU/9/99FPSHeqiA/r7Y2O6KyosI0SFen2MCvIM9SO1tZwzXdJdSgqjIpUbtUM7aivKw0L8zYyNBAX09XR1srIz3BIy45Rikh3jE8JrQSJF1SXFRY4OXp4evj6uKcruXgapeUmBAfFxsTHRVpWWluZgrS6K@vl5cLVOTuBlTk5FiZWFtTXVJsOShMj/3/HwA"" rel=""nofollow noreferrer"" title=""Malbolge – Try It Online"">Try it online!</a></p>
","","user100411"
"233556","<h1>n/t/roff, 27 bytes.</h1>
<pre><code>.de a
\\$1
.if \\$1 .a 1
..
</code></pre>
<p>Defines a macro <code>a</code>.</p>
<h2>Usage</h2>
<pre><code>.a 0
.a 1
</code></pre>
<p><a href=""https://tio.run/##yy7O@J9XlJ@WpmBjo54IBOr/9VJSFRK5YmJUDLn0MtMUQAwFvUQFIE/vP5A24AJzQGr/AwA"" rel=""nofollow noreferrer"" title=""ksh – Try It Online"">Try it online!</a></p>
","","user100411"
"233611","<h1><a href=""https://esolangs.org/wiki/Dis"" rel=""nofollow noreferrer"">Dis</a>, 3 bytes.</h1>
<pre><code>}{{
</code></pre>
<p><a href=""https://tio.run/##lVZ9U@JIE/8/n6KNCAGE8KLeYnasc9HdtcpVC/SpvRNMDckAKUOGyySCC3z2vZ68QBD3njuqjNM93b9@me6esakY/9zf0weOp4uxouyD7YgqmwyqUy6cuSMmVejy0LdYxeI2A9xhts1suHAEOF7A/KnP8FtFzfMwGHO/CvdTyj7T2Q/mSe61YzFPsCq02zWkkfMg6IjJLahXocOmLrUYqBrcPdzDH7cPHbi46sJd5/ZL5/wbfL3sXEJRhZkTjCOjU5@PfDqJ9BtVuJwzKwwYBGPcE2PmuiAs35kGkUATvRmzVAf80BNVuPKmYQAoTt0ZfRXgs79Cx2e2AZJPPbi8/QzOEF55CDb3CgHMqId4imABVFiohBMqnqFWazQUNp9yP4Drtnl@fU3aykIBgOB1ymDEAot7Q8jn1yyLTybUs5UVnOk2e9G9EL1tnOXriVACdnd@/5WoOS0Rh8p0DSa3irmF/Fc@XcWL08pKTf24u@1efb/@w2zfdjqX7XtSTzcebq6@m937C9Ko1ZrKI6i5xafz7lfzf5ed7tXtjcSAfj4fRcghOvuYKn@Kpf/cFWaT0KWYejGORPk0wOWM@7aYuk6Qz1PXoQIqIyjkFvWymvtdXRVIQf4v5PM3D9fX7W8X5DSC16Qp2xBjZxgY0RqkXMJg1phDbh@rgEBdWtb2IOIV7lxGBYMQ/zw2Y35cAYVi/SyPZ/NCXVD3YEhdwdTl8t9pRe5EcvOlwEIvCH2uv@qGwM8PvRA58QP678N1H7ovzTKgXoKGRXjD0QoCBZhXnwnmv2C1@tRxHW8E@GEC@DBuPOFbp9kiBxG1Hm4OHQ@DkdIoDGNGbXR7wFw@U2K9qGBo8PFjwTSZZ16YhZ@rxeJnQihFNQLxRQDBjK/NwpBz7F6gA/7CFGXCJhJH1uLUx@4ewoHo9TzMSGxEhaXcw98@ds0EdUBMsXsFlq7F8PyvP4tEIPChgsnrBb2X3rDnQyGjKgubeUEC4Sf8KNnJ@pSmTF17fCr2S0VdHyUsXdMXyRJ/ucFmfbNZDlKAVdYwHgFGkZBD7mJvzerr/ZHPplBdk1l/hP74VHo6Wy5W5p7W1ysNfb3RK@lHWfJJbx1tyDP9JLO51OuNzOYCyeaGXCF5vCFNvZWh9vRmRlTTK3V9ExmdPUPlBfMaegGprb3O1Qip1DPJig4V1NCb0MAaY3yaulSxakDWqmpsBNncQWbKWGXxGrt4TjRQh44rR5wXUMeTdwN2n2ODNaY@tbDGxH8yFYdCjlu1o9Y/Ggw4VjP3Rv8JfQcxV8voRLbL5bUS9ryStqD7mr31FG4PRphwPgiHOGs15U3XYD/haJZDguHY51hu5@DJk6oEECaFJxulLaCGpXB0fPLbh5ZULTz2vFI/OeC4LpViTCVnPccRYjG0jesZ9T2ThwEfmtwKSD0ugE@XX65u0kgdEkcYZUBHb9Y9RIlFbLKOf8h9zTCKmQy1SRnjeLT6mRQ5Qy12ICsoU2cSy7BNYhtb7OTYsOHUQ3poHdqH7cMI1O6/f2yrzXIf1JK6ZblNyFGjuGXAJgmcsaX4tKPYOtpWtN5XPNtRPHljkZJYj2BkWrzUm8UE7KBZqrdOPjS3QZc7oDgN3iTQIbXt1MnzeCZ14/mjRDwynkukue2J1CoTTfpB9efiQbOScUnS5SZ@Ss/GL/z/ZdoX7/j7xjayadylH3acilrvTTQMb2KptF2x@FQ4axwf7yAkZXPvO@n1iTRW0Ps1k8C/CzIEtYe/A97zUH/7WFbvhHm8Eya@wKLbl34ktR1HaZyCbVxTPW0dg3zA8WCM8w@oj@8NPt0S2tsx3nyT4p00/qr3kmzhiyZtsrhvzX7Sa7i47XT/b8NZRLPK9eLB25Bsotk7/NV6qKTOSFNOn2wmqpOMUnkTgyVfSjk5NnGOghanMmHiEE2YyAkMQysVt@83Vz5O0qfweeeL@e38@3IZzdejWusEn2bpzRfPPorNJIiqGi5x9Ual3kijdJk3CsaaIAInf/GMuIs4ecJIVVLJy5uLdA/9l0zDYIJa0SieU3@ED9wrmKdVNlcit2P/pdxPEQ4Y9ejf"" rel=""nofollow noreferrer"" title=""Dash – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre><code>} ( a=getchar;if a==EOF a=59048;)
 { ( if a==59048 exit; else putchar a%256; )
   { ( again)
( then keep program counter+=1 until 59048 where each cell from i=3 to 59048 is NOP;
   then pc=0 if pc is 59048) 
</code></pre>
","","user100411"
"233636","<h1><a href=""http://www.snobol4.org/csnobol4/"" rel=""nofollow noreferrer"">SNOBOL4 (CSNOBOL4)</a>, <s>109</s> 95 bytes</h1>
<pre><code> n =input
b s =gt(n,1) char(10) ':-' dupl(')',n - 2) s :f(c)
 n =n - 1 :(b)
c output =':' s
end
</code></pre>
<p><a href=""https://tio.run/##FYxLCoQwEAX3OcXbdTcoGNFNIIeZxC9IRybJ@aNui6rKmkK6ptag8KfetZiADL8X1s4K4vH7sx0E5HrCUu@LSahT9BjlFd3GUcwXf8jCcRATkWp5V/DkCNmsurQ2Pw"" rel=""nofollow noreferrer"" title=""SNOBOL4 (CSNOBOL4) – Try It Online"">Try it online!</a></p>
","","user100411"
"235246","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 221 bytes.</h1>
<pre><code>DO;1&lt;-#13DO;1SUB#1&lt;-#29DO;1SUB#2&lt;-#1100DO;1SUB#3&lt;-#249DO;1SUB#4&lt;-#255DO;1SUB#5&lt;-#250DO;1SUB#6&lt;-#677DO;1SUB#7&lt;-#373DO;1SUB#8&lt;-#4160DO;1SUB#9&lt;-#570DO;1SUB#10&lt;-#2572DO;1SUB#11&lt;-#225DO;1SUB#12&lt;-#247DO;1SUB#13&lt;-#348DOREADOUT;1
</code></pre>
<p><a href=""https://gist.github.com/GH-TpaeFawzen/7738ec19d4f7909016b4cec6b1c4aaf7"" rel=""nofollow noreferrer"">How I generated the code above.</a></p>
<p>There is <a href=""http://progopedia.com/example/hello-world/259/"" rel=""nofollow noreferrer"">other &quot;Hello, World!&quot; program that uses a tail array</a>, but it has 278 bytes when I do these:</p>
<ul>
<li>Remove GIVE UP statement</li>
<li>Replace PLEASE with DO, as politeness doesn't matter in CLC-INTERCAL</li>
<li>Remove every space and LF.</li>
</ul>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">I think this is the only site that you can try CLC-INTERCAL online.</a></p>
<p><strong>Edit.</strong> As of 1.-94.-2, politeness is not checked, unlike INTERCAL-72 and CLC-INTERCAL.</p>
","","user100411"
"235247","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 116 bytes.</h1>
<pre><code>DO;1&lt;-#6DO,1&lt;-#999DOCOMEFROM.1DOWRITEIN;1+,1(91)DO.1&lt;-,1SUB#2(1)DO.2&lt;-.1~#1DDOCOMEFROM.2DO,1SUB#3&lt;-#0(95)DOREADOUT,1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online, although you need to copy and paste!</a></p>
<h2>Assumption</h2>
<ul>
<li>Each line should have &lt;=80 characters except trailing newline character(s), although this program can handle up to 339 characters per line (or more, depending on what kind of characters are used).</li>
<li>Does not matter whether input has trailing newline or not.</li>
</ul>
<h2>Explaination</h2>
<pre><code>DONOTE stores first six characters of line
DO;1&lt;-#6
DONOTE stores rest of characters of line except trailing newline
DO,1&lt;-#999
DONOTE label one
DOCOMEFROM.1
DOWRITEIN;1+,1
DONOTE goto label one if tail one is asterisk
DONOTE first two items of tail one shall be
DONOTE 91 and 95 if space, or
DONOTE 91 and 95 if asterisk
(91)DO.1&lt;-,1SUB#2
DONOTE goto label two if line is not empty
DONOTE obtw every item of tail will be zero
DONOTE if empty line
(1)DO.2&lt;-.1~#1
DONOTE die here
D
DONOTE label two
DOCOMEFROM.2
DONOTE erase the space
DONOTE obtw zeros on tail are ignored
DONOTE when reading out
DONOTE see source code for more info
DO,1SUB#3&lt;-#0
DONOTE goto label 1 after reading out
(95)DOREADOUT,1
</code></pre>
","","user100411"
"235249","<h1>Golfing off GIVE UP statements</h1>
<ol>
<li>Trailing GIVE UP statement can be removed, as it will cause E633 error in C-INTERCAL or error 000 or 633 in CLC-INTERCAL to abort.</li>
<li>Replace GIVE UP statements with incomplete statements such as DO or D (<code>D</code> worked on CLC-INTERCAL but not on C-INTERCAL, if without compiler option.).</li>
<li>RETRIVE unSTASHed variable, RESUME #0, and many other runtime errors can also be alternatives.</li>
<li>ABSTAINFROM non-existing labels, invalid labels, etc. Same applied for REINSTATE.</li>
</ol>
","","user100411"
"235408","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 182 bytes.</h1>
<p>The following source must be in Latin-1 or ISO-8859-1 encoding:</p>
<pre><code>DO;1&lt;-#1DO.9&lt;-.9/;1SUB#1DOCOMEFROM:9DO.8&lt;-&quot;¥'.8¢:9'&quot;~#1DOWRITEIN;1(1)DO:9&lt;-.9~#16DO.7&lt;-.9~#1DOWRITEIN;1DO.9&lt;-&quot;V'&quot;'¥&quot;'&quot;&amp;'&quot;'¥&quot;#1¢'.9~#4'&quot;'~#1&quot;¢.7'&quot;~#1'¢.8&quot;'~#1&quot;¢#100'&quot;~#5461DOREADOUT;1
</code></pre>
<h2>Assumed I/O</h2>
<ul>
<li>Uses standard input/output.</li>
<li>Input: a line of the text. Does not matter trailing LF.</li>
</ul>
<h2>How to try it online</h2>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online!</a> Because of encoding issue, I recommend uploading and submitting the source rather than copying and pasting the code to the form.
Also it may take very long time until the program ends.</p>
<h3>How to test</h3>
<p>Use the following shellscript:</p>
<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh
set -eu
cat&lt;&lt;'.' | awk 'BEGIN{ORS=&quot;&quot;}$0=(NR&gt;1?&quot;&quot;:RS)$0' | iconv -f UTF-8 -t ISO-8859-1 &gt;.i
DO;1&lt;-#1
DO.9&lt;-.9/;1SUB#1
DOCOMEFROM:9
DO.8&lt;-&quot;¥'.8¢:9'&quot;~#1
DOWRITEIN;1
(1)DO:9&lt;-.9~#16

DO.7&lt;-.9~#1
DOWRITEIN;1

DONOTE remove the following long line to uncomment four sentences that begin with &quot;DONOT.9&lt;-&quot; because it will result in timeout because of stupidly long expression.
DONOTE don't worry because they work equivalently.
DO.9&lt;-&quot;V'&quot;'¥&quot;'&quot;&amp;'&quot;'¥&quot;#1¢'.9~#4'&quot;'~#1&quot;¢.7'&quot;~#1'¢.8&quot;'~#1&quot;¢#100'&quot;~#5461

DONOT.9&lt;-.9~#4
DONOT.9&lt;-#1¢.9
DONOT.9&lt;-.¥9~#1
DONOT.9&lt;-&quot;V'&quot;'¥&quot;'&quot;&amp;'&quot;.9&quot;¢.7'&quot;~#1'¢.8&quot;'~#1&quot;¢#100'&quot;~#5461

DOREADOUT;1

.
wc -c .i &gt;&amp;2
sick .i
: &gt;o
while read p _ q; do
   o=&quot;$(
      printf %s &quot;$p&quot; |
      ./.io |
      tee -a o
      printf X
   )&quot;
   [ &quot;X$o&quot; = &quot;X${q}X&quot; ] &amp;&amp;
      printf &quot;%s: Passed\n&quot; &quot;$p&quot; &gt;&amp;2 ||
      printf &quot;%s: Failed\n&quot; &quot;$p&quot; &gt;&amp;2
done &lt;&lt;'.'
0 -&gt; 0
1 -&gt; 1
0! -&gt; 1
1! -&gt; 1
!0 -&gt; 1
!1 -&gt; 0
!0! -&gt; 0
!1! -&gt; 0
0!! -&gt; 1
1!! -&gt; 1
!!0 -&gt; 0
!!1 -&gt; 1
!0!! -&gt; 0
!!!1 -&gt; 0
!!!0!!!! -&gt; 0
!!!1!!!! -&gt; 0
.
cat o
</code></pre>
<h2>How it works</h2>
<pre><code>DONOTE ;1SUB#1 shall be these:
   '!' is #116
   '0' is #101
   '1' is #100
DONOTE actually first 16 bits are random bits
DONOTE that has at least a 1 bit 
DONOTE when WRITEIN is done
DONOTE then second 16 bits are the values above
DONOTE EOF is really #0
DONOTE otherwise at least 2^16

DO;1&lt;-#1 DONOTE for i/o
DO.9&lt;-.9/;1SUB#1 DONOTE replaces every .9 with ;1SUB#1

DOCOMEFROM:9 DONOTE it is from label 1
DO.8&lt;-&quot;¥'.8¢:9'&quot;~#1 DONOTE for fact
DOWRITEIN;1
(1)DO:9&lt;-.9~#16 DONOTE '!' is #116 others are #101 or #100

DO.7&lt;-.9~#1 DONOTE '0': 1, '1': 0

DOWRITEIN;1 DONOTE has trailing '!'?
DONOTE at this point .9 is '!': #116, EOF: #0, LF: #89

DONOTE explaining long expression

.9~#4                 #1 if .9&amp;0x04==0x04 else #0
'¥&quot;#1¢'...'&quot;'~#1      ^#1
&quot;&amp;'&quot;...&quot;¢.7'&quot;~#1      &amp;.7
'¥&quot;'...'¢.8&quot;'~#1      ^.8
&quot;V'&quot;...&quot;¢#100'&quot;~#5461 |#100


DO.9&lt;-&quot;V'&quot;'¥&quot;'&quot;&amp;'&quot;'¥&quot;#1¢'.9~#4'&quot;'~#1&quot;¢.7'&quot;~#1'¢.8&quot;'~#1&quot;¢#100'&quot;~#5461


DONOTE finally
DOREADOUT;1
<span class=""math-container"">```</span>
</code></pre>
","","user100411"
"235419","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, <s>85 bytes</s> Score: 77/85=0.90588, safe.</h1>
<p>Input: up to <code>SIX FIVE FIVE THREE FIVE</code>, although actual calcuatable input is smaller than that.</p>
<p>This calculates <a href=""https://oeis.org/A000217"" rel=""nofollow noreferrer"">A000217</a>.</p>
<pre><code>PLEASEWRITEIN.1PLEASE.2&lt;-#1DO(1000)NEXTDO.2&lt;-.3DO(1030)NEXTDO.3&lt;-.3~#65534DOREADOUT.3
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/z/Ax9Ux2DU8yDPE1dNPzxDC1TOy0VU2dPHXMDQwMND0c40IcfEHiekZg8WM4WLGILE6ZTNTU2MTF/8gV0cX/9AQPeP///39XBWiXIP8uQA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h2>The answer</h2>
<p>77 bytes.</p>
<pre><code>PLEASEWRITEIN.2PLEASE.1&lt;-.2DO(1020)NEXTDO(1030)NEXTDO.3&lt;-.3~#65534DOREADOUT.3
</code></pre>
<p>C-INTERCAL has a subroutine that just increments .1, which is (1020).</p>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/z/Ax9Ux2DU8yDPE1dNPzwjC1TO00dUzcvHXMDQwMtD0c40IAbONYWw9Y6C8cZ2ymampsYmLf5Cro4t/aIie8f///n6uClGuQf5cAA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"235421","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 109 bytes</h1>
<p>Wait, no, I don't even need to make a loop.</p>
<pre><code>PLEASE,1&lt;-#11DO,1SUB#1&lt;-#172DO,1SUB#11&lt;-#260PLEASEREADOUT,1DO,1SUB#1&lt;-#252DOREADOUT,1+,1+,1+,1+,1+,1+,1+,1+,1
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/z/Ax9Ux2FXH0EZX2dDQxV/HMDjUSRnMMzeCc0F8IzMDiNogV0cX/9AQHRTVRqZA1XAZbRzo/38A"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 116 bytes</h1>
<p><a href=""https://codegolf.stackexchange.com/a/209637/100411"">mindoverflow</a> said as if they can't loop shorter, but actually you can.
The code below uses <code>.1</code> as loop counter.
Starting with <code>.1&lt;-512</code>,
iteration is done with <code>DOCOMEFROM.1~.1</code> and <code>(1)DO.1&lt;-.1~#1022</code>.</p>
<pre><code>PLEASE,1&lt;-#11DO,1SUB#1&lt;-#172DO,1SUB#11&lt;-#260DO.1&lt;-#512DOCOMEFROM.1~.1PLEASEREADOUT,1DO,1SUB#1&lt;-#252(1)DO.1&lt;-.1~#1022
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/z/Ax9Ux2FXH0EZX2dDQxV/HMDjUSRnMMzeCc0F8IzMDF389EMvUECjj7O/r6hbk76tnWKdnCDEkyNXRxT80RAfFGCNTIw1DTYhOoFplQwMjo///AQ"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"235422","<h1>Calculated <code>COMEFROM</code>, <code>NEXTFROM</code>.</h1>
<ul>
<li><code>COMEFROM(9)</code> and <code>COMEFROM#9</code> are equivalent. This works for C-INTERCAL and CLC-INTERCAL.</li>
<li>CLC-INTERCAL has <code>NEXTFROM</code>, as <code>DO(XXX)NEXT</code> to be obsolete (which requires a compiler option). As well as COMEFROM statement, it supports labels to be computed.</li>
<li>Since label numbers can be calculated, some complicated equations such as <code>DOCOMEFROM.1~.1</code> can be available.</li>
</ul>
","","user100411"
"235423","<h1>Dividing a variable by two.</h1>
<pre><code>DONOTe this is very long. Using C-INTERCAL library.
DO.1&lt;-.9DO.2&lt;-#2DO(1040)NEXTDO.9&lt;-.3
DONOTe shorter way.
DONOTe The number can be smaller if you know that
DONOTe .9 shall have smaller value.
DO.9&lt;-.9~#65534
</code></pre>
<p>Similar goes to dividing by 2^n.</p>
","","user100411"
"235424","<h1>Golfing newline output in CLC-INTERCAL</h1>
<pre><code>DO,1&lt;-#1DOREADOUT;1+,1
</code></pre>
<p>where <code>;1</code> is a string to output.</p>
","","user100411"
"235428","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 114 bytes.</h1>
<p>From this how should I golf off....</p>
<pre><code>DO;1&lt;-#1DO;1SUB#1&lt;-#121DO,1&lt;-#1DO.1&lt;-#512DOCOMEFROM.1~.1DOREADOUT;1+;1+;1+;1+;1+;1+;1+;1+;1+;1+,1(1)DO.1&lt;-.1~#1022
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
","","user100411"
"235458","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a> (don't break loop when items are insufficient), <s>46</s> 38 bytes, filename only.</h1>
<p>It's been a while. As usual, <code>\0001</code> is not such a string but a character 0x01.</p>
<pre><code>.z.im.a_iH.w.i.c\0001.+.a.s!mexP m'I ,.v.p
</code></pre>
<p><a href=""https://tio.run/##pTp7X@LIsv/nU7QRhQwkAXRGR4yz6KDDGRWP4p3ZI05@MWkkCgmbDooP7lffW9WdN87snr3sypCuR1fXq6u682Sx0Z@rK/qN6@lsJEmrZDqnE21yH9LJVKOTG23qM3fusolGXE@1fYeSM8CAh5AG04DCtyatAt0htcJZQBk8EZUc@JOpFbo3Y0oe3XBEvHutzDiR51CHsCkdukPXBhTf4wT7TyFVZ54bEntkBZYNfPn4qU/YGIQknh8QbzYekyH8GLpj6lkTylEuwoBaE9UPXAr8HdLVe1yib4Ebwnzk5kkj/alFD63HZ@qhfIeuZ43JbOpYIdVIs95saPUtbaNBLvsH1Y@Iceza1GMAPADeoftAcUUT32PkPzTwyQMQaKitWxqSs95F9/v4ibAZKMRldEwZI9R7cAPfm4BIEgMklc6k2cRi96Re39oiq7CeEH42my1iMb4moXOJzqd@EJLjA7N9fGwcSOHTlOI0tu8NyZ7u0Aedq6G5t94g6@sCboNwlue8BY/4nbX7Xwy5VIkx1WnCFEGAnpAqpRccqu4sxA91IcdcLk@7382L/mejWa9vwCJQ7i9n6uX3ZBrUxfHv5kHv/Lxz0DcaEdLR6eWfq@Tssk9@712ek7PvnRNyAb8OOuRL57wjHXaPO6ftk45R1p41d6JZpvtFe9RczR7U6/WGVtUsja1M6PyMTMqDcrlLatqDNi1LB73Tfue0b0j467B7ZJSl/c5R9/RFIoRcXnTM/QOj3sKH/fNO@6t53Oudmd@@dE7N7unF5eFh96CL5AKlvd8775v7572vAEdMo5EZ7x4fd47ax0DY7xx1zpFmUYZV2SNq37vebeqV7hCpwBm8cEjW2GDgEbkUL1Emrwi9DeiUqH8QtUMG@AyfcuXH69WPweBaGQwq9dc6/s//6krl6kdd3b5@LSllIoUj6iEJtUc@OUVjJzEDIZaIQRp7602ON4ewakhDV/rnkumvWeHeb73W8Q@@MqIp5bxoFzxw/0Ii0J8/80KQyb8NrImE3jJHoqxccimys5wZTsZaxPGzy7oBpDkshjzaRLXFpI7vUUkEiwi0pVh5fSXcaQS4olSitfPoPYgeHDcIJ1MIpJf@ydnn7vkOBocA2RajMLHAkHEFlXJZiYApqQ5f0WCrVdHfQNBS8LtlMEwtfq3pydStFmWWHT3w/Mi1DSKU4lVUUkbukFwRNSB8/bMAsoE/IdeQK3DYLgy3SGzS5OND9mgTj6ghcTaJekrg6yFHlqLTMaM54sqUIbXqk6nr1GjoTmhtak9ntQf2DHaEhKwIL3xruhmfKQ8OA7AOI/VGc2Pz/Yet7Y@kfDXw3l2XC3jcq7UiseWOieqRzWYBwGAfKTP9h/ZuUNEGL9uDxUAp6YOGXmRrPd6jTJahNhubW5vbGx82t0k5h/JiVY1SvbXonH5@4S5KrEUGA4JA/EgXjkzLLykKQ7VWSnWllSFDE4NvGrJ1Yzt0eDty7@7HE8@f/hGwcPbwOH96bu8ffO4cHn3p/uvr8clp7@zf5xf9y//59v33/6TqMuUM02MDAvU2HFVi7rkZ/aDiQkZ0d41GveVWq8pLbp0IvwP4HcA3W3cAz4HTAGWzGxYGyRw1GKzwFSrvjpVaIztnTETkrJiL6GeiRiVOAeKzQ/aSSNRLfB4Z98KiIHEC/AUmVDizwCP1OP4xjUSujSlOFtlihwzBk8BnQh@2VY8G4MfEIgjyAyt44hlQTtJfyreBj4q0kCR7TC3PBDG4EBWhW557VFJ6aUCiIaVPEnd4a0rKZdL53u2TL5dnBPYj8u9LeDjrnnVI@/j8hPQ75yeIG0yIOoQFxmzlhIH6t@h5ni41QL6YA9YQYs2KHO3t6K3MDtxpKHHW@ZX89TxSYg2R52EXl/f2skJLULVMQYORVrJ5vhFtWtks0UiyxFJyQHvn8kM2LawSP7i1PPeZkrELmynUiOCnsLMLYEBt/5ZDH6yxi7a@hxpRSpPA517f2Pwgoj8tQuAzZkAV1Ri4U0ycq0ajeW3gj@36tSFP5TysIWBbHwHmF2D1CLYNMC8Pq7@PYBsAc3OwjwCSzfzQR4H9YQtAdmGWiNM2cmIF2HYE@wCwh4IE0aq2cFXDAixa1QdcFS3w3Ix4Ar0cFGCRnNso52Me1oy0sY3amBdg0XzbON9TARbJ@RHlfM6rZSsSEzVmFUT5ELEEceWwsLxIzC0Uc1KARWJ@QDGdHGwTNVzND@HMam5oA7FW8kOo/lJ@CKdeS4aEP/InnjFjd4S27cH1Z8yIvPyK@@d1TBaPVqtiHDcvKS4dKgmxAezX10t1LDNg8uxmgDsBp1WNZov/EN@qqiyn9qEcB9uaM/Dk2ttCJRsBrrNUT8YXyepwe01LoMpP5/27ky7KcVZ4HLn2iPhDgnsqbAGUQW6fWCEMYnP7SWBR7VYjj2Q@n2Pm9@OfjwIKRZclSLHx48Q1XloRplt6WyfYlLm30OVSMpwFAAkEIfNJG1TsYLMM1DcBZh1iZdKOR1k4fjDqIvHoP65QzOuSHmuDT4aCgkUFbtakXB0tj87D1FH0H1ZKDjaPZjDqWSNzQrktt/gmUc8ZJEu2t0w1lK01G9WeiiZwVTVr8ESonJ0brcQwluOQsXUDRSZ/FoPdk26/3e@eHpGjXr9HLuChcwJtwgX51oVG97B3fNz7huD2t6/k4rR7dtbp7whS7jctIe6qWANnb0Bumc9l5QW@FzEQS9tfY2ialkXmMHjqB25UKfj47UFJMXdZiB0k5yVoFpkluZ4butZ4/ARlkBgB94ACA/5G/iPwCX0VyKNVcC9Fd4IGn3OFAAV/ImPfh0KF6SW9phcwueMhaopHOOZvEab1aM0fnyyBbfse8J3l8Zle@@1dyhoJrJjgJqDW/TJ7ThDP0N5BZeBGP6YhhaU67nAIq4SQj2quVdLb73@LI0CwwaWDBh9RH3FIZPZfYRtZXvADF6FecCuKZ1DiHAlqZTK1glB41tsBJHyzWo19EerXCmTeGv7HWSq5YCKymEcW8@XC6m3WqppjjXoB3r/9fe5JRIAqsL7z2Bgr0Oiwh6FmrSl02MABx0GhTIq7HCGZYJrIxXR9UXRwPYGVdPD0@PEms744qWb5TGdsVMnSKsuU0GlNSzrkWajxVqC2DJ8qijKdhXiuUZn60I0LIsDzSzrI9BdI3hISHj3e0iKeWxLi4VEYckkhZgqJSVOgXWQPiGGOMStgIDCGPZR02ENpwGg6NizpmfYKAwwc3@Q7GDZafIZo9Mq9TshoSQePCXxcX4Zb8IZ8mSZL6CDBjn0STQ1BZcI8TkVelxXlDUfnTpGMJy4a87IGFcEO2@U8w0Ej5hj591tMi64f822X9CiWP8mtKP/QGBjmlxv6I2pNC5aecBwOiBQyDPxJ9BwjOSWdp6pEM9WV0poqVIO2qCh7RlOxAtiwJuAXNtcSR04CEDg6YFqe9oa@D@HAI62SHIqVeXEU5SXcbDIRBlHFwxG2@hSfS5QE49IRpWLd@EFooqIFH0V0xbypfMlMO/NsPG2HcsD1IswXFlr2/ZXrGFCf1sXUotPKnr6lPBYJk4zXcVY1lmzyzBCqagnm1arrAHMpe4ZQBydn3LEzhQHaJJZHbdTAywsCxcd9qTzJVA7FTYOYaE8kV6//u/mqfD5Q3IIUOs9VNEa2g27xpliSYLuC3C1ODZMzS2jLyyNXm85pmbQ1@I/4RHt8vmO@dqfNtWftUbOINifaE7Huqa85MOBoVLPi8wtxqFCay/mlz5NFi4NMPC8AsXKykt3d8uHl6UG/2zu9KEuJqbh/VCbsNtM8E3h8lZEFHkmIhkGcybaQN1SdkWKuicsIKjkzBqoiI4sRyPUTViN1KD0cOqdOjAIe5rnT2Vhc7iRyROH5Ep18JDNAWblIsYRBl5AyGNxwpps6by3BqlavDdPN4mIOKDKrqWpCkWUcvomcoKqNLHKcwU23Zt4JzaKvmehsJnhbTKU34TFzVGbeGQlr002q3eyY8dbc6lvIBbhh3kXFBrchBgP8M5mBm0YB8ogNh1ghv7CAFJgJ5XR1Ii/GunAd9G0eXBkNpPkzxovDL69UjoP2SsDcRiCZ68PXHYrH@BUer1V5OQfj1hg6Hw68eQLJGf1jRj2bRtCbGTZRTzdUXERaNr@jA2K8bZjhRWTWYcTmjjJkjo/kAXzWfGxDTFfKOViy5aN1bUEFuRfsmvYyMdfN90oL2zQooWMTu@8MtZGWfdwvbNjZTXs3Pl8FWeAx4xcxu@hslE9cayjVzW3O3mJsxvXTvjjodmMjJyLH9YsZJMLyvtyceQC6mQ1T/wuMZPAqbaPjBPoGKDZukK4I2GNhNAafgXFlFxrDPHK0/AxpRlg@R2KR7JT54HUZm1o25VgRp8rHXcBZXzfxDHpTeX2FeDM2mgvuL7c@35gJw1NHyE/CzhV5zZFr66BvQMppLDEy2q6GGg/SQG5hKKdl4QpYdH09I1ErXjFfKGdhRGfU3FMMY3NDiAcOkmmlo5GYIj3lyU6X0zSsdXP79fX91m7swGL8zUvJzAYn8r6smTv8yMHySLRg@Be8TU7aCt6bpnSrxJl50Cy5Q7DfLaTxANuH1GgK93Ve4IQjcElG8GbeD7Mcel/bvxPwKJYH5CzfWj5kX272VwneEPFezXFv3ZAXU@jDKEMrMdbmduoX77daOdNlPT@ABprA5CqGVTLJslg5x@VXlJ7jot9Y48LGmi284tCLy7lPcmyO2BbWDpmAE2Ega481qATg76mGCtSeI4NkbsxiKpmYY4uFvI4mcoaFhTSZiEmrbf5dM3l/WzMZxUchX8rK4N@Jy/IhPGDNOllcUy/ZauVX1@mF1MF34ZXo/HshFVwuqa13m/9wGrFMg0@TjIk15wczy5zLSmJlTr4bUbyB@1TE3fs57nMRd8XIIkdb8@PoibjEmsAeFp2LuHimGBtyh59NjSDExpSRsTtx8b0W6N5uKR5DRnHMasCJsim1xdkQ5PvDgNL9i88tUp9vHYoPFnB47DKx5oQ32ADbrosPwmBXkaKTFZzU5YcFYmoC9eGYgruQ497pEQ976qSzR@eiQLFnkI0muYHwxHdnTtq/73dgo/qK71@cX5B@j3zuHHQ/dwhYsP@lc44jACL7B5lgSpsq05/ybHxXM@@TmBKvcqTB7EaWhXpqycTublySRcj3kBwwKUB9BPjmffGsEkAs3i14Bb7GBvKaDX@MvOIl0mCwMhiU4J93Ogzc2DIXEOW8Sz3uzoCpAZzsjPc5qe7eyM0Q2f4UQzpdfnSTmKZnUe/eKz@NHmBh4BWCQpJGn6ukGvX5rSLqyhLqu5@hqnLu8DZHpBaIBB2vonfrhYP@/GxqI6Va5Kb8X/mqtHadm/Snpo6t/Q4ARmHCJQU/08BXHffBZeBt8hKPgsf8ymkyMmdXJvRVkj@Zrm7e7ZjuGrBUCjvaQko6tJ90cN3Tbr8snZ4bRuMlvfY3oTx2zOgACCpJPBlfANae0YRNLwuM40WnnmPrSnoHAE2/kj2qX4gOUxwpVavZIyd@PSAO3xcSCoTdbtm/CYEJYf4ssKG95Y1vZQcbyA0l@/pYdH1eaJs5HhC98frRS3119Z2@IBt7eOSA6SeaKr5Jd6Lr5egCnWfQIb7CN36SKtEtiTjagjYB@tD/1zsuhbdbHsQLLsW3WzK79H/zRstP32X564vq5VdY3nh55a3XVvJvrfzyfRXxpsryiyriFRVx268Ni1fwyatZ//AiPjn3QJeNJhLWjV8KExXrP@SuYEqONMc7qYTJxL0dQXtJb8HX@FuqvLqXuIpyb01wQnBoHj/gfNAugzyojokV4lt3qBjRw2JTG@n4BN@ViF@ybJ8fmSft77lAgRDi696sf/ygyCR@c/FEN5qtE9XYxlsL0S/iri9HOoeGVYq6SEYgOeydRMZiLYZXHdILMxCwkFI7Mn5DMLcCqNbVLnmO7ff8Z7c8IZArqfN/"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
<h2>With comments</h2>
<pre><code>XX.Z
.A.zXX.Z
  # push(getchar())
  .A.iXX.Z
  # constant 'm' charcode
  .AXXm.Z
# break loop if pop==pop
.A.aXX.Z
# &quot;Hi&quot; and dummy
.AXX_iH.Z
# dummy is popped before entering loop
.A.wXX.Z
  # keep pushing until EOF (-1) is met
  .A.i.c\0001.+.aXX.Z
# discard final EOF
.A.sXX.Z
# &quot;, I'm Pxem!&quot;
# reverse stack before printing each item
.A!mexP m'I ,.v.p
</code></pre>
","","user100411"
"235465","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 85 bytes.</h1>
<pre><code>DO;1&lt;-#1DOCOMEFROM#2DOWRITEIN;1(1)DO:1&lt;-;1SUB#1DDOCOMEFROM':1~:1'~#1(2)DOREADOUT;1+;1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>With comments, though I don't know its necessity</h2>
<pre><code>DONOTE length of array
DO;1&lt;-#1
DOCOMEFROM#2
DONOTE perform getchar() for a time to store to ;1SUB#1
DOWRITEIN;1
DONOTE EOF: zero; otherwise: at least 65536
(1)DO:1&lt;-;1SUB#1
DONOTE die here
D
DONOTE ':1~:1'~#1: zero if EOF one otherwise
DOCOMEFROM':1~:1'~#1
DONOTE putchar() twice
(2)DOREADOUT;1+;1
</code></pre>
","","user100411"
"235469","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, <s>356</s> 352 bytes.</h1>
<p>Assumes adjective and noun has &lt;100 characters.</p>
<pre><code>DO;1&lt;-#3DO;2&lt;-#99DOWRITEIN;1+;2DO;3&lt;-#2DO;3SUB#1&lt;-#29DO;3SUB#2&lt;-#1118DO;4&lt;-#1DO;4SUB#1&lt;-#127DO;6&lt;-#1DO;6SUB#1&lt;-#117DO;5&lt;-#13DO;5SUB#1&lt;-#16DO;5SUB#2&lt;-#368DO;5SUB#3&lt;-#368DO;5SUB#4&lt;-#274DO;5SUB#5&lt;-#103DO;5SUB#6&lt;-#376DO;5SUB#7&lt;-#217DO;5SUB#8&lt;-#374DO;5SUB#9&lt;-#356DO;5SUB#10&lt;-#374DO;5SUB#11&lt;-#375DO;5SUB#12&lt;-#1353DO;5SUB#13&lt;-#276DOREADOUT;3+;2+;4+;6+;1+;6+;5
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>With comments</h2>
<pre><code>DONOTE ;1 for &quot;I'm&quot;, ;2 for rest of input
DO;1&lt;-#3
DO;2&lt;-#99
DOWRITEIN;1+;2
DONOTE ;3 for &quot;Hi&quot;
DO;3&lt;-#2DO;3SUB#1&lt;-#29DO;3SUB#2&lt;-#1118
DONOTE ;4 for &quot;,&quot;
DO;4&lt;-#1DO;4SUB#1&lt;-#127
DONOTE ;6 for &quot; &quot;
DO;6&lt;-#1DO;6SUB#1&lt;-#117
DONOTE ;5 for &quot;CLC-INTERCAL!&quot;
DO;5&lt;-#13DO;5SUB#1&lt;-#16DO;5SUB#2&lt;-#368DO;5SUB#3&lt;-#368DO;5SUB#4&lt;-#274DO;5SUB#5&lt;-#103DO;5SUB#6&lt;-#376DO;5SUB#7&lt;-#217DO;5SUB#8&lt;-#374DO;5SUB#9&lt;-#356DO;5SUB#10&lt;-#374DO;5SUB#11&lt;-#375DO;5SUB#12&lt;-#1353DO;5SUB#13&lt;-#276
DONOTE concatenate those strings
DOREADOUT;3+;2+;4+;6+;1+;6+;5
</code></pre>
","","user100411"
"235471","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 26 bytes</h1>
<pre><code>DOCOMEFROM#1(1)DOREADOUT#0
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/F39nf19UtyN9X2VDDUNPFP8jV0cU/NETZ4P9/AA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<p>This works for both C-INTERCAL and CLC-INTERCAL.</p>
","","user100411"
"235472","<h1><a href=""https://github.com/TryItOnline/grass"" rel=""nofollow noreferrer"">Grass</a>, 11 bytes</h1>
<p>Taken from <a href=""http://www.blue.sky.or.jp/grass/doc_ja.html"" rel=""nofollow noreferrer"">original document (Japanese)</a>:</p>
<pre><code>wWWwwwwWWww
</code></pre>
<p><a href=""https://tio.run/##Sy9KLC7@/788PLwcCEDk//8A"" rel=""nofollow noreferrer"" title=""Grass – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<p>In pseudo code:</p>
<pre><code>function f(x){
   Out(&quot;w&quot;);
   return x(x);
}
f(f)
</code></pre>
","","user100411"
"235573","<h1>CLC-INTERCAL (sick) can <code>ABSTAIN</code> and/or <code>REINSTATE</code> non-existing label.</h1>
<p>C-INTERCAL (ick), on the other hand, makes it compiler error.</p>
","","user100411"
"235638","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a> 1.-94.-2, <a href=""http://oeis.org/A001477"" rel=""nofollow noreferrer"">A001477</a>, safe, score: 16.</h1>
<p>Byteset:</p>
<pre><code>@ABDEHIP`abdehip
</code></pre>
<p>You may use any i/o method.
Also you may use any compiler option.</p>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online!</a> Submitting as CLC-INTRCAL does not let you set compiler option, so you might need to try as shell.</p>
<h2>The answer</h2>
<pre><code>D`h@I@`P@pAB@d@p`DPb@PD`h@`P@d@aD`h@E@ABPb@P
</code></pre>
<p>This is equivalent to <code>DOWRITEIN.1DOREADOUT.1</code> in Hollerith character set; so input range is <code>OH</code> or <code>ZERO</code> to <code>SIX FIVE FIVE THREE FIVE</code> (inclusive).</p>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try the following Bash script online:</a></p>
<pre><code>printf 'D`h@I@`P@pAB@d@p`DPb@PD`h@`P@d@aD`h@E@ABPb@P'&gt;.i;sick -h .i;./.io
</code></pre>
<h3>How it works</h3>
<p>The code can be in Hollerith character set. However, <a href=""https://groups.google.com/g/alt.lang.intercal/c/JFxcHOjY2lc"" rel=""nofollow noreferrer"">it is implemented incorrectly</a> so the code above is for such behaviour as in implementation, not for documentation.</p>
<p><a href=""https://tio.run/##TY5hS8MwEIa/51ccp6MrjZBra@nc@kGHyqDsD5Q42uA025ilGxrQ/vaapS3sw@V97@65l@xPn1330bzXcPcN3tuNB3@QLzePeZ4tofzZg/f0/Lpa/57qgz5PURiC0AgQJoTYaQyp0xQocYYS2EDUQ1GIvPRZWQiZIRmB7RiEvOL4gD7bfjVTnYm5DoLF@mXuD0BZ3GrJFUczMDvQR1B@VexkkCn7tnWjj@ctTtREIU/ioCpI9hrK1us6sl9kRJAwYcuaGbOjme2ii7nvOzt3LoKUOWC4GXm3JHYdFo8R7uYf"" rel=""nofollow noreferrer"">Here is the script to accept punch lines to generate a program in Hollerith.</a></p>
<p>Also why doesn't the compiler guess anything other than ASCII? So I had to force it to use my intended character code, by <code>-h</code>.</p>
<h3>See also</h3>
<p><a href=""https://codegolf.stackexchange.com/a/235691/100411"">My answer on Print X without X</a></p>
","","user100411"
"235659","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 108 bytes.</h1>
<pre><code>DO;1&lt;-#1DO;1SUB#1&lt;-#117DO;2&lt;-#1DOCOMEFROM#9DOWRITEIN;2(1)DO:1&lt;-;2SUB#1DDOCOMEFROM':1~:1'~#1(9)DOREADOUT;2+;1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>How it works</h2>
<pre><code>DONOTE ;1 has &quot; &quot;
DONOTE ;2 shall accept a character
DO;1&lt;-#1
DO;1SUB#1&lt;-#117
DO;2&lt;-#1

DOCOMEFROM#9
  DOWRITEIN;2
  DONOTE if EOF, then :1 will be #0
  DONOTE otherwise it's at least #65536
  (1)DO:1&lt;-;2SUB#1
  DONOTE error exit here
  D
  DONOTE come here if not EOF
  DOCOMEFROM':1~:1'~#1
(9)DOREADOUT;2+;1
<span class=""math-container"">```</span>
</code></pre>
","","user100411"
"235660","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 82 bytes.</h1>
<pre><code>DO;2&lt;-#1DOCOMEFROM#9DOWRITEIN;2(1)DO:1&lt;-;2SUB#1DDOCOMEFROM':1~:1'~#1(9)DOREADOUT;2
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>How it works</h2>
<pre><code>DONOTE it shall have at most one byte
DO;2&lt;-#1

DOCOMEFROM#9
   DONOTE similar to getchar() but not really
   DOWRITEIN;2
   DONOTE checks if EOF
   (1)DO:1&lt;-;2SUB#1
   DONOTE error exit
   D
   DONOTE come here unless EOF
   DOCOMEFROM':1~:1'~#1
   DONOTE no need to modify the array before outputting
   (9)DOREADOUT;2
</code></pre>
<h3>How I/O works in CLC-INTERCAL</h3>
<ul>
<li>Has four methods but I know only three.</li>
<li><strong>Numeric I/O.</strong> Applied for spot and two-spot variables, almost as in INTERCAL-72 and C-INTERCAL.
<ul>
<li>Input is done for each line. Each digit spelled. E.g. <code>ONE THREE TWO</code>.</li>
<li>Output is done for each line, in Roman number. Instead of overlines, backslashes are used to indicate &quot;times 1M&quot;.</li>
</ul>
</li>
<li><strong>Baudot I/O.</strong> Applied for tail. Input is done like <code>gets()</code>; outputs like <code>puts()</code> so it's done every line.
<ul>
<li>It uses extended Baudot character set; a character <code>`</code> is missing.</li>
</ul>
</li>
<li><strong>Binary I/O</strong>. Applied for hybrid array.
<ul>
<li>How WRITE IN works: if an array to be WRITTEN has N items, then N bytes are WRITTEN.
<ol>
<li>Let io=172 and i=1.</li>
<li>If i&gt;N; then end.</li>
<li>Let c=getchar().</li>
<li>If c is EOF, then i-th item will be #0.</li>
<li>If c is not EOF, then i-th item will be interleave(select(c,io),select(~c,~io)). In this expression c and io have 8 bits.</li>
<li>If c is not EOF, then io=c.</li>
<li>If c is not EOF, then most significant 16 bits of i-th item will be randomized so that at least one bit of them will be 1.</li>
<li>Increment i. Go to step 2.</li>
</ol>
</li>
<li>READING OUT is done in reverse way.</li>
<li>Variable &quot;io&quot; is initialized to 172 every time you WRITEIN and READOUT.</li>
</ul>
</li>
</ul>
","","user100411"
"235672","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a> 1.-98.-2, 198 bytes, safe.</h1>
<p>33 bytes are revealed:</p>
<pre><code>__#3__#9__,1_____________________________3__3__-_3__3__________-_33_D_______&amp;_________-_____________-___D_#4__#28D______________-________B#__-_V________________-_V_______________________________U___
</code></pre>
<p>Output is:</p>
<pre><code>!-&gt;Ma

</code></pre>
<p>Should I post shorter one next time?</p>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online!</a></p>
<h2>Answer</h2>
<p>Sorry for irrationally difficult problem.</p>
<blockquote class=""spoiler"">
<p> <code>DO#3&lt;-#9DO,1&lt;-#3DO,1SUB#3&lt;-#3~#3DO,1SUB'#3~#3'&lt;-#3~#3DO,1SUB#5&lt;-#338DO,1SUB&quot;&amp;'#3~#3'&quot;&lt;-#27DO,1SUB#4&lt;-#27DO#4&lt;-#28DO,1SUB'#4~#4'&lt;-#4DO,1SUB#6&lt;-&quot;V'#V4'&quot;DO,1SUB#8&lt;-'V&quot;V'#V4'&quot;'DO,1SUB#2&lt;-#333DOREADOUT,1</code></p>
</blockquote>
<h3>How it works</h3>
<blockquote class=""spoiler"">
<p> <code>DO#3&lt;-#9</code> changes meaning of the constant.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1&lt;-#3</code> lets array to have nine item; note previous statement.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#3&lt;-#3~#3</code> is equivalent to <code>DO,1SUB#9&lt;-#9~#9</code>, which is equivalent to <code>DO,1SUB#9&lt;-#3</code>.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB'#3~#3'&lt;-#3~#3</code> does <code>,1SUB#3&lt;-#3</code>.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#5&lt;-#338</code> is equal to <code>DO,1SUB#5&lt;-#18</code> when <code>READ</code>ing <code>OUT</code>; this is how Baudot character set works; it cares for only lower five octets.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB&quot;&amp;'#3~#3'&quot;&lt;-#27</code> does <code>,1SUB#1&lt;-#27</code>.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#4&lt;-#27</code> is obvious, as none of those constants are not overloaded yet.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO#4&lt;-#28</code> now overloads the operand.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB'#4~#4'&lt;-#4</code> now does <code>,1SUB#7&lt;-#28</code>.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#6&lt;-&quot;V'#V4'&quot;</code> is actually <code>DO,1SUB#6&lt;-#30</code>.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#8&lt;-'V&quot;V'#V4'&quot;'</code> does <code>,1SUB#8&lt;-#31</code></p>
</blockquote>
<blockquote class=""spoiler"">
<p> <code>DO,1SUB#2&lt;-#333</code> does what it says.</p>
</blockquote>
<blockquote class=""spoiler"">
<p> Finally, output is done by <code>DOREADOUT,1</code>.</p>
</blockquote>
<p>By the way the reason why an array requires 9 items to output 5 characters is: tail arrays adopt extended Baudot character set. The character set has a concept of &quot;state&quot;: uppercase, lowercase, figures, and symbols. When a same value is READ OUT with different state, the different character is READ OUT</p>
","","user100411"
"235683","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 39 bytes</h1>
<p>Domain is <code>ZERO</code> or <code>OH</code> to <code>FOUR TWO NINE FOUR NINE SIX SEVEN TWO NINE FIVE</code>. <code>_</code> (zero) for even and <code>I</code> (one) for odd. Also works in CLC-INTERCAL.</p>
<pre><code>DOWRITEIN:1DO:1&lt;-':1~#1'PLEASEREADOUT:1
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FPzzIM8TV08/K0MXfytBGV93KsE7ZUD3Ax9Ux2DXI1dHFPzTEyvD/fzf/0CCFkHB/BT9PP1cFMA/MCvaMUAh2DXP1Q5L0DHPlAgA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"235685","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a> (C-INTERCAL), <s>303</s> <s>236</s> 229 bytes</h1>
<ol>
<li>Forgot one more PLEASEDO to replace with PLEASE.</li>
<li>Also .2&lt;-.4~#255 to .2&lt;-.4.</li>
</ol>
<pre><code>DO,1&lt;-#1DOCOMEFROM#3DOWRITEIN,1(1)DO.1&lt;-,1SUB#1DO.2&lt;-.4DO(1000)NEXTDO.4&lt;-.3PLEASE.3&lt;-!3~#15'$!3~#240'DO.3&lt;-!3~#15'$!3~#240'DO.2&lt;-!3~#15'$!3~#240'PLEASE.1&lt;-.5DO(1010)NEXTDO.5&lt;-.2DO,1SUB#1&lt;-.3(3)PLEASEREADOUT,1PLEASECOMEFROM.1~#256
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FX8fQRlfZ0MXf2d/X1S3I31fZ2MU/PMgzxNXTT8dQw1DTxV8PqELHMDjUCaRMz8hGV8/ExV/D0MDAQNPPNSIEKGYCFDMO8HF1DHbVM7bRVTSuUzY0VVcB0UYmBupAFdhFjTBFoaYArdQzBdtiCLfFFChmBHIw2CkgKzWMNSHqg1wdXfxDQ3QMIVyYX/QMgYaamv3//7R1xePGZY8bmx43rnrcOP9x47pnnQ3Pm3Y9blz@uHHm44YmLq6C4qzUfIXizOKscoXEjPIsAA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h2>Previous</h2>
<p>Seeing original code, I noticed that program should end when .1 (,1SUB#1) has #256, so I erased some NEXT and RESUME statements to replace with <code>(1)DO.1&lt;-...</code> and <code>PLEASECOMEFROM.1~#256</code>. It works, even the expression <code>.1~#256</code> evaluates to zero when not reached to EOF. Additionally, replacing <code>.1</code> with <code>',1SUB#1'</code> worked; this is opposed to CLC-INTERCAL. This is really a golfing tip.</p>
<p>Also I almost forgot that every variable is initialized with zero.</p>
<pre><code>DO,1&lt;-#1DOCOMEFROM#3DOWRITEIN,1(1)DO.1&lt;-,1SUB#1DO.2&lt;-.4DO(1000)NEXTDO.4&lt;-.3~#255PLEASEDO.3&lt;-!3~#15'$!3~#240'DO.3&lt;-!3~#15'$!3~#240'DO.2&lt;-!3~#15'$!3~#240'PLEASE.1&lt;-.5DO(1010)NEXTDO.5&lt;-.2DO,1SUB#1&lt;-.3(3)PLEASEREADOUT,1PLEASECOMEFROM.1~#256
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FX8fQRlfZ0MXf2d/X1S3I31fZ2MU/PMgzxNXTT8dQw1DTxV8PqELHMDjUCaRMz8hGV8/ExV/D0MDAQNPPNSIEKGYCFDOuUzYyNQ3wcXUMdgUKGdvoKgKFDE3VVUC0kYmBOk5RI0xRiDkgm/VMwZYZwi0zBYoZgdwNdhHIZg1jTYj6IFdHF//QEB1DCBfmJT1DkNvM/v9/2rriceOyx41NjxtXPW6c/7hx3bPOhudNux43Ln/cOPNxQxMXV0FxVmq@QnFmcVa5QmJGeRYA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h2>Prev.: 303 bytes.</h2>
<p>Yesterday I showed you making a <em>short</em> cat program in CLC-INTERCAL is easy; but it's not really in C-INTERCAL, due to its I/O system.</p>
<p>The following program <a href=""https://ofb.net/%7Ejlm/pit/icat.i"" rel=""nofollow noreferrer"">originates</a> Louis Howell's; I reduced the code for this golf problem. This seemed to be the shortest one that satisfies politeness check.</p>
<pre><code>DO,1&lt;-#1DO.4&lt;-#0DO.5&lt;-#0DOCOMEFROM#3DOWRITEIN,1DO.1&lt;-,1SUB#1DO(1)NEXTDO_(2)PLEASERESUME'?.1$#256'~'#256$#256'(1)DO(2)NEXTDOFORGET#1PLEASE.2&lt;-.4DO(1000)NEXTDO.4&lt;-.3~#255PLEASEDO.3&lt;-!3~#15'$!3~#240'DO.3&lt;-!3~#15'$!3~#240'DO.2&lt;-!3~#15'$!3~#240'PLEASE.1&lt;-.5DO(1010)NEXTDO.5&lt;-.2DO,1SUB#1&lt;-.3(3)PLEASEREADOUT,1
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FX8fQRlfZ0MVfzwRIGwBpUwjt7O/r6hbk76ts7OIfHuQZ4urppwNSBlSuYxgc6gTSo2Go6ecaEeLiH69hpBng4@oY7BrkGhzq66pur2eoomxkaqZepw6iIGygcqAeI6geN/8gd9cQZUOIPj0jG109E5CRBgYGUBUgJ@kZ1wH1mkIUAYWMbXQVgUKGpuoqINrIxEAdp6gRpijUMqAn9EzBlhnCLQP6W88IFB5gz4Fs1jCGe8rRxT80RMfw//@nrSseNy573Nj0uHHV48b5jxvXPetseN6063Hj8seNMx83NHFxFRRnpeYrFGcWZ5UrJGaUZwEA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"235689","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a> (C-INTERCAL), 229 bytes</h1>
<p>This version accepts any integers, in decimal (e.g. <code>-156</code>); requires to be terminated with EOF.</p>
<p>Outputs <code>_</code> for even and <code>I</code> for odd.</p>
<pre><code>DO,1&lt;-#1DOCOMEFROM#3DOWRITEIN,1(1)DO.1&lt;-,1SUB#1DO.2&lt;-.4DO(1000)NEXTDO.4&lt;-.3PLEASE.3&lt;-!3~#15'$!3~#240'DO.3&lt;-!3~#15'$!3~#240'DO.2&lt;-!3~#15'$!3~#240'PLEASE.1&lt;-.5DO(1010)NEXT(3)DO.5&lt;-.2PLEASECOMEFROM.1~#256DO.2&lt;-.2~#128PLEASEREADOUT.2
</code></pre>
<p><a href=""https://tio.run/##bY5BC4JAEIV/SxiooMvO7G4UeLF2AyGdWJW6RnQIokN07q9vY9qpTgMf37z3rvfn5XE@3UKwlEGRR2BpQ7XbeqojZengq85VTQYJpJYEGxm0/XrQBBa50JYSkFKmjTt2zDQztd@5snVCFflMvSIw8Xy4qGXMxn@Kv3RK4UphPi0wtiRqWGIY46h89wrgR7OYliGn4XI0vCst9Z3AEPQK3g"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<ul>
<li>First part is taken from <a href=""https://codegolf.stackexchange.com/a/235685/100411"">229 bytes of cat program</a> but without READing out character.</li>
<li>In ASCII <code>0</code> is 48, <code>1</code> is 49, ... <code>9</code> is 57.</li>
<li>But C-INTERCAL reverses bit order, so <code>0</code> is 0x0c, <code>1</code> is 0x8c, ... <code>9</code> is 0x9c.</li>
<li>If bit at 0x80 is 1, then it's odd digit.</li>
</ul>
","","user100411"
"235691","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, score: 7, safe.</h1>
<p>For clarification here is a sequence of seven octets to output in hex:</p>
<pre><code>52 45 41 44 4f 55 54
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online!</a></p>
<h2>The answer</h2>
<p>Here is <code>od -t x1 -v</code> of source:</p>
<pre><code>0000000 c4 d6 5e f1 4c 60 7b f7 c4 d6 5e f1 e2 e4 c2 7b
0000020 f1 4c 60 7b f1 c4 d6 5e f1 e2 e4 c2 7b f2 4c 60
0000040 7b f3 f6 f8 c4 d6 5e f1 e2 e4 c2 7b f3 4c 60 7b
0000060 f3 f7 f5 c4 d6 5e f1 e2 e4 c2 7b f4 4c 60 7b f1
0000100 f3 f6 f9 c4 d6 5e f1 e2 e4 c2 7b f5 4c 60 7b f1
0000120 f3 f5 f4 c4 d6 5e f1 e2 e4 c2 7b f6 4c 60 7b f5
0000140 f6 f6 c4 d6 5e f1 e2 e4 c2 7b f7 4c 60 7b f2 f5
0000160 f3 c4 d6 d9 c5 c1 c4 d6 e4 e3 5e f1
0000174
</code></pre>
<p>It's:</p>
<pre><code>DO;1&lt;-#7DO;1SUB#1&lt;-#1DO;1SUB#2&lt;-#368DO;1SUB#3&lt;-#375DO;1SUB#4&lt;-#1369DO;1SUB#5&lt;-#1354DO;1SUB#6&lt;-#566DO;1SUB#7&lt;-#253DOREADOUT;1
</code></pre>
<p>in EBCDIC.</p>
<p>You may need compiler option <code>-e</code>, as character set guessing does not work.</p>
<h3>See also</h3>
<p><a href=""https://codegolf.stackexchange.com/a/235638/100411"">My answer on Restricted mini challenge</a></p>
","","user100411"
"235785","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 13 bytes, sequence <a href=""https://oeis.org/A010888"" rel=""nofollow noreferrer"">A010888</a>, <a href=""https://codegolf.stackexchange.com/a/235788/78410"">cracked (17 bytes)</a>.</h1>
<p>I think this is an easy problem.</p>

<pre class=""lang-bash prettyprint-override""><code>x=
echo ${#x}
</code></pre>
<p>I've hidden an 18 bytes of string.</p>
<p><a href=""https://tio.run/##S0oszvj/v8KWKzU5I19BpVq5ovb/fwA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>Intended solution</h2>
<p>Insert the following string between first and second lines:</p>
<pre class=""lang-bash prettyprint-override""><code>x=x${x#xxxxxxxxx}

</code></pre>
","","user100411"
"235834","<h1><a href=""https://esolangs.org/wiki/BrainCrash"" rel=""nofollow noreferrer"">BrainCrash</a>, <s>43</s> 22 bytes.</h1>
<pre><code>^^+++++++++++.&gt;&gt;[.&lt;.&gt;]
</code></pre>
<p>I'll golf off later.</p>
<p><a href=""https://tio.run/##XVNNb5tAEL37VwzKNgGxgHGcNDWG@FCp7aWXVuohihHGa7MyXgi71Ekd8tfdWT5kJUhodt68nTf7FkpW5TenC8OrZeXlRZrk3ooLr0QYnD@jC6hlsmUwgxZZVQkXaZXIzC1zkEVdpcxdpTAHLspauepZ4RaVJWInYVNU8PLveVRLBlJVPFWBXh6SSnCxlcH@BRb70Pw8of7Yx/eue32fTqf0GlH/S5v5/rSvjun1tYX7CA/HOpRtgAUXOpNVGhzbIwDxAp2G8/nV97iIv8XsKjgtl/b5caPowZ270eOpJ4z4xmz3vHnUs45aRMhw/uv31x8/I91eoVhZywzVqKxXeCLNoETZNvUPGc8Z5ExsVabhiKimGSEN0q3uVeTrUGZ8o7DTAh0ITX9yR2@7c97SOzqluGjPJtgBldA8UxOtowbskMRQi5xJSeJL3a3RcKMFtkylkyO54CJy/PtWBEecpVkFk5ubhv1FPzRPj7HrfEuLNQufDoaByad0v9ZriIDsH0j5GI47IRNT20bACvB@Sek42qEyGmNuD1yzjyFKWffjWZfafgDOB4p130XHnyE3ABfKigtl4pwDAxs/QOvkgBzhERp4HVp14XUYLIDL95XLc2X5vrI8V96GSrodZAIjIGjD8cmgRqPN6BlFtTZbe01Lc/rR4rC/fvxaKNnp68db0p66YduGxI1LPL6BNdtwwdYDGOSJVMA3ZBf1Xwp2aPqdqPrBENtGS97ZYTROZFqB/oPIAvssTv8B"" rel=""nofollow noreferrer"" title=""Perl 5 – Try It Online"">Try it online!</a></p>
","","user100411"
"235904","<h1><a href=""http://www.snobol4.org/csnobol4/"" rel=""nofollow noreferrer"">SNOBOL4 (CSNOBOL4)</a>, 43 bytes</h1>
<p>Outputs two trailing LFs.</p>
<pre><code> output =dupl(dupl('*',10) char(10),10)
end
</code></pre>
<p><a href=""https://tio.run/##K87LT8rPMfn/XyG/tKSgtETBNqW0IEcDTKhrqesYGmgqJGckFmkAGSAOV2peyv//AA"" rel=""nofollow noreferrer"" title=""SNOBOL4 (CSNOBOL4) – Try It Online"">Try it online!</a></p>
","","user100411"
"235905","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 67 bytes.</h1>
<p>Outputs <code>1#D</code>. It was difficult to adjest program length. Eventually I decided to do <code>\#9</code>; this caused no side effects.</p>
<pre><code>DO;1&lt;-#9\#9DO;1SUB#1&lt;-#100DO;1SUB#2&lt;-#374DO;1SUB#3&lt;-#276DOREADOUT;1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
","","user100411"
"235906","<h1><a href=""https://esolangs.org/wiki/FerNANDo"" rel=""nofollow noreferrer"">FerNANDo</a>, 381 bytes</h1>
<p>Outputting language name as <code>ferNANDo</code>, as in esolang page title.</p>
<pre><code>0 A S D F G H J K
0 Q W E R T Y U I
1 0 1 1 0 1 1 0 1
0 1 0 0 1 0 0 0
0 1 1 0 1 0 0 1
? a b c d e f g h
?
a b c d e f g h
? a b c d e f g h
?
0 0 1 0 1 1 0 0
0 0 1 0 0 0 0 0
A S D F G H J K
Q W E R T Y U I
0 1 1 0 1 1 0 1
0 0 1 0 0 0 0 0
0 1 1 0 0 1 1 0
0 1 1 0 0 1 0 1
0 1 1 1 0 0 1 0
0 1 0 0 1 1 1 0
0 1 0 0 0 0 0 1
0 1 0 0 1 1 1 0
0 1 0 0 0 1 0 0
0 1 1 0 1 1 1 1
0 0 1 0 0 0 0 1
</code></pre>
<p><a href=""https://tio.run/##dZA7DsIwEET7PcXraNcniJD4BSp@QpSBOFCQgKDi9EZyMDgOyNKuZtY7nnFl703RlFfnlCFrRkyYMmPOQpQlO8as2LBnSy4GxRBVUd9DVfnOPSsZBQeOlFgqTpwlkx7z407QbNVUojc8Tr2mTvs@u/sf5bZ3cMgVMVFO08H6zvl/bpJ/8SfxY5zLBzWPi7W35ws"" rel=""nofollow noreferrer"" title=""FerNANDo – Try It Online"">Try it online!</a></p>
<h2>How it works</h2>
<pre><code># accepts I
0 A S D F G H J K
# accepts '
0 Q W E R T Y U I
# accepts m
1 0 1 1 0 1 1 0 1
# outputs H
0 1 0 0 1 0 0 0
# outputs i
0 1 1 0 1 0 0 1
# cat begins
? a b c d e f g h
?
a b c d e f g h
? a b c d e f g h
?
# cat ends
# outputs rest
# characters .
0 0 1 0 1 1 0 0
0 0 1 0 0 0 0 0
A S D F G H J K
Q W E R T Y U I
0 1 1 0 1 1 0 1
0 0 1 0 0 0 0 0
0 1 1 0 0 1 1 0
0 1 1 0 0 1 0 1
0 1 1 1 0 0 1 0
0 1 0 0 1 1 1 0
0 1 0 0 0 0 0 1
0 1 0 0 1 1 1 0
0 1 0 0 0 1 0 0
0 1 1 0 1 1 1 1
0 0 1 0 0 0 0 1
</code></pre>
","","user100411"
"235907","<h1><a href=""https://esolangs.org/wiki/FerNANDo"" rel=""nofollow noreferrer"">FerNANDo</a>, 53 bytes</h1>
<p>Outputs <code>aaa</code>, but is it accepted...?</p>
<pre><code>a a a
z a a z z z z a
z a a z z z z a
z a a z z z z a
</code></pre>
<p><a href=""https://tio.run/##S0stykvMS8n//z9RAQi5qkCkQhUUEuT//w8A"" rel=""nofollow noreferrer"" title=""FerNANDo – Try It Online"">Try it online!</a></p>
","","user100411"
"235909","<h1><a href=""https://github.com/TryItOnline/malbolge"" rel=""nofollow noreferrer"">Malbolge</a>, 67 bytes</h1>
<p>Outputs <code>n D</code>. Eventually I thought a space is really necessary.</p>
<pre><code>D'`_$&quot;\\[||98V6Bu@tOq&lt;.'98*ZjE&amp;fe {Ab~,v*)]xZvonsl2ponmfN+cba`ed]#n
</code></pre>
<p><a href=""https://tio.run/##y03MScrPSU/9/99FPSFeRSkmJrqmxtIizMyp1KHEv9BGT93SQisqy1UtLVWh2jGpTqdMSzO2IqosP684x6ggPy83zU87OSkxITUlVjnv/38A"" rel=""nofollow noreferrer"" title=""Malbolge – Try It Online"">Try it online!</a></p>
","","user100411"
"235934","<h1><a href=""https://esplangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 38 bytes, safe.</h1>
<p>This is much easier than previous.
Six bytes are revealed:</p>
<pre><code>____&lt;-___________&lt;-________DO_________
</code></pre>
<p>Outputs:</p>
<pre><code>BCDLX

</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Try it online!</a></p>
<h2>The answer</h2>
<blockquote class=""spoiler"">
<p> <code>DO;1&lt;-#1DO;1SUB#1&lt;-#17DOREADOUT;1+#460</code></p>
</blockquote>
<blockquote class=""spoiler"">
<p> Please note output is &quot;B&quot; and &quot;CDLX&quot;.</p>
</blockquote>
","","user100411"
"236048","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a> (C-INTERCAL), 61 bytes</h1>
<pre><code>DO,1&lt;-#9DO,1SUB#1&lt;-#126DOCOMEFROM#9PLEASEREADOUT,1(9)DO,1&lt;-#9
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FX8fQRlfZEkQHhzopgziGRmYu/s7@vq5uQf6@ypYBPq6Owa5Bro4u/qEhOoYalpowTf//AwA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"236049","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 48 bytes.</h1>
<pre><code>DO;1&lt;-#1DO;1SUB#1&lt;-#20DOCOMEFROM#9(9)DOREADOUT;1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">(Don't) Copy and paste to try it online!</a> It is very recommend to replace COME with NEXT, as output suppression may be weak.</p>
","","user100411"
"236184","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, <a href=""http://oeis.org/A001477"" rel=""nofollow noreferrer"">A001477</a>, safe, score: 14.</h1>
<p>Byteset:</p>
<pre><code>ACFGIJLPRWX[\_
</code></pre>
<h2>Rules</h2>
<ul>
<li>You may use any compiler option.</li>
<li>You may specify i/o format by yourself.</li>
<li>You may specify range of input.</li>
<li>You may specify whether 0-indexed or 1-indexed.</li>
<li>I made a program that works on <a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">this online environment</a>.</li>
</ul>
<h2>Answer</h2>
<pre><code>IXRJFPAFL[\W_IXJACIXGP[\W
</code></pre>
<p>This is <code>DOWRITEIN.1DOREADOUT.1</code> in Baudot encoding, so input range is <code>OH</code> or <code>ZERO</code> to <code>SIX FIVE FIVE THREE FIVE</code>.
Due to the encoding, you need compiler option <code>-b</code> if it is newer so the character guessing does not work.</p>
<h2>Try the following Bash script in online environment</h2>
<pre><code>printf %s 'IXRJFPAFL[\W_IXJACIXGP[\W'&gt;.i
sick -b .i
./.io&lt;&lt;&lt;'THREE FOUR FIVE'
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>See also</h2>
<ul>
<li><a href=""https://codegolf.stackexchange.com/a/235638/100411"">My problem that requires Hollerith encoding</a></li>
<li><a href=""https://codegolf.stackexchange.com/a/235691/100411"">My problem that requires EBCDIC encoding</a></li>
</ul>
","","user100411"
"236461","<h1>CLC-INTERCAL 1.-94 does not check politeness of the program.</h1>
<p>So every <code>PLEASE</code> and <code>PLEASEDO</code> can be replaced with <code>DO</code>.</p>
","","user100411"
"236614","<h1><a href=""http://www.snobol4.org/csnobol4/"" rel=""nofollow noreferrer"">SNOBOL4 (CSNOBOL4)</a>, 19 bytes</h1>
<pre><code> output =99 ^ 9
end
</code></pre>
<p>Outputs:</p>
<pre><code>913517247483640899

</code></pre>
<p><a href=""https://tio.run/##K87LT8rPMfn/XyG/tKSgtETB1tJSIU7Bkis1L@X/fwA"" rel=""nofollow noreferrer"" title=""SNOBOL4 (CSNOBOL4) – Try It Online"">Try it online!</a></p>
","","user100411"
"236615","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 12 bytes</h1>
<pre><code>DOREADOUT#81
</code></pre>
<p>Outputs:</p>
<pre><code>     
LXXXI
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FP8jV0cU/NETZwvD/fwA"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"236678","<h1><a href=""http://www.snobol4.org/csnobol4/"" rel=""nofollow noreferrer"">SNOBOL4 (CSNOBOL4)</a>, 19 bytes</h1>
<pre><code> output =date()
end
</code></pre>
<p>Are there any other ways to obtain a random value in this language?</p>
<p><a href=""https://tio.run/##K87LT8rPMfn/XyG/tKSgtETBNiWxJFVDkys1L@X/fwA"" rel=""nofollow noreferrer"" title=""SNOBOL4 (CSNOBOL4) – Try It Online"">Try it online!</a></p>
","","user100411"
"237156","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 32 + 1 = 33 bytes</h1>
<p>The 1-byte penalty is for filename specification; the following program must be saved as <code>x</code>.</p>

<pre class=""lang-bash prettyprint-override""><code>((x))||read x
echo $x
((x))&amp;&amp;. x
</code></pre>
<p><a href=""https://tio.run/##S0oszvhfkpiZo6BrrKBiYFfBlVqRmqyQBBRWqPivoVGhqVlTU5SamKIAlEnOyFdQqeACi6qp6QEV/DcAAA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>Tracing how it works</h2>
<ul>
<li>The variable x is not initialized.</li>
<li><code>((x))</code> evaluates to <code>((0))</code>: command is failure.</li>
<li>So <code>read x</code> is done.</li>
<li>Then <code>echo $x</code>.</li>
<li>Final line is for branching.
<ul>
<li>If <code>x</code> is zero, the program ends.</li>
<li>If <code>x</code> is one, <code>. x</code> is done.
<ul>
<li>It loads the file <code>x</code>: the program itself.</li>
<li>First command evaluates to <code>((1))</code> so no more <code>read</code>ing.</li>
<li>Then rest two lines are executed and it loops forever.</li>
</ul>
</li>
</ul>
</li>
</ul>
","","user100411"
"237157","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, <s> 70 bytes</s> <s>69 bytes</s> <s>68 bytes</s> 63 + 1 = 64 bytes</h1>
<p>The following program must be saved as <code>x</code>, which is for 1 byte of penalty.</p>

<pre class=""lang-bash prettyprint-override""><code>''
((++x%3))||Fizz
((x%5))||$_\Buzz
echo ${_:-$x}
((x&gt;99))||. x
</code></pre>
<p><a href=""https://tio.run/##S0oszvhfkpiZo6Cbp22soGJgV8GVWpGarJAElFAAsQvyi0oUAhxDPGz/q6tzaWhoa1eoGmtq1tS4ZVZVAfkVqqYgnkp8jFMpUCA1OSNfQaU63kpXpaIWJG1naQmS11Oo@P8fAA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
","","user100411"
"237158","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 32 + 1 = 33 bytes</h1>
<p>One additional byte for filename specification: <code>x</code>.</p>

<pre class=""lang-bash prettyprint-override""><code>echo &quot;$2
$1&quot;
shift 2
(($#))&amp;&amp;. x
</code></pre>
<p><a href=""https://tio.run/##Dcm9DkAwGEbhvVfxpRohQqifMBA2o8ENIJVKBKFD7/7V5QzPWZdPwyzHSfEV5STSzjJl1UarG2SJi547eO7X0DTMYwu16duxZCLj7NPHbkiyIBBeGPp@QhZABokcBVKUqFwb1D8"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input from program arguments.</li>
<li>Outputs to stdout.</li>
</ul>
<hr />
<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 34 + 1 = 35 bytes</h1>
<p>One additional byte for filename specification: <code>x</code>.</p>

<pre class=""lang-bash prettyprint-override""><code>read x
read y||&gt;x
echo &quot;$y
$x&quot;
. x
</code></pre>
<p><a href=""https://tio.run/##S0oszvhfkpiZo6Cbp22soGJgV8GVWpGarJAElFAAsQvyi0oUAhxDPGz/F6UmpgDFwFRlTQ1IaXJGvoKSSiWXSoUSl55Cxf//hlxGXMZcJlymXAZcEDaYBgA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Each item is given from STDIN.</li>
<li>Outputs to STDOUT.</li>
<li>Items are separated by a LF.</li>
</ul>
","","user100411"
"237161","<h1>In Pure Bash (or any other pure shellscript), use <code>.</code> for looping.</h1>
<p>For example, if you want to display each value of 1^2, 2^2, 3^2, ..., 999^2, 1000^2,</p>
<pre class=""lang-bash prettyprint-override""><code>echo $[++x*x]
((x&gt;999))||. x
</code></pre>
<p>(where filename is <code>x</code>) is shorter than</p>
<pre class=""lang-bash prettyprint-override""><code>for((;x++&lt;1000;));{
echo $[x*x]
}
</code></pre>
<p><a href=""https://tio.run/##S0oszvhfkpiZo6Cbp22soGJgV8GVWpGarJCaV6aQBJRUAPEL8otKFAIcQzxs/6cmZ@QrqERra1doVcRyaWhU2FlaWmpq1tToKVT8/w8A"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
","","user100411"
"237164","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 34 + 1 = 35 bytes</h1>
<p>Filename must be <code>x</code>; this is for extra one byte.</p>

<pre class=""lang-bash prettyprint-override""><code>echo $[x++]
a=x
((x&gt;${#a}00))||. x
</code></pre>
<p><a href=""https://tio.run/##S0oszvhfkpiZo6Cbp6BtpKBiYFdhnVqRmqyQBJRRqOBKrSjILypRCHAM8bD9n5qcka@gEl2hrR3LlWhbwaWhUWGnUq2cWGtgoKlZU6OnUPH/PwA"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
","","user100411"
"237165","<h1>Pure <a href=""https://www.gnu.org/software/bash/"" rel=""nofollow noreferrer"">Bash</a>, 42 + 1 = 43 bytes</h1>
<p>Filename must be <code>x</code>; it is for extra one byte.</p>

<pre class=""lang-bash prettyprint-override""><code>read x||&gt;x
((1${x:6:1}1))||echo ${x:7}
. x
</code></pre>
<p><a href=""https://tio.run/##NYrJDoJAEETvfEWZcGBRAmg0gYjx5tGDPzBgxzEBhrCYNsK3jyzah0q9V52KRupWdZnEKs5koe7oXB57K545NqUbwvQTjokpQzo@gw3iStUtrufb5ahrEndw3ydsWFZgfjjaR8EQ2HbfUyYVJnMYDA@stT8f0lzIOYyZAweiqnJqFgyhalE@qDktvHXwJiHXf@1N2vF3yNWLUBAaNcZv/AI"" rel=""nofollow noreferrer"" title=""Bash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input from stdin.</li>
<li>Optional trailing LFs.</li>
<li>Output to stdout.</li>
</ul>
","","user100411"
"237273","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, <s>95</s> 67 bytes.</h1>
<p>Why does CLC-INTERCAL 1.-94.-2 lack <code>!1~.1'</code>? I could have golfed off one byte.</p>
<pre><code>DOCOMEFROM#9(1)DOWRITEIN.1+.2DDOCOMEFROM'.1~.1'~#1(9)DOREADOUT.2+.1
</code></pre>
<p><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste to try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Each item of list must be in <code>ONE</code> to <code>SIX FIVE FIVE THREE FIVE</code> (inclusive); <code>ZERO</code> for end of list.
<ul>
<li>Given from STDIN, delimited with a LF.</li>
</ul>
</li>
<li>Outputs to STDOUT, as roman number.</li>
</ul>
<h2>Try these inputs</h2>
<pre><code>ONE
TWO
ONE
TWO
ZERO
</code></pre>
<pre><code>ONE
TWO
THREE
FOUR
FIVE
SIX
ZERO
</code></pre>
","","user100411"
"237274","<h1><a href=""https://esolangs.org/wiki/Pxem"" rel=""nofollow noreferrer"">Pxem</a>, 18 + 0 = 18 bytes.</h1>
<p>The configure is:</p>
<ul>
<li>No breaking loop when insufficient items.</li>
<li>Abort to illegal integer input.</li>
</ul>
<p>Filename:</p>
<pre><code>.w._._.n .o.n .o.a
</code></pre>
<p>Content is empty.</p>
<p><a href=""https://tio.run/##pTp7X@LIsv/nU7QRhQghgI46YpxFBx3OKHgU78wecfKL0EgUEjYdFB/cr763qrvzxJnds1dHhnQ9urpeXdWdZ5uN/lxdMW4d12AjRVkl0zmdlCcPAZ1My3RyW556zJk7bFImjqv3vQEl54ABDwH1pz6Fz7KyCnTH1A5mPmXwRHRy5E2mduDcjil5coIRcR/KecaJ3AEdEDalQ2fo9AHFcznB4XNA9ZnrBKQ/sn27D3z5eNsjbAxCEtfziTsbj8kQvgydMXXtCeUol4FP7Ynu@Q4F/gPSMjpcom@@E8B85Pa5TLpTmx7bTy/URfmOHdcek9l0YAe0TGqVWrVc2SlvVslV96j4ETFOnT51GQCPgHfgPFJc0cRzGfkP9T3yCARl1NYdDch557L1ffxM2AwU4jA6powR6j46vudOQCSFAZJOZ8psYrMHUqns7JBVWE8AX2u1OrEZX5PQuULnU88PyOmR1Tg9NY@U4HlKcZq@5w7JgTGgjwZXQ@1gvUrW1wW8D8LZ7uA9uOR33uh@MdVcIcTUpxFTBAF6RKrlXnGouLcQX/SFGnK5are@W5fdz2atUtmERaDcX871q@/RNKiL09@to87FRfOoa1Yl0kn76s9Vcn7VJb93ri7I@ffmGbmEb0dN8qV50VSOW6fNduOsaebLT2ULfl1S9sSHnVeOOu1us901Ffx23Dox88ph86TVflUIIVeXTevwyKzW8eHwotn4ap12OufWty/NttVqX14dH7eOWkhe4SiNw85F1zq86HwFOGJKUjHeOj1tnjROgbDbPGleIGyRB9H7I9p/cNy72PWcIVKBxd1gSNZYr@cSNReuQyVvCL3z6ZTofxC9SXr4DD/5wo@36x@93o3W6xUqbxX8x/8qWuH6R0XfvXnLaXmiBCPqIgntjzzSRotGgQFxFIlBqgfrNY43h9ipKkNH@eeSGW9J4T7svFXwDz4Somn5tGiXPDr/QiLQnzdzA5DJu/PtiYIuMUeipFxqTtpZTQxHY3Uy8JLLugWkOSyGPPWJ3heTDjyXKiIiRDQtBcTbG@FOI8AFrSDXzkP0SD4MHD@YTCFaXrtn559bF3sYAQLUtxmFiQWGiiso5POaBMakBnzIwXq9YLyDUI7BG8tgmFp8WzOiqet1yuy@fOBJkGsbRMiFqyjEjJwhuSa6T/j6Zz6EvDchN5AQcLifGa6T0KTRjwcpokFcogdksEX0NoGPxxRZjE7HjKaIC1OG1LpHps6gRANnQkvT/nRWemQvYEfIuprwwvemm/GZ0uDAB@swUqnWNrc@bO/sfiT56567cZPP4HGvLmeJbWdMdJds1TIABptFnhk/yhu9Qrn3uttb9LSc0asaWbb20wPKZJt6rbq1s7W7ub21S/IplFe7aOYq9UWz/fmVuyixFwkMCALxJV44Ms2/xigM1VrIVbR6ggxNDL5pqvZtf0CHdyPn/mE8cb3pHz4LZo9P8@eXxuHR5@bxyZfWv76enrU75/@@uOxe/c@377//J1aXpSaYnpoQqHfBqBByT83o@QUHsp6zb1YrdadY1F5T60T4PcDvAb5Vvwd4ChwHKJvdssCP5ijBYIGvUNs41UrV5JwhEVGTYi7k10iNWpgCxM8eOYgi0cjxeVTc8LKChAnwF5hQxsx8l1TC@Mc0Il0bU5wqssUeGYIngc8EHuydLvXBj4lNEOT5tv/MM6Aapb@YbxUfNWWhKP0xtV0LxOBCFIRuee7RSe61ComG5D4p3OHtKcnnSfN7q0u@XJ0T2I/Iv6/g4bx13iSN04sz0m1enCGuPyH6EBYYslUjBvrfoud5OlcF@UIOWCiINWuq3MDRW1nfd6aBwlmnV/LX8yiRNUSeh11cPThICq1AaTIFDUqtJPN8VW5aySxRjbLEUnJAe6fyQzItrBLPv7Nd54WSsQObKRSC4KewswugT/veHYc@2mMHbf0AhaASJ4HPna65tS2iPy5C4GfMgErWGLhTTAbX1WrtxsQvu5UbU52qaVhVwHY@AszLwCoStgswNw2rfJCwTYA5KdhHAKlWeuijwN7eAVA/M4vktIucWAa2K2HbAHvMSCBXtYOrGmZgclXbuCqa4bkleQK96mdgUs5dlPMpDatJbeyiNuYZmJxvF@d7zsCknB9Rzpe0WnakmKgxOyPKtmQJ4qpBZnlSzB0Uc5KBSTG3UcxBCraFGi6mh3BmPTW0iVgr6SFUfy49hFOvRUPCH/kTz5ihO0Jv9uh4M2ZKL7/m/nkTkoWjxaIYx81LCUuHQkRsAvv19VwFywyYPLkZ4E7AaXWzVudfxKeua8upfaiGwbY26Llq6X2hoo0A15mrROOLaHW4vcYlUOGn8/7dSRf5MCs8jZz@iHhDgnsqbAGUQW6f2AEMYgf7SWDR8l2ZPJH5fI6Z3wu/PgkoFF22IMXujhOXeGlFmGEbDYNg5@XcQStLyXDmA8QXhMwjDVDxADtioL71MesQO5F2XMqC8aNZEYnH@HGNYt7kjFAbfDIUFCwqcJMm5eqou3QexI5i/LBjcrC5nMGsJI3MCdWGWuebRCVlkCTZwTLVULXX@qj2WDSBq@tJg0dCpexcrUeGsQcDMrZvocjkz2KwddbqNrqt9gk56XQ75BIemmfQJlySby3oZo87p6edbwhufPtKLtut8/Nmd0@Qcr@pC3FXxRo4exNyy3yuaq/wuQiBWNr@GqNcLieROQyeur4jKwUPP10oKeYOC7CD5LwEzSKxJMd1Ascej5@hDBIj4B5QYMDfyHsCPoGnA7lcBfdSdCfo4jlXCFDwJzL2PChUmJEzSkYGkzseosZ4hGP@JjHtJ3v@9GwL7L7nAt9ZGp8Zpd82YtZIYIcEtz61H5bZc4JwhsYeKgM3@jENKCx14AyHsEoIeVlzrZLOYfdbGAGCDS4dNPiE@ghDIrH/Ctuo6oKfqgj1gltRPGgSh0VQK5Op7QfCs94PIOGbxWLoi1C/FiDzlvCXs9RSwURUMY8q5kuF1fusdT3FGvUCvH/7@9yjiABVYH3nsjFWoPJEh6Fm7Sl02MABx0GhTAm7HCGZYBrJxQxjkXVwI4LlDPD08PE2sb4wqSb5TGdsVEjSasuU0GlNcwbkWajxVqC2DJ4LmjadBXiuUZh60I0LIsDzcgbI9BdI7hISni/e0SyekxPi4XkXcokhVgwJSWNgP8seEIMUY5bBQGAIe8wZsIdSn9F4bJgzEu0VBhg4vsV3MGy0@Axy9Nq5ichozgCP8T1cX4Kb/458iSZL6CDCDn0STQ1BZcE8g4K6rmraO47OnSIaj1w05GX3CoIdtstphr1qyFH693tMs64f8m3kDBnLn9S6zD80BAbp5QbeiNrTjKUnHIcDpEKGvjeRzyHSIGfwVBVppriSW9OFatAWBe3ArGm2DxvWBPyiz7XEkaMABI4DMC1Pe0PPg3DgkVaIDsXyvDiSeQk3m0SEQVTxcIStPsbnEkXBuHREqdm3nh9YqGjBRxNdMW8qXxPTztw@HqlDOeC4EvOVBXb/4doZmFCfVsTUotNKnr7FPBYRk4TXcVYlFm3yzBSqqgvmxaIzAOZK8gyhAk7OuGMnCgO0SSiPXi2Bl2cECo/7YnmiqQYUNw1ioT2RXL/57@Yr8vlAcQuS6TxX0RjJDrrOm2JFge0Kcrc4NYzOLKEtz4@c8nRO86RRhl/ikfLTyz3zyvflefml/FS2SXlOys/EfqBeeQADgzIt2@H5hThUyM3V9NLn0aLFQSaeF4BYKVnJ/n7@@Kp91G112pd5JTIV94/ChN0lmmcCj28qssAjCdEwiDPZOvKGqlMq5oY4jKCSE2OgKjKyGYFcP2ElUoHSY0DndBCigIe5znQ2Fjc4kRwyPF/lyUc0A5SVixhLGHQJKYHBDWc5sfOWIqxi8ca0nCQu5oAss5KuRxRJxsG7yBGqXk0ihxncckrWvdAs@pqFzmaBt4VURg0eE0dl1r0ZsbacqNpNjpnvza2/h5yBm9a9LDa4DTEY4L/JDNxUBsgTNhxihfzCAlJgIpTj1Ym8GOrCGaBv8@BKaCDOnyFeGH5ppXIctFcE5jYCyRwPPu5RPMbv6Xityss5GLfH0Plw4O0zSM7oHzPq9qmE3s6wiXq@peK20e7zizggxtuGGd42Jh1GbO4oQ@L4SO3Bz5qHbYjlKCkHi7Z8tG5fUEHuBbvGvUzIdeuDVsc2DUro0MTOhqlX47KP@0Ufdnarvx@er4Is8Jjwi5CdPBvlE5eqWnFrl7O3GZtx/TQuj1qt0MiRyGH9YvmRsLwvt2YugG5nw9j/fDMavI7b6DCBvgMKjevHKwL2WBiNwWdgXNuHxjCNLJefIE0Iy@eILJKcMh28DmNTu085luRU@LgPOOvrFp5Bb2lvbxBv5mZtwf3lzuMbM2F46gj5Sdi5oK4N1NI66BuQUhqLjIy2K6HG/TiQ6xjKcVm4AhZdX09IVA9XzBfKWZjyjJp7imlubQrxwEESrbQcCSniU57kdClNw1q3dt/ePuzshw4sxt@9lExscCLvq2Vrjx852C6RC4b/wdvUqK3gvWlMt0oGMxeaJWcI9ruDNO5j@xAbTeO@zgucYAQuyQhev3tBkkPna@N3Ah7F0oCU5evLh@zLzf4qwRsi3qsNnDsn4MUU@jDKUI@MtbUb@8WHnXrKdEnP96GBJjC5jmEVTbIsVspx@RWlO3DQb@xxZmNNFl5h6IXl3Cc1NEdoC3uPTMCJMJDLTyWoBODvuYQKLL9IgyRuzEIqlVhjmwW8jiZqgoWNNImIiatt/lmyeH9bshjFRyFfzMrkn5HL8iE8YE06WVhTL9lq5VfX6ZnUwXfhFXn@vVAyLhfV1vu1fziNWKbJp4nGxJrTg4llzlUtsjIn35cU7@A@Z3EPfo77ksVdMZPIcmt@Gj0Th9gT2MPkuYiDZ4qhIff42dQIQmxMGRk7EwdfXoHu7Y7iMaSMY1YCTpRNaV@cDUG@P/YpPbz8XCeV@c6x@MECDo9dJvac8AYbYLsV8YMw2FUUebKCkzr8sEBMTaA@HFNwF3LaaZ/wsKeDeHZ5LgoUBybZrJFbCE98Qeas8fthEzaqr/j@xcUl6XbI5@ZR63OTgAW7X5oXOAIgcniUCKa4qbK8Kc/G9yXrIYop8SpHHMyOtCzUU0smdvbDkkwiP0BywKQA9RHgWw/Zs0oAsXC34BX4Guupa334Y@QNL5F6vZVeLwf/bRgwcNtXuYAo533scfcmTA3gaGd8SEl1/05uhsj2phjS8fLlTWKcnkW9@6D9NHqAhYlXCBqJGn2ukqLs8@tZ1JUl1I2foepq6vA2RaRniAQdr6L3K5mD/vRsejWmWqSm/F/1Ord2k5r0p6YOrb0BADMz4ZKCX6jv6QPn0WHgbeoSj4zH/MppEjInVyb0lVM/WY5h3e9Zzhqw1DI72kKJOrSfdHCtdqubV9oXpll9ja/9LSiPB5Y8AIJKEk/GF4B1YNZg00sCw3gxqDvoG1p8BwBNv5Y8ql@IDlMcKRWLySMnfj0gDt8XCgqE3W7euw2ACWHezO9De8sb38IeNpCbWvIdMXl9nmmbOR4QvfP60WtldXXDWJDNAzxywPQjpwpv0gfyelleoPMMOsT39MbPSkHekoijLWgToA/9f73jknm75VG84JJ9uyWxS/83b7T89F2Wv76oXn6F5Z2XV957bSX91sov31cRb6osv6giXlERt/3lYfYKPno16x9exEfnHuiyciJh3fClMFGx/kPuGqZkqTneSUVMJs7dCNpLege@xl9F5dW9wlWUemuCE4JD8/gB54N2GeRBdUzsAN@6Q8WIHhabWqnjM3xXInyTsnFxYp01vqcCBUKIr3ur8nFbU0n45uKZYdbqZ7q5i7cWol/EXV@VOoeGVZFdJCOQHA7OpLFYneFVh/LKTAQslNiOjN8QzG0fqnW9RV5C@738WSU1sgkO/oFs/x8"" rel=""nofollow noreferrer"" title=""yash – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>With STDIN and STDOUT.</li>
<li>Each integer shall be given, separated by one or more space characters.</li>
<li>Outputted separated with a space.</li>
</ul>
","","user100411"
"237315","<p><a href=""https://datatracker.ietf.org/doc/html/rfc4042"" rel=""nofollow noreferrer"">UTF-9</a> was an April Fool's Day RFC joke specifications for encoding Unicode suitable for 9-bit nonet platforms.</p>
<h1>Challenge</h1>
<p>Your task is to implement a program or a function or a subroutine that takes one integer, who represents the codepoint of a character, to return a sequence of integers that represents its corresponding UTF-9 value.</p>
<h2>Definition of UTF-9</h2>
<p>In this problem, the definition of the UTF-9 shall be as follows:</p>
<p>From <a href=""https://datatracker.ietf.org/doc/html/rfc4042#section-3"" rel=""nofollow noreferrer"">section 3 of RFC 4042</a>:</p>
<blockquote>
<p>A UTF-9 stream represents [ISO-10646] codepoints using 9 bit nonets.
The low order 8-bits of a nonet is an octet, and the high order bit
indicates continuation.</p>
<p>UTF-9 does not use surrogates; consequently a UTF-16 value must be
transformed into the UCS-4 equivalent, and U+D800 - U+DBFF are never
transmitted in UTF-9.</p>
<p>Octets of the [UNICODE] codepoint value are then copied into
successive UTF-9 nonets, starting with the most-significant non-zero
octet.  All but the least significant octet have the continuation bit
set in the associated nonet.</p>
</blockquote>
<h2>Constraints</h2>
<p>Input is nonnegative integers that is defined on Unicode: which is 0 to 0x7FFFFFFF (inclusive)</p>
<h1>Rules</h1>
<ul>
<li>Standard loopholes apply.</li>
<li>Standard I/O rules apply.</li>
<li>Shortest code wins.</li>
</ul>
<h1>Test cases</h1>
<p>Leftmost column: Input in hexadecimal.</p>
<p>Right items: output as a sequence of octed integers.</p>
<pre><code>0000     000
0041     101
00c0     300
0391     403 221
611b     541 033
10330    401 403 060
e0041    416 400 101
10fffd   420 777 375
345ecf1b 464 536 717 033
</code></pre>
<h1><s>Hint</s> Notes</h1>
<p><s><a href=""https://datatracker.ietf.org/doc/html/rfc4042#section-5.2"" rel=""nofollow noreferrer"">Section 5.2 of RFC4042</a> has an example of the impmenentation.</p>
<p>Here is a non-competing Python function that represents the algorithm:</p>
<pre class=""lang-python prettyprint-override""><code>def ucs4utf9(x:int)-&gt;[int]:
 l=[]
 if x&gt;0x100:
  if x&gt;0x10000:
   if x&gt;0x1000000:
    l.append(0x100|(x&gt;&gt;24)&amp;0xff)
   l.append(0x100|(x&gt;&gt;16)&amp;0xff)
  l.append(0x100|(x&gt;&gt;8)&amp;0xff)
 l.append(x&amp;0xff)
 return l
</code></pre>
<p><a href=""https://tio.run/##bZFBboMwEEX3PsWsClQ0GmMDSSRzhRwgzSIFW7GEAGEjUal3pwMkpJWysTXvf3@NZ7pvf2sbMU2VNjCUTg7eHMLxaBsffRRnui5HBrU6XxhYA2OBI0ck9Kda63/gjqDeXbtON1W48J9wLIpERm84GhOx1zrPnvoLeb@pmzg@SK/90DdQT147r4IgQJR8bgM4coZY4lIIRIbisCoSBSQJZxnnXwtI6QkKwTgduDr44sIMmX4kSp4RxCWYozGmmmGCkOc5iDxlQqa6NJQpMwmpyCDn@ZxLXTHT9lCDbWDuc@e62vow@GyCiIZm4/dW1XdIf7KKdhDamMbCoFXntdpHc4adM1raTNfPOCivTh@D2MYteU9qW6eNNkuv3VB7Mp2ezDrors7pinCr1CmafgE"" rel=""nofollow noreferrer"" title=""Python 3 – Try It Online"">Test it online!</a>
</s></p>
<p>Those two programs were incorrect, as they convert codepoints 0x100, 0x10000, and 0x1000000 incorrectly; they should be converted to <code>257,0</code>, <code>257,256,0</code>, <code>257,256,256,0</code> respectively.</p>
","","user100411"
"237320","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, <s>164</s> <s>162</s> 154 bytes</h1>
<p>I made this program before noticing the first comment of the OP. In my comment section the two example programs on both RFC document and my Python implementation says values 0x100, 0x10000, and 0x1000000 are converted incorrectly, while this program converts 256 to [257,0]; which seems to be correct.</p>
<pre><code>DOWRITEIN:1DOCOMEFROM.3PLEASE.1&lt;-!2$:1~#255'~#54613DOSTASH.1DO.2&lt;-#128PLEASE:1&lt;-:1~#65520$#65520(1)DO.3&lt;-':1~:1'~#1(9)DORETRIEVE.1DOREADOUT.1PLEASE(9)NEXT
</code></pre>
<p><a href=""https://tio.run/##TYzBTsMwDIbvfoqiTto4NJqTOkuqXirq0UisQWnYdkWIAxLigDjv1YurcuBk//4/fx9fP@/fb6@f89zHSwqZw9hgHx/iiY8pnpR5fuJuYoVtdac3Dd5KTbS9lVRbNH2ccjcNSh6UbqsStVvxRvCFtUR6v1nHDu8FM221laZBceDOyylxToHPvFgSd318yQpXjfQjX/M8xwE4PA65mAQci789XIt8if/TkJiLYzgzgCVAr8GjAV078mCtoSUfyHpAxBr3HtzBWe2k@QU"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
<h2>Usage</h2>
<ul>
<li>Input as INTERCAL-72 integer input (e.g. <code>ONE TWO THREE FOUR FIVE</code>).</li>
<li>Outputs several integers as roman numbers, from first to last elements of the list.</li>
</ul>
<h2>Ungolfed</h2>
<pre><code>DOWRITEIN:1

DONOTE from label (1) if .3 got at least one bit of one
DOCOMEFROM.3
DONOTE :1~#255 is done first on CLCI
PLEASENOTE obtain lowest 8 bits
DONOTE then do C operation such twospot[1]|spot[2]
DONOTE spot[2] is 256 if second time to visit here 0 otherwise
PLEASE.1&lt;-!2$:1~#255'~#54613
PLEASENOTE this and RETRIEVE statements below
DOSTASH.1
DO.2&lt;-#128
DONOTE like (twospot[1]&gt;&gt;8)
PLEASE:1&lt;-:1~#65520$#65520
(1)DO.3&lt;-':1~:1'~#1

PLEASENOTE finally, until no more .1 stacks
(9)DORETRIEVE.1
DOREADOUT.1
PLEASE(9)NEXT
</code></pre>
<h3>Algorithm</h3>
<ol>
<li>Write in to the codepoint.</li>
<li>Make a list from backward, using STASH and RETRIEVE statements and a stack.</li>
<li>Then output each item.</li>
</ol>
","","user100411"
"237349","<h1><a href=""http://www.catb.org/%7Eesr/intercal/"" rel=""nofollow noreferrer"">INTERCAL</a>, 41 bytes</h1>
<p><a href=""https://codegolf.stackexchange.com/a/185945/100411"">Based on answer by @unrelatedstring</a>.
If you don't care for errors, won't you guys golf off the program easily?</p>
<pre><code>DOWRITEIN.1DOCOMEFROM.1(1)PLEASEREADOUT.1
</code></pre>
<p><a href=""https://tio.run/##y8wrSS1KTsz5/9/FPzzIM8TV00/P0MXf2d/X1S3I31fPUMNQM8DH1THYNcjV0cU/NETP8P//KNcgfy4A"" rel=""nofollow noreferrer"" title=""INTERCAL – Try It Online"">Try it online!</a></p>
","","user100411"
"237351","<h1><a href=""https://github.com/avian2/fimpp"" rel=""noreferrer"">FIM++</a>, 87 bytes</h1>
<p>I golfed off one byte: the original was <a href=""https://codegolf.stackexchange.com/a/55938/100411"">by @martinender</a>.
I golfed off a space between a token said and a symbol &quot;.</p>
<pre><code>Dear Princess Celestia:A.Today I learned:I said&quot;Hello, World!&quot;.Your faithful student,B.
</code></pre>
<p><a href=""https://tio.run/##Dcq7CoUwDADQX4nO0g9w8zHodocL4hhMioHYStMOfn31zMfLdd@1zowJfknCwWYwsbJlwX5w/0j4wAr6hcDUr2Ao1C6sGjvYYlJqWrfHksCj5NMXBcuFOORudLW@"" rel=""noreferrer"" title=""FIM++ – Try It Online"">Try it online!</a></p>
","","user100411"
"237488","<h1>Know <code>grep</code> options</h1>
<p>See also <a href=""https://man.archlinux.org/man/grep.1p.en"" rel=""nofollow noreferrer"">man 1p grep</a> and <a href=""https://www.gnu.org/software/grep/manual/html_node/Command_002dline-Options.html"" rel=""nofollow noreferrer"">manual for GNU Grep</a>.</p>
<h2><code>grep -x foo</code> is equivalent to <code>grep '^foo$</code></h2>
<p>This is POSIX-compatible.</p>
<blockquote>
<p>Consider only input lines that use all characters in the line excluding the terminating &lt;newline&gt; to match an entire fixed string or regular expression to be matching lines.</p>
</blockquote>
<p>For example, the following two are equal:</p>
<blockquote>
<pre><code>grep -E '^abc$|^def$'
</code></pre>
</blockquote>
<blockquote>
<pre><code>grep -F -x 'abc
def'
</code></pre>
</blockquote>
","","user100411"
"237526","<p><a href=""https://en.wikipedia.org/wiki/UTF-1"" rel=""noreferrer"">UTF-1</a> is one of the methods to transform ISO/IEC 10646 and Unicode into a sequence of bytes. It was originally for ISO 10646.</p>
<p>The UTF-1 encodes every character with variable length of byte sequence, just like UTF-8 does. It was designed to avoid control codes. But it was not designed to avoid duplication of a slash character ('/'), which is path delimiter for many operating systems. Additionally it takes a bit long to process the algorithm, because it is based on modulo 190, which is not power of two. Eventually UTF-8 was better than that.</p>
<p>In this challenge we are reviving UTF-1.</p>
<h1>How it works</h1>
<p>Every constant value in tables on this section is represented in hexadecimal value.</p>
<p>The symbol / is the integer division operator, % is the integer modulo operator, and ^ means power. The precedence of operators is ^ first, / second, % third, and others last.
Here is how to convert each codepoint to UTF-1 (sorry for typo last time):</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">codepoint x</th>
<th style=""text-align: center;"">UTF-1</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">U+0000 to U+009F</td>
<td style=""text-align: center;"">(x)</td>
</tr>
<tr>
<td style=""text-align: center;"">U+00A0 to U+00FF</td>
<td style=""text-align: center;"">(A0,x)</td>
</tr>
<tr>
<td style=""text-align: center;"">U+0100 to U+4015</td>
<td style=""text-align: center;"">y=x-100 in (A1+y/BE,T(y%BE))</td>
</tr>
<tr>
<td style=""text-align: center;"">U+4016 to U+38E2D</td>
<td style=""text-align: center;"">y=x-4016 in (F6+y/BE^2,T(y/BE%BE),T(y%BE))</td>
</tr>
<tr>
<td style=""text-align: center;"">U+38E2E to U+7FFFFFFF</td>
<td style=""text-align: center;"">y=x-38E2E in (FC+y/BE^4,T(y/BE^3%BE),T(y/BE^2%BE),T(y/BE%BE),T(y%BE))</td>
</tr>
</tbody>
</table>
</div>
<p>T(z) is a function such that:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">z</th>
<th style=""text-align: center;"">T(z)</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">0 to 5D</td>
<td style=""text-align: center;"">z+21</td>
</tr>
<tr>
<td style=""text-align: center;"">5E to BD</td>
<td style=""text-align: center;"">z+42</td>
</tr>
<tr>
<td style=""text-align: center;"">BE to DE</td>
<td style=""text-align: center;"">z-BE</td>
</tr>
<tr>
<td style=""text-align: center;"">DF to FF</td>
<td style=""text-align: center;"">z-60</td>
</tr>
</tbody>
</table>
</div><h1>Challenge</h1>
<p>Your task is to implement a program or a function or a subroutine that takes one integer, who represents the codepoint of a character, to return a sequence of integers that represents its corresponding UTF-1 value.</p>
<h1>Constraints</h1>
<p>Input shall be an nonnegative integer up to 0x7FFFFFFF.</p>
<h1>Rules</h1>
<ul>
<li>Standard loopholes apply.</li>
<li>Standard I/O rules apply.</li>
<li>Shortest code wins.</li>
</ul>
<h1>Test cases</h1>
<p>Taken from the Wikipedia article.</p>
<pre><code>    U+007F  7F
    U+0080  80
    U+009F  9F
    U+00A0  A0 A0
    U+00BF  A0 BF
    U+00C0  A0 C0
    U+00FF  A0 FF
    U+0100  A1 21
    U+015D  A1 7E
    U+015E  A1 A0
    U+01BD  A1 FF
    U+01BE  A2 21
    U+07FF  AA 72
    U+0800  AA 73
    U+0FFF  B5 48
    U+1000  B5 49
    U+4015  F5 FF
    U+4016  F6 21 21
    U+D7FF  F7 2F C3
    U+E000  F7 3A 79
    U+F8FF  F7 5C 3C
    U+FDD0  F7 62 BA
    U+FDEF  F7 62 D9
    U+FEFF  F7 64 4C
    U+FFFD  F7 65 AD
    U+FFFE  F7 65 AE
    U+FFFF  F7 65 AF
   U+10000  F7 65 B0
   U+38E2D  FB FF FF
   U+38E2E  FC 21 21 21 21
   U+FFFFF  FC 21 37 B2 7A
  U+100000  FC 21 37 B2 7B
  U+10FFFF  FC 21 39 6E 6C
U+7FFFFFFF  FD BD 2B B9 40
</code></pre>
","","user100411"
"237598","<h1><a href=""https://esolangs.org/wiki/CLC-INTERCAL"" rel=""nofollow noreferrer"">CLC-INTERCAL</a>, 144 bytes.</h1>
<p>In ISO-8859-1:</p>
<pre><code>DO,1&lt;-#99DOWRITEIN,1DO;1&lt;-#2DO;1SUB#1&lt;-#52DO;1SUB#2&lt;-#360(1)DO.1&lt;-',1SUB#3'~#31(3)DO¬x(6)DO¬x(7)DO¬x(24)DO¬xDO;1SUB#2&lt;-#0DOCOMEFROM.1DOREADOUT;1
</code></pre>
<h2>Usage</h2>
<ul>
<li>Stdin and stdout, both of each as a line.
<ul>
<li>No trailing LF for output.</li>
</ul>
</li>
</ul>
<h2><a href=""http://golf.shinh.org/check.rb"" rel=""nofollow noreferrer"">Copy and paste the following Bash script to test online on shinh's server!</a></h2>
<pre class=""lang-bash prettyprint-override""><code>printf %s &quot;$(cat&lt;&lt;'x'
DO,1&lt;-#99DOWRITEIN,1DO;1&lt;-#2DO;1SUB#1&lt;-#52DO;1SUB#2&lt;-#360(1)DO.1&lt;-',1SUB#3'~#31(3)DO¬x(6)DO¬x(7)DO¬x(24)DO¬xDO;1SUB#2&lt;-#0DOCOMEFROM.1DOREADOUT;1
x
)&quot; | iconv -f UTF-8 -t LATIN1 &gt;x.i
wc -c x.i
sick x.i
while IFS=: read x _; do
echo $x
./x.io &lt;&lt;&lt;$x
echo
done&lt;&lt;'x'
airplane: an
water: a
snake: a
hybrid: a
igloo: an
WATER: a
IglOO: an
HoUr: a
unIverSe: an
youTH: a
x
</code></pre>
<h2>How it works</h2>
<p>The idea was just to make &quot;an&quot; on the variable <code>;1</code> and then erase &quot;n&quot; unless vowel. I used Baudot character set for input.</p>
","","user100411"